{"version":3,"sources":["components/Header/Header.js","components/Footer/Footer.js","components/Welcome/Welcome.js","components/NotFound/NotFound.js","components/InsertCostume/InsertCostume.js","services/InsertData.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","id","href","this","props","name","Component","Footer","Welcome","NotFound","InsertCostume","state","descr","date","sex","redirectToReferrer","insert","bind","onChange","type","costumeData","Promise","resolve","reject","fetch","BaseURL","method","headers","body","JSON","stringify","then","response","json","res","catch","error","result","responseJson","sessionStorage","setItem","setState","alert","e","target","value","getItem","to","placeholder","onClick","Routes","exact","path","component","App","appName","home","data-off-canvas-wrapper","data-off-canvas-content","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4555a27d.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './Header.css';\r\n\r\nclass Header extends Component{\r\n    render() {\r\n        return(\r\n            <div className=\"callout headcolor\" id=\"Header\">\r\n                <div className=\"row column\">\r\n                    <a href=\"/\"><h1 id=\"tit\">{this.props.name}</h1></a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\n\r\nclass Footer extends Component {\r\nrender() {\r\nreturn (\r\n<div className=\"row\" id=\"footer\">\r\n<div className=\"medium-12 columns\">\r\n<p>Copyright 2019 , <a href=\"http://88.197.53.80/eirini/\"> KostoumArt</a></p>\r\n</div>\r\n</div>\r\n);\r\n}\r\n}\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\nimport './Welcome.css';\r\n\r\nclass Welcome extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"row\" id=\"Body\">\r\n            <div className=\"medium-12 columns\">\r\n            <h2 id=\"welcomeText\">Welcome to KostumeArt Platform</h2>\r\n            <a href='/insertCostume' className=\"button\">Insert data</a>\r\n            <a href='/' className=\"button warning\">Delete data</a>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Welcome;","import React, {Component} from 'react';\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row small-up-2 medium-up-3 large-up-4\" id=\"Body\">\r\n            <div className=\"medium-12 columns\">\r\n            <h2>404 Page</h2>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React, {Component} from 'react';\r\nimport {InsertData} from '../../services/InsertData';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass InsertCostume extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n        name: '',\r\n        descr: '',\r\n        date: '',\r\n        sex: '',\r\n        redirectToReferrer: false\r\n        };\r\n        this.insert = this.insert.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    insert() {\r\n        if(this.state.name && this.state.descr && this.state.date && this.state.sex){\r\n            InsertData('insertCostume',this.state).then((result) => {\r\n            let responseJson = result;\r\n            if(responseJson.costumeData){\r\n                sessionStorage.setItem('costumeData',JSON.stringify(responseJson));\r\n                this.setState({redirectToReferrer: true});\r\n            }\r\n            else\r\n                alert(result.error);\r\n        });\r\n        }\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirectToReferrer || sessionStorage.getItem('costumeData')) {\r\n            return (<Redirect to={'/'}/>)\r\n        }\r\n        return (\r\n            <div className=\"row \" id=\"sBody\">\r\n            <div className=\"medium-5 columns left\">\r\n            <h4>InsertData</h4>\r\n            <input type=\"text\" name=\"name\" placeholder=\"Name\" onChange={this.onChange}/>\r\n            <input type=\"text\" name=\"descr\" placeholder=\"Description\" onChange={this.onChange}/>\r\n            <input type=\"text\" name=\"date\" placeholder=\"Date\" onChange={this.onChange}/>\r\n            <input type=\"text\" name=\"sex\" placeholder=\"Sex\" onChange={this.onChange}/>\r\n            <input type=\"submit\" className=\"button\" value=\"Save\" onClick={this.insert}/>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default InsertCostume;","export function InsertData(type, costumeData) {\r\n    let BaseURL = 'http://localhost/react-costume-platform-php/api/index.php';\r\n    \r\n    return new Promise((resolve, reject) =>{\r\n        fetch(BaseURL+'?tp='+type,{\r\n        \r\n            method: 'POST',\r\n            headers:\r\n            {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body:JSON.stringify(costumeData)\r\n        })\r\n        .then((response) => response.json()\r\n        .then((res) => { \r\n            resolve(res); }))\r\n        .catch((error) => { \r\n            reject(error); });\r\n    });\r\n}\r\n\r\n","import React from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport Welcome from './components/Welcome/Welcome';\r\nimport NotFound from './components/NotFound/NotFound';\r\nimport InsertCostume from './components/InsertCostume/InsertCostume';\r\n\r\nconst Routes = () => (\r\n    <BrowserRouter >\r\n    <Switch>\r\n    <Route exact path=\"/\" component={Welcome}/>\r\n    <Route exact path=\"/insertCostume\" component={InsertCostume}/>\r\n    <Route path=\"*\" component={NotFound}/>\r\n    </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Routes;","import React, {Component} from 'react';\nimport './styles/foundation.min.css';\nimport './styles/custom.css';\nimport './styles/react-confirm-alert.css';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport Routes from './routes';\n\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state={\n      appName: \"KostoumArt Platform\",\n      home: false\n    }\n  }\n\n  render(){\n    return(\n      <div className=\"off-canvas-wrapper\">\n      <div className=\"off-canvas-wrapper-inner\" data-off-canvas-wrapper>\n      <div className=\"off-canvas-content\" data-off-canvas-content>\n      <Header name={this.state.appName}/>\n      <Routes name={this.state.appName}/>\n      <hr/>\n      <Footer/>\n      </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}