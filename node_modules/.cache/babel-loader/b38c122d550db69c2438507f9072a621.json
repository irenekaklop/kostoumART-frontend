{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react-costume-platform\\\\src\\\\components\\\\DisplayCostumes\\\\DisplayCostumes.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport { Paper } from '@material-ui/core';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport './DisplayCostumes.css';\nimport { InsertData } from '../../services/InsertData';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n}))(TableRow);\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n    overflowX: 'auto'\n  },\n  table: {\n    minWidth: 700\n  }\n}));\n\nclass DisplayCostumes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      costumeData: '',\n      redirectToReferrer: false\n    };\n    this.onChange = this.onChange.bind(this);\n    this.getCostumes = this.getCostumes.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({\n      costumeData: e.target.value\n    });\n  }\n\n  getCostumes() {\n    InsertData('costumes', this.state).then(result => {\n      let responseJson = result;\n\n      if (responseJson.costumeData) {\n        sessionStorage.setItem(\"costumeData\", JSON.stringify(responseJson));\n        this.setState({\n          data: responseJson.costumeData\n        });\n        console.log(this.state);\n      } else {\n        alert(result.error);\n      }\n    });\n  }\n\n  renderTableData() {\n    return this.state.data.map((costume, index) => {\n      const costume_id = costume.costume_id,\n            name = costume.name,\n            description = costume.description;\n      return React.createElement(TableRow, {\n        key: costume_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(StyledTableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, costume_id), React.createElement(StyledTableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, name), React.createElement(StyledTableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, description));\n    });\n  }\n\n  render() {\n    const classes = useStyles();\n    return React.createElement(Paper, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Costumes' Archive\"), React.createElement(Table, {\n      className: classes.table,\n      id: \"costumes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      className: \"head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(StyledTableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"ID\"), React.createElement(StyledTableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Name\"), React.createElement(StyledTableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Description\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.renderTableData())), this.getCostumes());\n  }\n\n}","map":{"version":3,"sources":["C:\\xampp\\htdocs\\react-costume-platform\\src\\components\\DisplayCostumes\\DisplayCostumes.js"],"names":["React","Component","PropTypes","Table","Paper","TableBody","TableCell","TableHead","TableRow","InsertData","withStyles","makeStyles","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","root","background","default","useStyles","width","marginTop","spacing","overflowX","table","minWidth","DisplayCostumes","constructor","props","state","data","costumeData","redirectToReferrer","onChange","bind","getCostumes","e","setState","target","value","then","result","responseJson","sessionStorage","setItem","JSON","stringify","console","log","alert","error","renderTableData","map","costume","index","costume_id","name","description","render","classes"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport { Paper } from '@material-ui/core';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport './DisplayCostumes.css';\r\nimport { InsertData } from '../../services/InsertData';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n  \r\nconst StyledTableRow = withStyles(theme => ({\r\n   root: {\r\n    '&:nth-of-type(odd)': {\r\n    backgroundColor: theme.palette.background.default,\r\n    },\r\n    },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n  }));\r\n\r\nclass DisplayCostumes extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data:[],\r\n            costumeData: '',\r\n            redirectToReferrer: false,\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.getCostumes = this.getCostumes.bind(this);\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({costumeData:e.target.value});\r\n        }\r\n\r\n    getCostumes(){\r\n        InsertData('costumes', this.state).then((result) => {\r\n            let responseJson = result;\r\n            if(responseJson.costumeData){\r\n                sessionStorage.setItem(\"costumeData\",JSON.stringify(responseJson));\r\n                this.setState({data: responseJson.costumeData});\r\n                console.log(this.state);\r\n            }\r\n            else{\r\n                alert(result.error);\r\n            }\r\n        });\r\n        \r\n    }\r\n\r\n    renderTableData(){\r\n        return this.state.data.map((costume, index) => {\r\n            const {costume_id, name, description} = costume;\r\n            return (\r\n                <TableRow key={costume_id}>\r\n                    <StyledTableCell>{costume_id}</StyledTableCell>\r\n                    <StyledTableCell>{name}</StyledTableCell>\r\n                    <StyledTableCell>{description}</StyledTableCell>\r\n                </TableRow>\r\n            )\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const classes = useStyles();\r\n        return(\r\n        <Paper className= {classes.root}>\r\n        <h4 id='title'>Costumes' Archive</h4>\r\n        <Table className={classes.table} id='costumes'>\r\n            <TableHead className='head'>\r\n                <TableRow>\r\n                    <StyledTableCell>ID</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">Name</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">Description</StyledTableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {this.renderTableData()}\r\n            </TableBody>\r\n        </Table>\r\n        {this.getCostumes()}\r\n       \r\n     </Paper>\r\n       )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}