{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react-costume-platform\\\\src\\\\components\\\\DisplayCostumes\\\\DisplayCostumes.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport { Paper } from '@material-ui/core';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport './DisplayCostumes.css';\nimport { InsertData } from '../../services/InsertData';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport ReactTable from \"react-table\";\nimport $ from \"jquery\";\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n    overflowX: \"hidden\"\n  },\n  table: {\n    minWidth: 658\n  },\n  columns: {\n    width: \"100%\"\n  }\n});\n\nclass DisplayCostumes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      costumeData: '',\n      redirectToReferrer: false\n    };\n    this.onChange = this.onChange.bind(this);\n    this.getCostumes = this.getCostumes.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({\n      costumeData: e.target.value\n    });\n  }\n\n  getCostumes() {\n    InsertData('costumes', this.state).then(result => {\n      let responseJson = result;\n\n      if (responseJson.costumeData) {\n        sessionStorage.setItem(\"costumeData\", JSON.stringify(responseJson));\n        this.setState({\n          data: responseJson.costumeData\n        });\n        console.log(this.state);\n      } else {\n        alert(result.error);\n      }\n    });\n  }\n\n  renderTableData() {\n    return this.state.data.map((costume, index) => {\n      const costume_id = costume.costume_id,\n            name = costume.name,\n            description = costume.description;\n      return React.createElement(TableRow, {\n        key: costume_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, name), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, description));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(ReactTable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"pageSizeOptions = \", [20, 30], \"; defaultPageSize = \", 20, \"; className=\\\"-striped -highlight\\\"; getTableProps=\", () => {\n      return {\n        onScroll: e => {\n          if (this.tableScrollTop === e.target.scrollTop) {\n            let left = e.target.scrollLeft > 0 ? e.target.scrollLeft : 0;\n            $(\".ReactTable .rt-tr .frozen\").css({\n              left: left\n            });\n          } else {\n            this.tableScrollTop = e.target.scrollTop;\n          }\n        }\n      };\n    }));\n  }\n\n}\n\nDisplayCostumes.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(DisplayCostumes);","map":{"version":3,"sources":["C:\\xampp\\htdocs\\react-costume-platform\\src\\components\\DisplayCostumes\\DisplayCostumes.js"],"names":["React","Component","PropTypes","Table","Paper","TableBody","TableCell","TableHead","TableRow","InsertData","withStyles","makeStyles","ReactTable","$","styles","theme","root","width","marginTop","spacing","overflowX","table","minWidth","columns","DisplayCostumes","constructor","props","state","data","costumeData","redirectToReferrer","onChange","bind","getCostumes","e","setState","target","value","then","result","responseJson","sessionStorage","setItem","JSON","stringify","console","log","alert","error","renderTableData","map","costume","index","costume_id","name","description","render","onScroll","tableScrollTop","scrollTop","left","scrollLeft","css","propTypes","classes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAO,uBAAP;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,0BAAvC;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACrBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,MADL;AAEFC,IAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CAFT;AAGFC,IAAAA,SAAS,EAAE;AAHT,GADe;AAOnBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GAPY;AAWrBC,EAAAA,OAAO,EAAE;AACLN,IAAAA,KAAK,EAAE;AADF;AAXY,CAAL,CAApB;;AAgBA,MAAMO,eAAN,SAA8BvB,SAA9B,CAAwC;AACpCwB,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAC,EADI;AAETC,MAAAA,WAAW,EAAE,EAFJ;AAGTC,MAAAA,kBAAkB,EAAE;AAHX,KAAb;AAKA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDD,EAAAA,QAAQ,CAACG,CAAD,EAAG;AACP,SAAKC,QAAL,CAAc;AAACN,MAAAA,WAAW,EAACK,CAAC,CAACE,MAAF,CAASC;AAAtB,KAAd;AACC;;AAELJ,EAAAA,WAAW,GAAE;AACTxB,IAAAA,UAAU,CAAC,UAAD,EAAa,KAAKkB,KAAlB,CAAV,CAAmCW,IAAnC,CAAyCC,MAAD,IAAY;AAChD,UAAIC,YAAY,GAAGD,MAAnB;;AACA,UAAGC,YAAY,CAACX,WAAhB,EAA4B;AACxBY,QAAAA,cAAc,CAACC,OAAf,CAAuB,aAAvB,EAAqCC,IAAI,CAACC,SAAL,CAAeJ,YAAf,CAArC;AACA,aAAKL,QAAL,CAAc;AAACP,UAAAA,IAAI,EAAEY,YAAY,CAACX;AAApB,SAAd;AACAgB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAjB;AACH,OAJD,MAKI;AACAoB,QAAAA,KAAK,CAACR,MAAM,CAACS,KAAR,CAAL;AACH;AACJ,KAVD;AAYH;;AAEDC,EAAAA,eAAe,GAAE;AACb,WAAO,KAAKtB,KAAL,CAAWC,IAAX,CAAgBsB,GAAhB,CAAoB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAAA,YACpCC,UADoC,GACHF,OADG,CACpCE,UADoC;AAAA,YACxBC,IADwB,GACHH,OADG,CACxBG,IADwB;AAAA,YAClBC,WADkB,GACHJ,OADG,CAClBI,WADkB;AAE3C,aACI,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEF,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYC,IAAZ,CADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYC,WAAZ,CAFJ,CADJ;AAMH,KARM,CAAP;AASH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACuB,CAAC,EAAD,EAAK,EAAL,CADvB,0BAEuB,EAFvB,yDAImB,MAAM;AACjB,aAAO;AACPC,QAAAA,QAAQ,EAAEvB,CAAC,IAAI;AACX,cAAI,KAAKwB,cAAL,KAAwBxB,CAAC,CAACE,MAAF,CAASuB,SAArC,EAAgD;AAChD,gBAAIC,IAAI,GAAG1B,CAAC,CAACE,MAAF,CAASyB,UAAT,GAAsB,CAAtB,GAA0B3B,CAAC,CAACE,MAAF,CAASyB,UAAnC,GAAgD,CAA3D;AACAhD,YAAAA,CAAC,CAAC,4BAAD,CAAD,CAAgCiD,GAAhC,CAAoC;AAAEF,cAAAA,IAAI,EAAEA;AAAR,aAApC;AACC,WAHD,MAGO;AACP,iBAAKF,cAAL,GAAsBxB,CAAC,CAACE,MAAF,CAASuB,SAA/B;AACC;AACJ;AARM,OAAP;AAUH,KAfL,CADJ,CADJ;AAqBH;;AAjEmC;;AAoExCnC,eAAe,CAACuC,SAAhB,GAA4B;AACxBC,EAAAA,OAAO,EAAE9D,SAAS,CAAC+D,MAAV,CAAiBC;AADF,CAA5B;AAIA,eAAexD,UAAU,CAACI,MAAD,CAAV,CAAmBU,eAAnB,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport { Paper } from '@material-ui/core';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport './DisplayCostumes.css';\r\nimport { InsertData } from '../../services/InsertData';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport ReactTable from \"react-table\";\r\nimport $ from \"jquery\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n        overflowX: \"hidden\"\r\n       \r\n      },\r\n      table: {\r\n        minWidth: 658,\r\n    },\r\n\r\n    columns: {\r\n        width: \"100%\"\r\n    }\r\n});\r\n\r\nclass DisplayCostumes extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data:[],\r\n            costumeData: '',\r\n            redirectToReferrer: false,\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.getCostumes = this.getCostumes.bind(this);\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({costumeData:e.target.value});\r\n        }\r\n\r\n    getCostumes(){\r\n        InsertData('costumes', this.state).then((result) => {\r\n            let responseJson = result;\r\n            if(responseJson.costumeData){\r\n                sessionStorage.setItem(\"costumeData\",JSON.stringify(responseJson));\r\n                this.setState({data: responseJson.costumeData});\r\n                console.log(this.state);\r\n            }\r\n            else{\r\n                alert(result.error);\r\n            }\r\n        });\r\n        \r\n    }\r\n\r\n    renderTableData(){\r\n        return this.state.data.map((costume, index) => {\r\n            const {costume_id, name, description} = costume;\r\n            return (\r\n                <TableRow key={costume_id}>\r\n                    <TableCell>{name}</TableCell>\r\n                    <TableCell>{description}</TableCell>\r\n                </TableRow>\r\n            )\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <ReactTable>\r\n                    pageSizeOptions = {[20, 30]};\r\n                    defaultPageSize = {20};\r\n                    className=\"-striped -highlight\";\r\n                    getTableProps={() => {\r\n                        return {\r\n                        onScroll: e => {\r\n                            if (this.tableScrollTop === e.target.scrollTop) {\r\n                            let left = e.target.scrollLeft > 0 ? e.target.scrollLeft : 0;\r\n                            $(\".ReactTable .rt-tr .frozen\").css({ left: left });\r\n                            } else {\r\n                            this.tableScrollTop = e.target.scrollTop;\r\n                            }\r\n                        }\r\n                        };\r\n                    }}\r\n                </ReactTable>\r\n            </div>\r\n       )\r\n    }\r\n}\r\n\r\nDisplayCostumes.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n  \r\nexport default withStyles(styles)(DisplayCostumes);\r\n  "]},"metadata":{},"sourceType":"module"}