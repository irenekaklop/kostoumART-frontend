{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react-costume-platform\\\\src\\\\components\\\\InsertCostume\\\\InsertCostume.js\";\nimport React, { Component } from 'react';\nimport { PostData } from '../../services/PostData';\nimport { Redirect } from 'react-router-dom';\nimport Select from 'react-select';\nimport \"./InsertCostume.css\";\nimport \"../Geosuggest/Geosuggest.css\";\nimport { TextArea } from 'semantic-ui-react';\nimport Geosuggest from 'react-geosuggest';\nimport { sexs, materials, techniques } from \"../../utils/options\";\nimport CreatableSelect from 'react-select/creatable';\n\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.name;\n}\n\nfunction renderSuggestion(suggestion) {\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, suggestion.name);\n}\n\nclass InsertCostume extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLocationChange = location_select => {\n      this.setState({\n        location_select\n      });\n      console.log(\"HandleLocationChange:\", this.state);\n    };\n\n    this.handleLocationSelect = location_select => {\n      this.setState({\n        location_select\n      });\n      console.log(\"Option selected:\", location_select);\n    };\n\n    this.handleLocationInfluenceChange = location_influence_select => {\n      this.setState({\n        location_influence_select\n      });\n      console.log(\"HandleLocationChange:\", this.state);\n    };\n\n    this.handleLocationInfluenceSelect = location_infuence_select => {\n      this.setState({\n        location_infuence_select\n      });\n      console.log(\"Option selected:\", location_infuence_select);\n    };\n\n    this.handleUseSelect = selectedUseOption => {\n      this.setState({\n        selectedUseOption\n      });\n      console.log(\"Option selected:\", selectedUseOption);\n    };\n\n    this.handleSexSelect = selectedSexOption => {\n      this.setState({\n        selectedSexOption\n      });\n      console.log(\"Option selected:\", selectedSexOption);\n    };\n\n    this.handleMaterialSelect = selectedMaterialOption => {\n      this.setState({\n        selectedMaterialOption\n      });\n      console.log(\"Option selected:\", selectedMaterialOption);\n    };\n\n    this.handleTechniqueSelect = selectedTechniqueOption => {\n      this.setState({\n        selectedTechniqueOption\n      });\n      console.log(\"Option selected:\", selectedTechniqueOption);\n    };\n\n    this.handleInputChange = newValue => {\n      this.setState({\n        newValue\n      });\n      console.log(\"Option selected:\", newValue);\n    };\n\n    this.onChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n    };\n\n    this.onChangeValue = (e, {\n      newValue,\n      method\n    }) => {\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.onSuggestionsFetchRequested = ({\n      value\n    }) => {\n      this.setState({\n        suggestions: this.getSuggestions(value)\n      });\n    };\n\n    this.onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    this.state = {\n      name: '',\n      descr: '',\n      //Sex data on insert\n      s_value: '',\n      //Uses' data\n      u_data: [],\n      usesData: '',\n      //for Use suggestion on insert\n      u_value: '',\n      newValue: '',\n      //Select\n      selectedSexOption: null,\n      selectedUseOption: null,\n      selectedMaterialOption: null,\n      selectedTechniqueOption: null,\n      //Geosuggest\n      location: '',\n      location_select: '',\n      location_infuence: '',\n      location_infuence_select: '',\n      //For validation reasons\n      description_MAXlegnth: 300,\n      description_status: false,\n      submit: false,\n      redirectToReferrer: false\n    };\n    this.insert = this.insert.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onChangeValue = this.onChangeValue.bind(this);\n    this.get_uses = this.get_uses.bind(this);\n  }\n  /*Secure way to getData*/\n\n\n  componentDidMount() {\n    this.get_uses();\n  }\n  /*Geosuggest functions*/\n\n\n  handleLocation() {\n    if (this.state.location_select) {\n      this.state.location = this.state.location_select.description;\n      console.log(this.state);\n    }\n  }\n\n  handleLocationInfluence() {\n    if (this.state.location_infuence_select) {\n      this.state.location_infuence = this.state.location_infuence_select.description;\n      console.log(this.state);\n    }\n  }\n\n  decription_legnth() {\n    return this.state.descr.length;\n  }\n\n  handleValidation() {\n    if (this.decription_legnth() < 300) {\n      this.state.description_status = true;\n    }\n\n    if (this.state.name && this.state.description_status && this.state.selectedSexOption && this.state.selectedUseOption) {\n      this.state.submit = true;\n    }\n  }\n  /*For selection of use categories*/\n\n\n  getSuggestions(value) {\n    const escapedValue = escapeRegexCharacters(value.trim());\n\n    if (escapedValue === '') {\n      return [];\n    }\n\n    const regex = new RegExp('^' + escapedValue, 'i');\n    return this.state.u_data.filter(usesData => regex.test(usesData.name));\n  }\n\n  /* Get uses from database*/\n  get_uses() {\n    PostData('get_uses', this.state).then(result => {\n      let responseJson = result;\n\n      if (responseJson.usesData) {\n        sessionStorage.setItem(\"usesData\", JSON.stringify(responseJson));\n        this.setState({\n          u_data: responseJson.usesData\n        });\n        console.log(this.state);\n      } else {\n        alert(result.error);\n      }\n    });\n  }\n  /*Insert of costume*/\n\n\n  insert() {\n    if (this.state.name && this.state.description_status && this.state.selectedSexOption && this.state.selectedUseOption) {\n      this.state.u_value = this.state.selectedUseOption.value;\n\n      for (var key in this.state.selectedSexOption) {\n        this.state.s_value = this.state.selectedSexOption[key].value;\n        PostData('insertCostume', this.state).then(result => {\n          let responseJson = result;\n\n          if (responseJson.costumeData) {\n            sessionStorage.setItem('costumeData', JSON.stringify(responseJson));\n            this.setState({\n              redirectToReferrer: true\n            });\n          } else alert(result.error);\n        });\n      }\n    }\n  }\n\n  render() {\n    if (this.state.redirectToReferrer) {\n      return sessionStorage.setItem('costumeData', ''), sessionStorage.clear(), React.createElement(Redirect, {\n        to: '/success',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      });\n    } else if (sessionStorage.getItem('costumeData')) {\n      sessionStorage.setItem('costumeData', '');\n      sessionStorage.clear();\n    } //For selection of Sex: \n\n\n    const selectedSexOption = this.state.selectedSexOption; //For selection of Use:\n\n    const selectedUseOption = this.state.selectedUseOption; //For selection of Material\n\n    const selectedMaterialOption = this.state.selectedMaterialOption; //For selection of Technique\n\n    const selectedTechniqueOption = this.state.selectedTechniqueOption;\n    const u_options = [];\n\n    for (var key in this.state.u_data) {\n      u_options.push({\n        label: this.state.u_data[key].name,\n        value: this.state.u_data[key].name\n      });\n    }\n\n    console.log(this.state);\n    console.log(u_options, sexs);\n    this.handleValidation();\n    return React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \" \\u03A4\\u03AF\\u03C4\\u03BB\\u03BF\\u03C2\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Name\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"\\u03A0\\u03B5\\u03C1\\u03B9\\u03B3\\u03C1\\u03B1\\u03C6\\u03AE\"), React.createElement(TextArea, {\n      type: \"text\",\n      name: \"descr\",\n      onChange: this.onChange,\n      maxLength: this.state.description_MAXlegnth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"remaining-chars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"chars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, this.state.description_MAXlegnth - this.decription_legnth()), \" characters remaining\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \" \\u03A7\\u03C1\\u03AE\\u03C3\\u03B7\", React.createElement(Select, {\n      className: \"select-box\",\n      value: selectedUseOption,\n      options: u_options,\n      maxMenuHeight: 200,\n      onChange: this.handleUseSelect,\n      closeMenuOnSelect: true,\n      isSearchable: true,\n      ignoreCase: true,\n      ignoreAccents: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \" \\u03A6\\u03CD\\u03BB\\u03BF\", React.createElement(Select, {\n      className: \"select-box\",\n      value: selectedSexOption,\n      isMulti: true,\n      maxMenuHeight: 150,\n      closeMenuOnSelect: true,\n      onChange: this.handleSexSelect,\n      options: sexs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \" \\u03A5\\u03BB\\u03B9\\u03BA\\u03CC\", React.createElement(CreatableSelect, {\n      className: \"select-box\",\n      isClearable: true,\n      onChange: this.handleMaterialSelect,\n      value: selectedMaterialOption,\n      options: materials,\n      maxMenuHeight: 200,\n      closeMenuOnSelect: true,\n      isSearchable: true,\n      ignoreAccents: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \" \\u03A4\\u03B5\\u03C7\\u03BD\\u03B9\\u03BA\\u03AE\", React.createElement(CreatableSelect, {\n      className: \"select-box\",\n      isClearable: true,\n      onChange: this.handleTechniqueSelect,\n      value: selectedTechniqueOption,\n      options: techniques,\n      maxMenuHeight: 200,\n      closeMenuOnSelect: true,\n      isSearchable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \" Location:\", React.createElement(Geosuggest, {\n      onChange: this.handleLocationChange,\n      onSuggestSelect: this.handleLocationSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }), this.handleLocation()), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \" \\u03A0\\u03B5\\u03C1\\u03B9\\u03BF\\u03C7\\u03AE \\u03B5\\u03C0\\u03B9\\u03C1\\u03C1\\u03BF\\u03AE\\u03C2:\", React.createElement(Geosuggest, {\n      onChange: this.handleLocationInfluenceChange,\n      onSuggestSelect: this.handleLocationInfluenceSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }), (this.handleLocation(), this.handleLocationInfluence())), React.createElement(\"button\", {\n      disabled: !this.state.submit,\n      type: \"submit\",\n      className: \"button-save\",\n      onClick: this.insert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, \"Save\")));\n  }\n\n}\n\nexport default InsertCostume;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\react-costume-platform\\src\\components\\InsertCostume\\InsertCostume.js"],"names":["React","Component","PostData","Redirect","Select","TextArea","Geosuggest","sexs","materials","techniques","CreatableSelect","escapeRegexCharacters","str","replace","getSuggestionValue","suggestion","name","renderSuggestion","InsertCostume","constructor","props","handleLocationChange","location_select","setState","console","log","state","handleLocationSelect","handleLocationInfluenceChange","location_influence_select","handleLocationInfluenceSelect","location_infuence_select","handleUseSelect","selectedUseOption","handleSexSelect","selectedSexOption","handleMaterialSelect","selectedMaterialOption","handleTechniqueSelect","selectedTechniqueOption","handleInputChange","newValue","onChange","evt","target","value","onChangeValue","e","method","onSuggestionsFetchRequested","suggestions","getSuggestions","onSuggestionsClearRequested","descr","s_value","u_data","usesData","u_value","location","location_infuence","description_MAXlegnth","description_status","submit","redirectToReferrer","insert","bind","get_uses","componentDidMount","handleLocation","description","handleLocationInfluence","decription_legnth","length","handleValidation","escapedValue","trim","regex","RegExp","filter","test","then","result","responseJson","sessionStorage","setItem","JSON","stringify","alert","error","key","costumeData","render","clear","getItem","u_options","push","label"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {PostData} from '../../services/PostData';\r\nimport {Redirect} from 'react-router-dom'; \r\nimport Select from 'react-select';\r\nimport \"./InsertCostume.css\";\r\nimport \"../Geosuggest/Geosuggest.css\";\r\nimport { TextArea } from 'semantic-ui-react';\r\nimport Geosuggest from 'react-geosuggest';\r\nimport {sexs, materials, techniques} from \"../../utils/options\";\r\nimport CreatableSelect from 'react-select/creatable';\r\n\r\nfunction escapeRegexCharacters(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n    return suggestion.name;\r\n}\r\n  \r\nfunction renderSuggestion(suggestion) {\r\n    return (\r\n      <span>{suggestion.name}</span>\r\n    );\r\n}\r\n\r\nclass InsertCostume extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            descr: '',\r\n            //Sex data on insert\r\n            s_value: '',\r\n            //Uses' data\r\n            u_data:[],\r\n            usesData: '',\r\n            //for Use suggestion on insert\r\n            u_value: '', \r\n            newValue: '',\r\n            //Select\r\n            selectedSexOption: null,\r\n            selectedUseOption: null,\r\n            selectedMaterialOption: null,\r\n            selectedTechniqueOption: null,\r\n            //Geosuggest\r\n            location:'',\r\n            location_select:'',\r\n            location_infuence:'',\r\n            location_infuence_select:'',\r\n\r\n            //For validation reasons\r\n            description_MAXlegnth: 300,\r\n            description_status: false,\r\n            submit: false,\r\n            redirectToReferrer: false\r\n        };\r\n        this.insert = this.insert.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onChangeValue = this.onChangeValue.bind(this);\r\n        this.get_uses = this.get_uses.bind(this);\r\n    }\r\n\r\n    /*Secure way to getData*/\r\n    componentDidMount(){\r\n        this.get_uses();\r\n    }\r\n\r\n    /*Geosuggest functions*/\r\n    handleLocationChange = location_select => {\r\n        this.setState({ location_select });\r\n        console.log(\"HandleLocationChange:\", this.state);\r\n    };\r\n\r\n    handleLocationSelect = (location_select) => {\r\n        this.setState({ location_select });\r\n        console.log(`Option selected:`, location_select);\r\n    }\r\n\r\n    handleLocationInfluenceChange = location_influence_select => {\r\n        this.setState({ location_influence_select });\r\n        console.log(\"HandleLocationChange:\", this.state);\r\n    };\r\n\r\n    handleLocationInfluenceSelect = (location_infuence_select) => {\r\n        this.setState({location_infuence_select });\r\n        console.log(`Option selected:`, location_infuence_select);\r\n    }\r\n    \r\n    handleLocation(){\r\n        if(this.state.location_select){\r\n            this.state.location = this.state.location_select.description;\r\n            console.log(this.state);\r\n        }\r\n    }\r\n\r\n    handleLocationInfluence(){\r\n        if(this.state.location_infuence_select){\r\n            this.state.location_infuence = this.state.location_infuence_select.description;\r\n            console.log(this.state);\r\n        }\r\n\r\n    }\r\n\r\n    decription_legnth(){\r\n        return this.state.descr.length;\r\n    }\r\n\r\n    handleValidation(){\r\n        if(this.decription_legnth() < 300){\r\n            this.state.description_status = true;\r\n        }\r\n\r\n        if(this.state.name &&  this.state.description_status && this.state.selectedSexOption && this.state.selectedUseOption){\r\n            this.state.submit = true;\r\n        }\r\n    }\r\n\r\n    /*For selection of use categories*/\r\n    handleUseSelect = (selectedUseOption) => {\r\n        this.setState({selectedUseOption});\r\n        console.log(`Option selected:`, selectedUseOption);\r\n    }\r\n\r\n    /*For mutli-selection of sex categories*/\r\n    handleSexSelect = (selectedSexOption) => {\r\n        this.setState({ selectedSexOption });\r\n        console.log(`Option selected:`, selectedSexOption);\r\n    }\r\n\r\n    handleMaterialSelect = (selectedMaterialOption) => {\r\n        this.setState({ selectedMaterialOption });\r\n        \r\n        console.log(`Option selected:`, selectedMaterialOption);\r\n    }\r\n\r\n    /*handleMaterialChange = (selectedMaterialOption, actionMeta) => {\r\n        console.group('Value Changed');\r\n        console.log(selectedMaterialOption);\r\n        console.log(`action: ${actionMeta.action}`);\r\n        console.groupEnd();\r\n      };*/\r\n\r\n    handleTechniqueSelect = (selectedTechniqueOption) => {\r\n        this.setState({ selectedTechniqueOption });\r\n        console.log(`Option selected:`, selectedTechniqueOption);\r\n    }\r\n\r\n    handleInputChange = (newValue) => {\r\n        this.setState({newValue});\r\n        console.log(`Option selected:`, newValue);\r\n\r\n    };\r\n\r\n    /*Change functions for text fields*/\r\n    onChange = ( evt ) => { this.setState({ [evt.target.name]: evt.target.value }); };\r\n\r\n    /*Change functions for auto-suggest field*/\r\n    onChangeValue = ( e, {newValue, method}) => {\r\n        this.setState({\r\n            value: newValue\r\n        })\r\n    };\r\n\r\n    /*Functions for use suggestions -- NOT USED*/\r\n    onSuggestionsFetchRequested = ({ value }) => {\r\n        this.setState({\r\n          suggestions: this.getSuggestions(value)\r\n        });\r\n    };\r\n    \r\n    onSuggestionsClearRequested = () => {\r\n        this.setState({\r\n          suggestions: []\r\n        });\r\n    };\r\n\r\n    getSuggestions(value) {\r\n        const escapedValue = escapeRegexCharacters(value.trim());   \r\n        if (escapedValue === '') {\r\n          return [];\r\n        }\r\n        const regex = new RegExp('^' + escapedValue, 'i');\r\n      \r\n        return this.state.u_data.filter(usesData => regex.test(usesData.name));\r\n    };\r\n\r\n    /* Get uses from database*/ \r\n    get_uses(){\r\n        PostData('get_uses', this.state).then((result) => {\r\n            let responseJson = result;\r\n            if(responseJson.usesData){\r\n                sessionStorage.setItem(\"usesData\",JSON.stringify(responseJson));\r\n                this.setState({u_data: responseJson.usesData});\r\n                console.log(this.state);\r\n            }\r\n            else{\r\n                alert(result.error);\r\n            }\r\n        });\r\n    }\r\n\r\n    /*Insert of costume*/\r\n\r\n    insert() {\r\n        if(this.state.name && this.state.description_status && this.state.selectedSexOption && this.state.selectedUseOption){\r\n            this.state.u_value = this.state.selectedUseOption.value;\r\n            for(var key in this.state.selectedSexOption){\r\n                    this.state.s_value = this.state.selectedSexOption[key].value;\r\n                    PostData('insertCostume',this.state).then((result) => {\r\n                    let responseJson = result;\r\n                    if(responseJson.costumeData){\r\n                        sessionStorage.setItem('costumeData',JSON.stringify(responseJson));\r\n                        this.setState({redirectToReferrer: true});\r\n                    }\r\n                    else\r\n                        alert(result.error);\r\n                    });\r\n           }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirectToReferrer) {\r\n            return (\r\n                sessionStorage.setItem('costumeData',''),\r\n                sessionStorage.clear(),\r\n                <Redirect to={'/success'}/>)\r\n        }\r\n        else if (sessionStorage.getItem('costumeData')){\r\n            sessionStorage.setItem('costumeData','');\r\n            sessionStorage.clear();\r\n        }\r\n\r\n        //For selection of Sex: \r\n        const {selectedSexOption} = this.state;\r\n        //For selection of Use:\r\n        const {selectedUseOption} = this.state;\r\n        //For selection of Material\r\n        const {selectedMaterialOption} = this.state;\r\n        //For selection of Technique\r\n        const {selectedTechniqueOption} = this.state;\r\n        const u_options = [];\r\n\r\n        for (var key in this.state.u_data){\r\n            u_options.push( {label: this.state.u_data[key].name, value: this.state.u_data[key].name});\r\n        }\r\n        console.log(this.state);\r\n        console.log(u_options, sexs);\r\n       \r\n        this.handleValidation();\r\n\r\n        return ( \r\n                <div className=\"main\"> \r\n                <form className=\"form\">\r\n                    <label> Τίτλος\r\n                    <input type=\"text\" name=\"name\" placeholder=\"Name\" onChange={this.onChange}/></label>\r\n                    <label>Περιγραφή</label> \r\n                    <TextArea type=\"text\" name=\"descr\" onChange={this.onChange} maxLength={this.state.description_MAXlegnth}></TextArea>\r\n                    <div className=\"remaining-chars\"><span id=\"chars\">{this.state.description_MAXlegnth-this.decription_legnth()}</span> characters remaining</div>\r\n                    <label> Χρήση\r\n                        <Select className = \"select-box\"\r\n                            value = {selectedUseOption}\r\n                            options = {u_options}\r\n                            maxMenuHeight={200}\r\n                            onChange = {this.handleUseSelect}\r\n                            closeMenuOnSelect={true}  \r\n                            isSearchable        \r\n                            ignoreCase\r\n                            ignoreAccents           \r\n                        />\r\n                    </label>\r\n                    <label> Φύλο\r\n                        <Select className = \"select-box\"\r\n                            value = {selectedSexOption} \r\n                            isMulti                                \r\n                            maxMenuHeight={150}\r\n                            closeMenuOnSelect={true}\r\n                            onChange = {this.handleSexSelect}\r\n                            options = {sexs}\r\n                        />\r\n                    </label>\r\n                    <label> Υλικό\r\n                        <CreatableSelect className = \"select-box\"\r\n                            isClearable\r\n                            onChange={this.handleMaterialSelect}\r\n                            value = {selectedMaterialOption}\r\n                            options = {materials}\r\n                            maxMenuHeight={200}\r\n                            closeMenuOnSelect={true}  \r\n                            isSearchable   \r\n                            ignoreAccents                \r\n                        />\r\n                    </label>\r\n                    <label> Τεχνική\r\n                        <CreatableSelect className = \"select-box\"\r\n                            isClearable\r\n                            onChange={this.handleTechniqueSelect}\r\n                            value = {selectedTechniqueOption}\r\n                            options = {techniques}\r\n                            maxMenuHeight={200}\r\n                            closeMenuOnSelect={true}  \r\n                            isSearchable                   \r\n                        />\r\n                    </label>\r\n                    <label> Location: \r\n                        <Geosuggest \r\n                            onChange={this.handleLocationChange}\r\n                            onSuggestSelect={this.handleLocationSelect}\r\n                        />\r\n                        {this.handleLocation()}\r\n                   </label>\r\n                   <label> Περιοχή επιρροής: \r\n                        <Geosuggest \r\n                            onChange={this.handleLocationInfluenceChange}\r\n                            onSuggestSelect={this.handleLocationInfluenceSelect}\r\n                        />\r\n                        {this.handleLocation(),\r\n                        this.handleLocationInfluence()}\r\n                   </label>\r\n                    <button disabled = {!this.state.submit} type=\"submit\" className=\"button-save\" onClick={this.insert}>Save</button>\r\n                </form>\r\n                </div>\r\n                \r\n        );\r\n    }\r\n}\r\n\r\nexport default InsertCostume;\r\n\r\n"]},"metadata":{},"sourceType":"module"}