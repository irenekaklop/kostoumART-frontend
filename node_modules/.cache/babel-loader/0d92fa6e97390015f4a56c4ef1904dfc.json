{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.unscopables.flat\");\n\nrequire(\"core-js/modules/es.array.unscopables.flat-map\");\n\nrequire(\"core-js/modules/es.promise\");\n\nrequire(\"core-js/modules/es.promise.finally\");\n\nrequire(\"core-js/modules/es.string.replace\");\n\nrequire(\"core-js/modules/es.typed-array.float32-array\");\n\nrequire(\"core-js/modules/es.typed-array.float64-array\");\n\nrequire(\"core-js/modules/es.typed-array.int8-array\");\n\nrequire(\"core-js/modules/es.typed-array.int16-array\");\n\nrequire(\"core-js/modules/es.typed-array.int32-array\");\n\nrequire(\"core-js/modules/es.typed-array.uint8-array\");\n\nrequire(\"core-js/modules/es.typed-array.uint8-clamped-array\");\n\nrequire(\"core-js/modules/es.typed-array.uint16-array\");\n\nrequire(\"core-js/modules/es.typed-array.uint32-array\");\n\nrequire(\"core-js/modules/es.typed-array.from\");\n\nrequire(\"core-js/modules/es.typed-array.of\");\n\nrequire(\"core-js/modules/esnext.aggregate-error\");\n\nrequire(\"core-js/modules/esnext.array.last-index\");\n\nrequire(\"core-js/modules/esnext.array.last-item\");\n\nrequire(\"core-js/modules/esnext.composite-key\");\n\nrequire(\"core-js/modules/esnext.composite-symbol\");\n\nrequire(\"core-js/modules/esnext.map.delete-all\");\n\nrequire(\"core-js/modules/esnext.map.every\");\n\nrequire(\"core-js/modules/esnext.map.filter\");\n\nrequire(\"core-js/modules/esnext.map.find\");\n\nrequire(\"core-js/modules/esnext.map.find-key\");\n\nrequire(\"core-js/modules/esnext.map.from\");\n\nrequire(\"core-js/modules/esnext.map.group-by\");\n\nrequire(\"core-js/modules/esnext.map.includes\");\n\nrequire(\"core-js/modules/esnext.map.key-by\");\n\nrequire(\"core-js/modules/esnext.map.key-of\");\n\nrequire(\"core-js/modules/esnext.map.map-keys\");\n\nrequire(\"core-js/modules/esnext.map.map-values\");\n\nrequire(\"core-js/modules/esnext.map.merge\");\n\nrequire(\"core-js/modules/esnext.map.of\");\n\nrequire(\"core-js/modules/esnext.map.reduce\");\n\nrequire(\"core-js/modules/esnext.map.some\");\n\nrequire(\"core-js/modules/esnext.map.update\");\n\nrequire(\"core-js/modules/esnext.math.clamp\");\n\nrequire(\"core-js/modules/esnext.math.deg-per-rad\");\n\nrequire(\"core-js/modules/esnext.math.degrees\");\n\nrequire(\"core-js/modules/esnext.math.fscale\");\n\nrequire(\"core-js/modules/esnext.math.iaddh\");\n\nrequire(\"core-js/modules/esnext.math.imulh\");\n\nrequire(\"core-js/modules/esnext.math.isubh\");\n\nrequire(\"core-js/modules/esnext.math.rad-per-deg\");\n\nrequire(\"core-js/modules/esnext.math.radians\");\n\nrequire(\"core-js/modules/esnext.math.scale\");\n\nrequire(\"core-js/modules/esnext.math.seeded-prng\");\n\nrequire(\"core-js/modules/esnext.math.signbit\");\n\nrequire(\"core-js/modules/esnext.math.umulh\");\n\nrequire(\"core-js/modules/esnext.number.from-string\");\n\nrequire(\"core-js/modules/esnext.observable\");\n\nrequire(\"core-js/modules/esnext.promise.all-settled\");\n\nrequire(\"core-js/modules/esnext.promise.any\");\n\nrequire(\"core-js/modules/esnext.promise.try\");\n\nrequire(\"core-js/modules/esnext.reflect.define-metadata\");\n\nrequire(\"core-js/modules/esnext.reflect.delete-metadata\");\n\nrequire(\"core-js/modules/esnext.reflect.get-metadata\");\n\nrequire(\"core-js/modules/esnext.reflect.get-metadata-keys\");\n\nrequire(\"core-js/modules/esnext.reflect.get-own-metadata\");\n\nrequire(\"core-js/modules/esnext.reflect.get-own-metadata-keys\");\n\nrequire(\"core-js/modules/esnext.reflect.has-metadata\");\n\nrequire(\"core-js/modules/esnext.reflect.has-own-metadata\");\n\nrequire(\"core-js/modules/esnext.reflect.metadata\");\n\nrequire(\"core-js/modules/esnext.set.add-all\");\n\nrequire(\"core-js/modules/esnext.set.delete-all\");\n\nrequire(\"core-js/modules/esnext.set.difference\");\n\nrequire(\"core-js/modules/esnext.set.every\");\n\nrequire(\"core-js/modules/esnext.set.filter\");\n\nrequire(\"core-js/modules/esnext.set.find\");\n\nrequire(\"core-js/modules/esnext.set.from\");\n\nrequire(\"core-js/modules/esnext.set.intersection\");\n\nrequire(\"core-js/modules/esnext.set.is-disjoint-from\");\n\nrequire(\"core-js/modules/esnext.set.is-subset-of\");\n\nrequire(\"core-js/modules/esnext.set.is-superset-of\");\n\nrequire(\"core-js/modules/esnext.set.join\");\n\nrequire(\"core-js/modules/esnext.set.map\");\n\nrequire(\"core-js/modules/esnext.set.of\");\n\nrequire(\"core-js/modules/esnext.set.reduce\");\n\nrequire(\"core-js/modules/esnext.set.some\");\n\nrequire(\"core-js/modules/esnext.set.symmetric-difference\");\n\nrequire(\"core-js/modules/esnext.set.union\");\n\nrequire(\"core-js/modules/esnext.string.at\");\n\nrequire(\"core-js/modules/esnext.string.code-points\");\n\nrequire(\"core-js/modules/esnext.string.match-all\");\n\nrequire(\"core-js/modules/esnext.string.replace-all\");\n\nrequire(\"core-js/modules/esnext.symbol.dispose\");\n\nrequire(\"core-js/modules/esnext.symbol.observable\");\n\nrequire(\"core-js/modules/esnext.symbol.pattern-match\");\n\nrequire(\"core-js/modules/esnext.weak-map.delete-all\");\n\nrequire(\"core-js/modules/esnext.weak-map.from\");\n\nrequire(\"core-js/modules/esnext.weak-map.of\");\n\nrequire(\"core-js/modules/esnext.weak-set.add-all\");\n\nrequire(\"core-js/modules/esnext.weak-set.delete-all\");\n\nrequire(\"core-js/modules/esnext.weak-set.from\");\n\nrequire(\"core-js/modules/esnext.weak-set.of\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nrequire(\"core-js/modules/web.immediate\");\n\nrequire(\"core-js/modules/web.queue-microtask\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Map for HTML strings against H.map.DomIcon instances\n * @type {Map<string, ScriptState>}\n */\nexports.DomIcons = new Map();\n/**\n * Returns the DOM Icon for the input HTML string, ensuring that no more\n * than one DOM Icon is created for each HTML string\n * @param html {string} - A string containing the markup to be used as a Dom Icon.\n */\n\nfunction getDomMarkerIcon(html) {\n  if (!exports.DomIcons.has(html)) {\n    const icon = new H.map.DomIcon(html);\n    exports.DomIcons.set(html, icon);\n  }\n\n  return exports.DomIcons.get(html);\n}\n\nexports.default = getDomMarkerIcon;","map":null,"metadata":{},"sourceType":"script"}