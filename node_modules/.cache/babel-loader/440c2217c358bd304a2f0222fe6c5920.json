{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react-costume-platform\\\\src\\\\components\\\\InsertUse\\\\InsertUse.js\";\nimport React, { Component } from 'react';\nimport { PostData } from '../../services/PostData';\nimport { Redirect } from 'react-router-dom';\nimport Select from 'react-select';\nimport Box from '@material-ui/core/Box';\nimport { TextArea, GridRow, Container } from 'semantic-ui-react';\nimport { use_categories } from '../../utils/options';\n\nclass InsertUse extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelect = selectedCategoryOption => {\n      this.setState({\n        selectedCategoryOption\n      });\n      console.log(this.state);\n    };\n\n    this.onChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n      console.log(this.state);\n    };\n\n    this.state = {\n      useData: '',\n      use_category: '',\n      name: '',\n      description: '',\n      customs: '',\n      other_use: '',\n      exists: '',\n      description_MAXlegnth: 300,\n      description_status: false,\n      submit: false,\n      redirectToReferrer: false,\n      //Select var\n      selectedCategoryOption: ''\n    };\n    this.insert = this.insert.bind(this);\n  }\n\n  decription_legnth() {\n    return this.state.description.length;\n  }\n\n  enableSubmit() {\n    //if everything is submitted\n    if (this.decription_legnth() < 300 && this.decription_legnth() > 0) {\n      if (this.state.name && this.state.selectedCategoryOption) {\n        //Check if entry already exists\n        this.state.use_category = this.state.selectedCategoryOption.value;\n        PostData('existsUse', this.state).then(result => {\n          let responseJson = result;\n\n          if (result.exists === 'true') {\n            console.log(\"already exists\");\n          } else {\n            this.state.submit = true;\n          }\n        });\n      } else {\n        console.log(\"empty something\");\n      }\n    } else {\n      console.log(\"too big description or nothing\");\n    }\n  }\n\n  insert() {\n    this.state.use_category = this.state.selectedCategoryOption.value;\n    PostData('insertUse', this.state).then(result => {\n      let responseJson = result;\n\n      if (responseJson.useData) {\n        sessionStorage.setItem('useData', JSON.stringify(responseJson));\n        this.setState({\n          redirectToReferrer: true\n        }); //<ReactNotification name=\"notifications\"/>\n      } else {\n        alert(result.error);\n      }\n\n      console.log(responseJson);\n    });\n  }\n\n  render() {\n    if (this.state.redirectToReferrer) {\n      return sessionStorage.setItem('useData', ''), sessionStorage.clear(), React.createElement(Redirect, {\n        to: '/success',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      });\n    } else if (sessionStorage.getItem('useData')) {\n      sessionStorage.setItem('useData', '');\n      sessionStorage.clear();\n    } //Select vars\n\n\n    const selectedCategoryOption = this.state.selectedCategoryOption;\n    this.enableSubmit();\n    return React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Box, {\n      style: {\n        width: '50%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \" \\u039A\\u03B1\\u03C4\\u03B7\\u03B3\\u03BF\\u03C1\\u03AF\\u03B1 \\u03C7\\u03C1\\u03AE\\u03C3\\u03B7\\u03C2\", React.createElement(Select, {\n      className: \"select-box\",\n      value: selectedCategoryOption,\n      maxMenuHeight: 150,\n      closeMenuOnSelect: true,\n      onChange: this.onSelect,\n      options: use_categories,\n      ignoreAccents: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \" \\u038C\\u03BD\\u03BF\\u03BC\\u03B1 \\u0394\\u03C1\\u03B1\\u03C3\\u03C4\\u03B7\\u03C1\\u03B9\\u03CC\\u03C4\\u03B7\\u03C4\\u03B1\\u03C2\", React.createElement(\"input\", {\n      className: \"small-input\",\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"\\u038C\\u03BD\\u03BF\\u03BC\\u03B1 \\u03BA\\u03B1\\u03C4\\u03B7\\u03B3\\u03BF\\u03C1\\u03AF\\u03B1\\u03C2\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"\\u03A0\\u03B5\\u03C1\\u03B9\\u03B3\\u03C1\\u03B1\\u03C6\\u03AE\"), React.createElement(TextArea, {\n      className: \"textarea\",\n      type: \"text\",\n      name: \"description\",\n      onChange: this.onChange,\n      maxLength: this.state.description_MAXlegnth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"\\u0389\\u03B8\\u03B7/\\u0388\\u03B8\\u03B9\\u03BC\\u03B1\"), React.createElement(\"input\", {\n      className: \"small-input\",\n      placeholder: \"\\u0389\\u03B8\\u03B7/\\u0388\\u03B8\\u03B9\\u03BC\\u03B1\",\n      type: \"text\",\n      name: \"customs\",\n      onChange: this.onChange,\n      maxLength: this.state.description_MAXlegnth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      disabled: !this.state.submit,\n      type: \"submit\",\n      className: \"button-save\",\n      onClick: this.insert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Save\")));\n  }\n\n}\n\nexport default InsertUse;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\react-costume-platform\\src\\components\\InsertUse\\InsertUse.js"],"names":["React","Component","PostData","Redirect","Select","Box","TextArea","GridRow","Container","use_categories","InsertUse","constructor","props","onSelect","selectedCategoryOption","setState","console","log","state","onChange","evt","target","name","value","useData","use_category","description","customs","other_use","exists","description_MAXlegnth","description_status","submit","redirectToReferrer","insert","bind","decription_legnth","length","enableSubmit","then","result","responseJson","sessionStorage","setItem","JSON","stringify","alert","error","render","clear","getItem","width"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {PostData} from '../../services/PostData';\r\nimport {Redirect} from 'react-router-dom'; \r\nimport Select from 'react-select';\r\nimport Box from '@material-ui/core/Box';\r\nimport { TextArea, GridRow, Container } from 'semantic-ui-react';\r\nimport {use_categories} from '../../utils/options';\r\n\r\nclass InsertUse extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { \r\n            useData: '',\r\n            use_category: '',\r\n            name: '',\r\n            description: '',\r\n            customs: '',\r\n            other_use: '',\r\n            exists:'',\r\n            description_MAXlegnth: 300,\r\n            description_status: false,\r\n            submit: false,\r\n            redirectToReferrer: false,\r\n            //Select var\r\n            selectedCategoryOption: '',\r\n        };\r\n        this.insert = this.insert.bind(this);\r\n    }\r\n\r\n    onSelect = ( selectedCategoryOption ) => { \r\n        this.setState({ selectedCategoryOption }); \r\n        console.log(this.state)\r\n    };\r\n\r\n    onChange = ( evt ) => { \r\n        this.setState({ [evt.target.name]: evt.target.value }); \r\n        console.log(this.state)\r\n    };\r\n\r\n    decription_legnth(){\r\n        return this.state.description.length;\r\n    }\r\n\r\n    enableSubmit(){ \r\n        //if everything is submitted\r\n        if(this.decription_legnth() < 300 && this.decription_legnth() > 0){\r\n            if(this.state.name && this.state.selectedCategoryOption){\r\n                //Check if entry already exists\r\n                this.state.use_category=this.state.selectedCategoryOption.value;\r\n                PostData('existsUse',this.state).then((result) => {\r\n                    let responseJson = result;\r\n                    if(result.exists ==='true'){\r\n                        console.log(\"already exists\");\r\n                    }\r\n                    else{\r\n                        this.state.submit = true;\r\n                    }\r\n                })     \r\n                \r\n            }\r\n            else{\r\n                console.log(\"empty something\");\r\n            }\r\n        }\r\n        else{\r\n            console.log(\"too big description or nothing\");\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    insert(){\r\n        this.state.use_category=this.state.selectedCategoryOption.value;\r\n        PostData('insertUse',this.state).then((result) => {\r\n            let responseJson = result;\r\n            if(responseJson.useData){\r\n                sessionStorage.setItem('useData',JSON.stringify(responseJson));\r\n                this.setState({redirectToReferrer: true});\r\n                //<ReactNotification name=\"notifications\"/>\r\n            }\r\n            else{\r\n                alert(result.error);}\r\n                console.log(responseJson);\r\n            });\r\n            \r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirectToReferrer) {\r\n            return (\r\n                sessionStorage.setItem('useData',''),\r\n                sessionStorage.clear(),\r\n                <Redirect to={'/success'}/>)\r\n        }\r\n        else if (sessionStorage.getItem('useData')){\r\n            sessionStorage.setItem('useData','');\r\n            sessionStorage.clear();\r\n        }\r\n        //Select vars\r\n        const {selectedCategoryOption}= this.state;\r\n\r\n        this.enableSubmit();\r\n        return(\r\n            <div className=\"main\"> \r\n                <form className=\"form\">\r\n                    <Box  style={{ width: '50%' }}>\r\n                        <label> Κατηγορία χρήσης\r\n                            <Select className = \"select-box\"\r\n                                value = {selectedCategoryOption}                           \r\n                                maxMenuHeight={150}\r\n                                closeMenuOnSelect={true}\r\n                                onChange = {this.onSelect}\r\n                                options = {use_categories}\r\n                                ignoreAccents      \r\n                            />\r\n                            </label>\r\n                        </Box>\r\n                    <div style={{ width: '100%' }}>\r\n                        <label> Όνομα Δραστηριότητας\r\n                        <input className=\"small-input\" type=\"text\" name=\"name\" placeholder=\"Όνομα κατηγορίας\" onChange={this.onChange}/></label>\r\n                    </div>\r\n                    <div style={{ width: '100%' }}>\r\n                        <label>Περιγραφή</label> \r\n                        <TextArea className=\"textarea\" type=\"text\" name=\"description\" onChange={this.onChange} maxLength={this.state.description_MAXlegnth}></TextArea>\r\n                        </div>\r\n                    <div style={{ width: '100%' }}>\r\n                        <label>Ήθη/Έθιμα</label> \r\n                        <input className=\"small-input\" placeholder=\"Ήθη/Έθιμα\" type=\"text\" name=\"customs\" onChange={this.onChange} maxLength={this.state.description_MAXlegnth}></input>\r\n                    </div>\r\n                    <button disabled = {!this.state.submit} type=\"submit\" className=\"button-save\" onClick={this.insert}>Save</button>\r\n                </form>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default InsertUse;"]},"metadata":{},"sourceType":"module"}