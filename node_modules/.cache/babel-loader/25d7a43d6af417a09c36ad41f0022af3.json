{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react-costume-platform\\\\src\\\\components\\\\InsertCostume\\\\InsertCostume.js\";\nimport React, { Component } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport { PostData } from '../../services/PostData';\nimport { Redirect } from 'react-router-dom';\nimport Multiselect from 'multiselect-dropdown-react';\nconst sex_data = [{\n  name: 'Γυναίκα',\n  value: 'female_adult'\n}, {\n  name: 'Adras',\n  value: 'male_adult'\n}, {\n  name: 'Koritsi',\n  value: 'female_young'\n}, {\n  name: 'Agori',\n  value: 'male_young'\n}, {\n  name: 'Brefos',\n  value: 'Toodler'\n}];\n\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.name;\n}\n\nfunction renderSuggestion(suggestion) {\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, suggestion.name);\n}\n\nclass InsertCostume extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelect = selectedItem => {\n      this.setState(state => {\n        const list = state.sex.concat(selectedItem);\n        return {\n          list\n        };\n      });\n    };\n\n    this.onChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n    };\n\n    this.onChangeValue = (e, {\n      newValue,\n      method\n    }) => {\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.onSuggestionsFetchRequested = ({\n      value\n    }) => {\n      this.setState({\n        suggestions: this.getSuggestions(value)\n      });\n    };\n\n    this.onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    this.state = {\n      costumeData: '',\n      name: '',\n      descr: '',\n      sex: [],\n      //Uses' data\n      u_data: [],\n      usesData: '',\n      //for Use suggestion\n      value: '',\n      //== use\n      suggestions: [],\n      redirectToReferrer: false\n    };\n    this.insert = this.insert.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onChangeValue = this.onChangeValue.bind(this);\n  }\n  /*For mutli-selection of sex categories*/\n\n\n  onRemove(optionsList, removeItem) {\n    this.setState({\n      sex: optionsList\n    });\n  }\n  /*Change functions for text fields*/\n\n\n  getSuggestions(value) {\n    const escapedValue = escapeRegexCharacters(value.trim());\n\n    if (escapedValue === '') {\n      return [];\n    }\n\n    const regex = new RegExp('^' + escapedValue, 'i');\n    return this.state.u_data.filter(usesData => regex.test(usesData.name));\n  }\n\n  /* Get uses' data */\n  get_uses() {\n    PostData('get_uses', this.state).then(result => {\n      let responseJson = result;\n\n      if (responseJson.usesData) {\n        sessionStorage.setItem(\"usesData\", JSON.stringify(responseJson));\n        this.setState({\n          u_data: responseJson.usesData\n        });\n        console.log(this.state);\n      } else {\n        alert(result.error);\n      }\n    });\n  }\n  /*Insert of costume*/\n\n\n  insert() {\n    if (this.state.name && this.state.descr && this.state.value) {\n      PostData('insertCostume', this.state).then(result => {\n        let responseJson = result;\n\n        if (responseJson.costumeData) {\n          sessionStorage.setItem('costumeData', JSON.stringify(responseJson));\n          this.setState({\n            redirectToReferrer: true\n          });\n        } else alert(result.error);\n      });\n    }\n  }\n\n  render() {\n    if (this.state.redirectToReferrer) {\n      return sessionStorage.setItem('costumeData', ''), sessionStorage.clear(), React.createElement(Redirect, {\n        to: '/success',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      });\n    } else if (sessionStorage.getItem('costumeData')) {\n      sessionStorage.setItem('costumeData', '');\n      sessionStorage.clear();\n    }\n\n    this.get_uses();\n    const _this$state = this.state,\n          value = _this$state.value,\n          suggestions = _this$state.suggestions;\n    const inputProps = {\n      placeholder: \"Type something\",\n      value,\n      onChange: this.onChangeValue\n    };\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      className: \"row \",\n      id: \"sBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"medium-5 columns left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Insert Costume Data\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Name\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"descr\",\n      placeholder: \"Description\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(Autosuggest, {\n      suggestions: suggestions,\n      onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n      getSuggestionValue: getSuggestionValue,\n      renderSuggestion: renderSuggestion,\n      inputProps: inputProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(Multiselect, {\n      options: sex_data // Options to display in the dropdown\n      ,\n      selectedvalues: this.state.sex // Preselected value to persist in dropdown\n      ,\n      displayValue: \"key\" //displayValue=\"name\" // Property name to display in the dropdown options\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"button\",\n      value: \"Save\",\n      onClick: this.insert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default InsertCostume;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\react-costume-platform\\src\\components\\InsertCostume\\InsertCostume.js"],"names":["React","Component","Autosuggest","PostData","Redirect","Multiselect","sex_data","name","value","escapeRegexCharacters","str","replace","getSuggestionValue","suggestion","renderSuggestion","InsertCostume","constructor","props","onSelect","selectedItem","setState","state","list","sex","concat","onChange","evt","target","onChangeValue","e","newValue","method","onSuggestionsFetchRequested","suggestions","getSuggestions","onSuggestionsClearRequested","costumeData","descr","u_data","usesData","redirectToReferrer","insert","bind","onRemove","optionsList","removeItem","escapedValue","trim","regex","RegExp","filter","test","get_uses","then","result","responseJson","sessionStorage","setItem","JSON","stringify","console","log","alert","error","render","clear","getItem","inputProps","placeholder"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport {PostData} from '../../services/PostData';\r\nimport {Redirect} from 'react-router-dom'; \r\nimport Multiselect from 'multiselect-dropdown-react';\r\n\r\nconst sex_data = [{\r\n    name: 'Γυναίκα',\r\n    value: 'female_adult'\r\n  },\r\n  {\r\n      name: 'Adras',\r\n      value: 'male_adult'\r\n    },\r\n    {\r\n      name: 'Koritsi',\r\n      value: 'female_young'\r\n    },\r\n    {\r\n      name: 'Agori',\r\n      value: 'male_young'\r\n    },\r\n    {\r\n      name: 'Brefos',\r\n      value: 'Toodler'\r\n    }];\r\n\r\nfunction escapeRegexCharacters(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n    return suggestion.name;\r\n}\r\n  \r\nfunction renderSuggestion(suggestion) {\r\n    return (\r\n      <span>{suggestion.name}</span>\r\n    );\r\n}\r\n\r\nclass InsertCostume extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            costumeData: '',\r\n            name: '',\r\n            descr: '',\r\n            sex: [],\r\n            //Uses' data\r\n            u_data:[],\r\n            usesData: '',\r\n            //for Use suggestion\r\n            value: '', //== use\r\n            suggestions: [],\r\n            redirectToReferrer: false\r\n        };\r\n        this.insert = this.insert.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onChangeValue = this.onChangeValue.bind(this);\r\n    }\r\n\r\n    /*For mutli-selection of sex categories*/\r\n    onSelect = selectedItem => {\r\n        this.setState( state => {\r\n            const list = state.sex.concat(selectedItem);\r\n            return{\r\n                list\r\n            }\r\n        });\r\n    };\r\n  \r\n    onRemove(optionsList, removeItem) {\r\n        this.setState({ sex: optionsList });\r\n    }\r\n\r\n    /*Change functions for text fields*/\r\n    onChange = ( evt ) => { this.setState({ [evt.target.name]: evt.target.value }); };\r\n\r\n    /*Change functions for auto-suggest field*/\r\n    onChangeValue = ( e, {newValue, method}) => {\r\n        this.setState({\r\n            value: newValue\r\n        })\r\n    };\r\n\r\n    /*Functions for use suggestions*/\r\n\r\n    onSuggestionsFetchRequested = ({ value }) => {\r\n        this.setState({\r\n          suggestions: this.getSuggestions(value)\r\n        });\r\n    };\r\n    \r\n    onSuggestionsClearRequested = () => {\r\n        this.setState({\r\n          suggestions: []\r\n        });\r\n    };\r\n\r\n    getSuggestions(value) {\r\n        const escapedValue = escapeRegexCharacters(value.trim());   \r\n        if (escapedValue === '') {\r\n          return [];\r\n        }\r\n        const regex = new RegExp('^' + escapedValue, 'i');\r\n      \r\n        return this.state.u_data.filter(usesData => regex.test(usesData.name));\r\n    };\r\n\r\n    /* Get uses' data */ \r\n\r\n    get_uses(){\r\n        PostData('get_uses', this.state).then((result) => {\r\n            let responseJson = result;\r\n            if(responseJson.usesData){\r\n                sessionStorage.setItem(\"usesData\",JSON.stringify(responseJson));\r\n                this.setState({u_data: responseJson.usesData});\r\n                console.log(this.state);\r\n            }\r\n            else{\r\n                alert(result.error);\r\n            }\r\n        });\r\n    }\r\n\r\n    /*Insert of costume*/\r\n\r\n    insert() {\r\n        if(this.state.name && this.state.descr && this.state.value){\r\n            PostData('insertCostume',this.state).then((result) => {\r\n            let responseJson = result;\r\n            if(responseJson.costumeData){\r\n                sessionStorage.setItem('costumeData',JSON.stringify(responseJson));\r\n                this.setState({redirectToReferrer: true});\r\n            }\r\n            else\r\n                alert(result.error);\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirectToReferrer) {\r\n            return (\r\n                sessionStorage.setItem('costumeData',''),\r\n                sessionStorage.clear(),\r\n                <Redirect to={'/success'}/>)\r\n        }\r\n        else if (sessionStorage.getItem('costumeData')){\r\n            sessionStorage.setItem('costumeData','');\r\n            sessionStorage.clear();\r\n        }\r\n\r\n        this.get_uses();\r\n        const { value, suggestions } = this.state;\r\n        const inputProps = {\r\n            placeholder: \"Type something\",\r\n            value,\r\n            onChange: this.onChangeValue\r\n        };\r\n\r\n        console.log(this.state);\r\n        return (\r\n            <div className=\"row \" id=\"sBody\">\r\n                <div className=\"medium-5 columns left\">\r\n                <h4>Insert Costume Data</h4>\r\n                <input type=\"text\" name=\"name\" placeholder=\"Name\" onChange={this.onChange}/>\r\n                <input type=\"text\" name=\"descr\" placeholder=\"Description\" onChange={this.onChange}/>\r\n                <Autosuggest \r\n                suggestions={suggestions}\r\n                onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n                onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n                getSuggestionValue={getSuggestionValue}\r\n                renderSuggestion={renderSuggestion}\r\n                inputProps={inputProps} />\r\n                <Multiselect\r\n                options={sex_data} // Options to display in the dropdown\r\n                selectedvalues={this.state.sex} // Preselected value to persist in dropdown\r\n                displayValue=\"key\"\r\n                //displayValue=\"name\" // Property name to display in the dropdown options\r\n                />\r\n                <input type=\"submit\" className=\"button\" value=\"Save\" onClick={this.insert}/>\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\nexport default InsertCostume;\r\n\r\n"]},"metadata":{},"sourceType":"module"}