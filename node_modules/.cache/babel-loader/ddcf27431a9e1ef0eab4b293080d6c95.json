{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react-costume-platform\\\\src\\\\components\\\\InsertCostume\\\\InsertCostume.js\";\nimport React, { Component } from 'react';\nimport { PostData } from '../../services/PostData';\nimport { Redirect } from 'react-router-dom';\nimport Select from 'react-select';\nimport \"./InsertCostume.css\";\nimport \"../Geosuggest/Geosuggest.css\";\nimport { TextArea, GridRow, Container } from 'semantic-ui-react';\nimport Geosuggest from 'react-geosuggest';\nimport { sexs, materials, techniques, use_categories } from \"../../utils/options\";\nimport CreatableSelect from 'react-select/creatable';\nimport Box from '@material-ui/core/Box';\nimport 'react-notifications/lib/notifications.css';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\n\nclass Notifications extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.createNotification = type => {\n      return () => {\n        switch (type) {\n          case 'info':\n            NotificationManager.info('Info message');\n            break;\n\n          case 'success':\n            NotificationManager.success('Success message', 'Title here');\n            break;\n\n          case 'warning':\n            NotificationManager.warning('Warning message', 'Close after 3000ms', 3000);\n            break;\n\n          case 'error':\n            NotificationManager.error('Error message', 'Click me!', 5000, () => {\n              alert('callback');\n            });\n            break;\n        }\n      };\n    };\n  }\n\n}\n\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.name;\n}\n\nfunction renderSuggestion(suggestion) {\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, suggestion.name);\n}\n\nclass InsertCostume extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLocationChange = location_select => {\n      this.setState({\n        location_select\n      });\n      console.log(\"HandleLocationChange:\", this.state);\n    };\n\n    this.handleLocationSelect = location_select => {\n      this.setState({\n        location_select\n      });\n      console.log(\"Option selected:\", location_select);\n    };\n\n    this.handleLocationInfluenceChange = location_influence_select => {\n      this.setState({\n        location_influence_select\n      });\n      console.log(\"HandleLocationChange:\", this.state);\n    };\n\n    this.handleLocationInfluenceSelect = location_influence_select => {\n      this.setState({\n        location_influence_select\n      });\n      console.log(\"Option selected:\", location_influence_select);\n    };\n\n    this.handleUseSelect = selectedUseOption => {\n      this.setState({\n        selectedUseOption\n      });\n      console.log(\"Option selected:\", selectedUseOption);\n    };\n\n    this.handleTPSelect = selectedTPOption => {\n      this.setState({\n        selectedTPOption\n      });\n      console.log(\"Option selected:\", selectedTPOption);\n    };\n\n    this.handleSexSelect = selectedSexOption => {\n      this.setState({\n        selectedSexOption\n      });\n      console.log(\"Option selected:\", selectedSexOption);\n    };\n\n    this.handleMaterialSelect = selectedMaterialOption => {\n      this.setState({\n        selectedMaterialOption\n      });\n      console.log(\"Option selected:\", selectedMaterialOption);\n    };\n\n    this.handleTechniqueSelect = selectedTechniqueOption => {\n      this.setState({\n        selectedTechniqueOption\n      });\n      console.log(\"Option selected:\", selectedTechniqueOption);\n    };\n\n    this.onChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n    };\n\n    this.onChangeValue = (e, {\n      newValue,\n      method\n    }) => {\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.onSuggestionsFetchRequested = ({\n      value\n    }) => {\n      this.setState({\n        suggestions: this.getSuggestions(value)\n      });\n    };\n\n    this.onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    this.state = {\n      name: '',\n      descr: '',\n      //Uses' data\n      u_data: [],\n      usesData: '',\n      //for Use suggestion on insert\n      u_value: '',\n      newValue: '',\n      //Theatrical Plays data\n      TP_data: [],\n      TPData: '',\n      tp_value: '',\n      newTPvalue: '',\n      //For backend insert\n      actors: '',\n      designer: '',\n      parts: '',\n      //Material data on insert\n      m_value: '',\n      //Technique data on insert\n      t_value: '',\n      //Sex data on insert\n      s_value: '',\n      //Select\n      selectedSexOption: null,\n      selectedUseOption: null,\n      selectedMaterialOption: null,\n      selectedTechniqueOption: null,\n      selectedTPOption: null,\n      //Geosuggest\n      location: '',\n      location_select: '',\n      location_influence: '',\n      location_influence_select: '',\n      //For validation reasons\n      description_MAXlegnth: 300,\n      description_status: false,\n      submit: false,\n      redirectToReferrer: false,\n      /////////////////////////\n      cond1: false,\n      cond2: false\n    };\n    this.insert = this.insert.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onChangeValue = this.onChangeValue.bind(this);\n    this.get_uses = this.get_uses.bind(this);\n    this.enableSubmit = this.enableSubmit.bind(this);\n  }\n  /*Secure way to getData*/\n\n\n  componentDidMount() {\n    this.get_uses();\n    this.get_theatrical_plays();\n  }\n  /*Geosuggest functions*/\n\n\n  handleLocation() {\n    if (this.state.location_select) {\n      this.state.location = this.state.location_select.description;\n      console.log(this.state);\n    }\n  }\n\n  handleLocationInfluence() {\n    if (this.state.location_influence_select) {\n      this.state.location_influence = this.state.location_influence_select.description;\n      console.log(this.state);\n    }\n  }\n  /*Functions for description legnth and validation*/\n\n\n  decription_legnth() {\n    return this.state.descr.length;\n  }\n\n  enableSubmit() {\n    if (this.state.name) {\n      //If name is given, check if it already exist\n      PostData('costumeExists', this.state).then(result => {\n        let responseJson = result;\n        console.log(\"result\", responseJson);\n\n        if (result.exists == 'true') {\n          console.log(\"already exists\");\n          this.state.cond1 = false;\n        } else {\n          console.log(\"doesnt exists\");\n          this.state.cond1 = true;\n        }\n      });\n    } else {\n      console.log(\"no name\");\n    } //if everything is submitted\n\n\n    if (this.decription_legnth() < 300 && this.decription_legnth() > 0) {\n      console.log(\"ok legnth\");\n      this.state.cond2 = true;\n    } else {\n      this.state.submit = false;\n      console.log(\"too big or too small description\");\n      this.state.cond2 = false;\n    }\n\n    if (this.state.name && this.state.descr && this.state.location && this.state.selectedMaterialOption && this.state.selectedSexOption && this.state.selectedTechniqueOption && this.state.selectedUseOption && this.state.location_influence && this.state.designer) {\n      if (this.state.cond1 && this.state.cond2) {\n        this.state.submit = true;\n      }\n    } else {\n      console.log(\"something is missing\");\n    }\n  }\n  /*For selection of use categories*/\n\n\n  getSuggestions(value) {\n    const escapedValue = escapeRegexCharacters(value.trim());\n\n    if (escapedValue === '') {\n      return [];\n    }\n\n    const regex = new RegExp('^' + escapedValue, 'i');\n    return this.state.u_data.filter(usesData => regex.test(usesData.name));\n  }\n\n  /* Get uses from database*/\n  get_uses() {\n    PostData('get_uses', this.state).then(result => {\n      let responseJson = result;\n\n      if (responseJson.usesData) {\n        sessionStorage.setItem(\"usesData\", JSON.stringify(responseJson));\n        this.setState({\n          u_data: responseJson.usesData\n        });\n        console.log(this.state);\n      } else {\n        alert(result.error);\n      }\n    });\n  }\n  /*Get Theatrical Plays from database*/\n\n\n  get_theatrical_plays() {}\n  /* PostData('get_theatrical_plays', this.state).then((result) => {\r\n       let responseJson = result;\r\n       if(responseJson.TPData){\r\n           sessionStorage.setItem(\"TPData\",JSON.stringify(responseJson));\r\n           this.setState({TP_data: responseJson.TPData});\r\n           console.log(\"Theatrical Plays\",this.state);\r\n       }\r\n       else{\r\n           alert(result.error);\r\n       }\r\n   });*/\n\n  /*Insert of costume*/\n\n\n  insert() {\n    this.state.u_value = this.state.selectedUseOption.value;\n    this.state.t_value = this.state.selectedTechniqueOption.value;\n    this.state.m_value = this.state.selectedMaterialOption.value;\n    this.state.tp_value = \"\";\n\n    for (var key in this.state.selectedSexOption) {\n      this.state.s_value = this.state.selectedSexOption[key].value;\n      console.log(\"insert\", this.state);\n      PostData('insertCostume', this.state).then(result => {\n        let responseJson = result;\n\n        if (responseJson.costumeData) {\n          sessionStorage.setItem('costumeData', JSON.stringify(responseJson));\n          this.setState({\n            redirectToReferrer: true\n          });\n        } else alert(result.error);\n      });\n    }\n  }\n\n  render() {\n    if (this.state.redirectToReferrer) {\n      return sessionStorage.setItem('costumeData', ''), sessionStorage.clear(), React.createElement(Redirect, {\n        to: '/success',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      });\n    } else if (sessionStorage.getItem('costumeData')) {\n      sessionStorage.setItem('costumeData', '');\n      sessionStorage.clear();\n    } //For selection of Sex: \n\n\n    const selectedSexOption = this.state.selectedSexOption; //For selection of Use:\n\n    const selectedUseOption = this.state.selectedUseOption; //For selection of Material\n\n    const selectedMaterialOption = this.state.selectedMaterialOption; //For selection of Technique\n\n    const selectedTechniqueOption = this.state.selectedTechniqueOption; //For selection of Theatrical Plays\n\n    const selectedTPOption = this.state.selectedTPOption;\n    const u_options = [];\n    const p_options = [];\n    /* Create Use Categories*/\n\n    for (var key in use_categories) {\n      u_options.push({\n        label: use_categories[key].label,\n        options: []\n      });\n    }\n\n    for (var key in this.state.u_data) {\n      u_options.forEach(element => {\n        if (element.label === this.state.u_data[key].use_category) {\n          element.options.push({\n            label: this.state.u_data[key].name,\n            value: this.state.u_data[key].name\n          });\n        }\n      });\n    }\n    /*For theatrical Plays*/\n\n\n    for (var key in this.state.TP_data) {\n      p_options.push({\n        label: this.state.TP_data[key].title,\n        value: this.state.TP_data[key].title\n      });\n    }\n\n    console.log(this.state);\n    console.log(u_options, sexs);\n    this.enableSubmit();\n    return React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, \" \\u03A4\\u03AF\\u03C4\\u03BB\\u03BF\\u03C2\", React.createElement(\"input\", {\n      className: \"small-input\",\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Name\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, \"\\u03A0\\u03B5\\u03C1\\u03B9\\u03B3\\u03C1\\u03B1\\u03C6\\u03AE\"), React.createElement(TextArea, {\n      className: \"textarea\",\n      type: \"text\",\n      name: \"descr\",\n      onChange: this.onChange,\n      maxLength: this.state.description_MAXlegnth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"remaining-chars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"chars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, this.state.description_MAXlegnth - this.decription_legnth()), \" characters remaining\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }), React.createElement(Box, {\n      display: \"flex\",\n      flexDirection: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(Box, {\n      style: {\n        width: '50%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, \" \\u03A7\\u03C1\\u03AE\\u03C3\\u03B7\", React.createElement(Select, {\n      className: \"select-box\",\n      value: selectedUseOption,\n      options: u_options,\n      maxMenuHeight: 200,\n      onChange: this.handleUseSelect,\n      closeMenuOnSelect: true,\n      isSearchable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }))), React.createElement(Box, {\n      style: {\n        width: '50%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, \" \\u03A6\\u03CD\\u03BB\\u03BF\", React.createElement(Select, {\n      className: \"select-box\",\n      value: selectedSexOption,\n      isMulti: true,\n      maxMenuHeight: 150,\n      closeMenuOnSelect: true,\n      onChange: this.handleSexSelect,\n      options: sexs,\n      ignoreAccents: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }), React.createElement(Box, {\n      display: \"flex\",\n      flexDirection: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(Box, {\n      style: {\n        width: '50%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, \" \\u03A5\\u03BB\\u03B9\\u03BA\\u03CC\", React.createElement(CreatableSelect, {\n      className: \"select-box\",\n      isClearable: true,\n      onChange: this.handleMaterialSelect,\n      value: selectedMaterialOption,\n      options: materials,\n      maxMenuHeight: 200,\n      closeMenuOnSelect: true,\n      isSearchable: true,\n      ignoreAccents: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }))), React.createElement(Box, {\n      style: {\n        width: '50%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, \" \\u03A4\\u03B5\\u03C7\\u03BD\\u03B9\\u03BA\\u03AE\", React.createElement(CreatableSelect, {\n      className: \"select-box\",\n      isClearable: true,\n      onChange: this.handleTechniqueSelect,\n      value: selectedTechniqueOption,\n      options: techniques,\n      maxMenuHeight: 200,\n      closeMenuOnSelect: true,\n      isSearchable: true,\n      ignoreAccents: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, \" \\u03A3\\u03C7\\u03B5\\u03B4\\u03B9\\u03B1\\u03C3\\u03C4\\u03AE\\u03C2\", React.createElement(\"input\", {\n      className: \"small-input\",\n      type: \"text\",\n      name: \"designer\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }), \" \"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }), React.createElement(Box, {\n      display: \"flex\",\n      flexDirection: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, React.createElement(Box, {\n      style: {\n        width: '50%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, \" \\u03A0\\u03B5\\u03C1\\u03B9\\u03BF\\u03C7\\u03AE \\u0391\\u03BD\\u03B1\\u03C6\\u03BF\\u03C1\\u03AC\\u03C2\", React.createElement(Geosuggest, {\n      onChange: this.handleLocationChange,\n      onSuggestSelect: this.handleLocationSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }), this.handleLocation())), React.createElement(Box, {\n      style: {\n        width: '50%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, \" \\u03A7\\u03CE\\u03C1\\u03B1/\\u03A0\\u03B5\\u03C1\\u03B9\\u03BF\\u03C7\\u03AE \\u0395\\u03C0\\u03B9\\u03C1\\u03C1\\u03BF\\u03AE\\u03C2\", React.createElement(Geosuggest, {\n      onChange: this.handleLocationInfluenceChange,\n      onSuggestSelect: this.handleLocationInfluenceSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }), this.handleLocation(), this.handleLocationInfluence()))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, \" \\u0398\\u03B5\\u03B1\\u03C4\\u03C1\\u03B9\\u03BA\\u03AD\\u03C2 \\u03A0\\u03B1\\u03C1\\u03B1\\u03C3\\u03C4\\u03AC\\u03C3\\u03B5\\u03B9\\u03C2\", React.createElement(Select, {\n      className: \"select-box\",\n      value: selectedTPOption,\n      options: p_options,\n      maxMenuHeight: 200,\n      onChange: this.handleTPSelect,\n      closeMenuOnSelect: true,\n      isSearchable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }), \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, \" \\u0397\\u03B8\\u03BF\\u03C0\\u03BF\\u03B9\\u03BF\\u03AF\", React.createElement(\"input\", {\n      className: \"small-input\",\n      type: \"text\",\n      name: \"actors\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }), \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, \" \\u03A1\\u03CC\\u03BB\\u03BF\\u03C2\", React.createElement(\"input\", {\n      className: \"small-input\",\n      type: \"text\",\n      name: \"parts\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }), \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      disabled: !this.state.submit,\n      type: \"submit\",\n      className: \"button-save\",\n      onClick: this.insert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }, \"Save\")));\n  }\n\n}\n\nexport default InsertCostume;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\react-costume-platform\\src\\components\\InsertCostume\\InsertCostume.js"],"names":["React","Component","PostData","Redirect","Select","TextArea","GridRow","Container","Geosuggest","sexs","materials","techniques","use_categories","CreatableSelect","Box","NotificationContainer","NotificationManager","Notifications","createNotification","type","info","success","warning","error","alert","escapeRegexCharacters","str","replace","getSuggestionValue","suggestion","name","renderSuggestion","InsertCostume","constructor","props","handleLocationChange","location_select","setState","console","log","state","handleLocationSelect","handleLocationInfluenceChange","location_influence_select","handleLocationInfluenceSelect","handleUseSelect","selectedUseOption","handleTPSelect","selectedTPOption","handleSexSelect","selectedSexOption","handleMaterialSelect","selectedMaterialOption","handleTechniqueSelect","selectedTechniqueOption","onChange","evt","target","value","onChangeValue","e","newValue","method","onSuggestionsFetchRequested","suggestions","getSuggestions","onSuggestionsClearRequested","descr","u_data","usesData","u_value","TP_data","TPData","tp_value","newTPvalue","actors","designer","parts","m_value","t_value","s_value","location","location_influence","description_MAXlegnth","description_status","submit","redirectToReferrer","cond1","cond2","insert","bind","get_uses","enableSubmit","componentDidMount","get_theatrical_plays","handleLocation","description","handleLocationInfluence","decription_legnth","length","then","result","responseJson","exists","escapedValue","trim","regex","RegExp","filter","test","sessionStorage","setItem","JSON","stringify","key","costumeData","render","clear","getItem","u_options","p_options","push","label","options","forEach","element","use_category","title","width"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {PostData} from '../../services/PostData';\r\nimport {Redirect} from 'react-router-dom'; \r\nimport Select from 'react-select';\r\nimport \"./InsertCostume.css\";\r\nimport \"../Geosuggest/Geosuggest.css\";\r\nimport { TextArea, GridRow, Container } from 'semantic-ui-react';\r\nimport Geosuggest from 'react-geosuggest';\r\nimport {sexs, materials, techniques, use_categories} from \"../../utils/options\";\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport Box from '@material-ui/core/Box';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\n\r\nclass Notifications extends React.Component {\r\n    createNotification = (type) => {\r\n      return () => {\r\n        switch (type) {\r\n          case 'info':\r\n            NotificationManager.info('Info message');\r\n            break;\r\n          case 'success':\r\n            NotificationManager.success('Success message', 'Title here');\r\n            break;\r\n          case 'warning':\r\n            NotificationManager.warning('Warning message', 'Close after 3000ms', 3000);\r\n            break;\r\n          case 'error':\r\n            NotificationManager.error('Error message', 'Click me!', 5000, () => {\r\n              alert('callback');\r\n            });\r\n            break;\r\n        }\r\n      };\r\n    };\r\n}\r\n\r\nfunction escapeRegexCharacters(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n    return suggestion.name;\r\n}\r\n  \r\nfunction renderSuggestion(suggestion) {\r\n    return (\r\n      <span>{suggestion.name}</span>\r\n    );\r\n}\r\n\r\nclass InsertCostume extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            descr: '',\r\n            //Uses' data\r\n            u_data:[],\r\n            usesData: '',\r\n            //for Use suggestion on insert\r\n            u_value: '', \r\n            newValue: '',\r\n            //Theatrical Plays data\r\n            TP_data:[],\r\n            TPData: '',\r\n            tp_value:'',\r\n            newTPvalue: '',\r\n            //For backend insert\r\n            actors: '',\r\n            designer: '',\r\n            parts: '',\r\n            //Material data on insert\r\n            m_value: '',\r\n            //Technique data on insert\r\n            t_value: '',\r\n            //Sex data on insert\r\n            s_value: '',\r\n            //Select\r\n            selectedSexOption: null,\r\n            selectedUseOption: null,\r\n            selectedMaterialOption: null,\r\n            selectedTechniqueOption: null,\r\n            selectedTPOption: null,\r\n            //Geosuggest\r\n            location:'',\r\n            location_select:'',\r\n            location_influence:'',\r\n            location_influence_select:'',\r\n\r\n            //For validation reasons\r\n            description_MAXlegnth: 300,\r\n            description_status: false,\r\n            submit: false,\r\n            redirectToReferrer: false,\r\n\r\n            /////////////////////////\r\n            cond1: false,\r\n            cond2: false\r\n        };\r\n        this.insert = this.insert.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onChangeValue = this.onChangeValue.bind(this);\r\n        this.get_uses = this.get_uses.bind(this);\r\n        this.enableSubmit = this.enableSubmit.bind(this);\r\n    }\r\n\r\n    /*Secure way to getData*/\r\n    componentDidMount(){\r\n        this.get_uses();\r\n        this.get_theatrical_plays();\r\n    }\r\n\r\n    /*Geosuggest functions*/\r\n    handleLocationChange = location_select => {\r\n        this.setState({ location_select });\r\n        console.log(\"HandleLocationChange:\", this.state);\r\n    };\r\n\r\n    handleLocationSelect = (location_select) => {\r\n        this.setState({ location_select });\r\n        console.log(`Option selected:`, location_select);\r\n    }\r\n\r\n    handleLocationInfluenceChange = location_influence_select => {\r\n        this.setState({ location_influence_select });\r\n        console.log(\"HandleLocationChange:\", this.state);\r\n    };\r\n\r\n    handleLocationInfluenceSelect = (location_influence_select) => {\r\n        this.setState({location_influence_select });\r\n        console.log(`Option selected:`, location_influence_select);\r\n    }\r\n    \r\n    handleLocation(){\r\n        if(this.state.location_select){\r\n            this.state.location = this.state.location_select.description;\r\n            console.log(this.state);\r\n        }\r\n    }\r\n\r\n    handleLocationInfluence(){\r\n        if(this.state.location_influence_select){\r\n            this.state.location_influence = this.state.location_influence_select.description;\r\n            console.log(this.state);\r\n        }\r\n\r\n    }\r\n\r\n    /*Functions for description legnth and validation*/\r\n    decription_legnth(){\r\n        return this.state.descr.length;\r\n    }\r\n\r\n    enableSubmit(){\r\n        if(this.state.name){ //If name is given, check if it already exist\r\n            PostData('costumeExists', this.state).then((result) => {\r\n                let responseJson = result;\r\n                console.log(\"result\", responseJson);\r\n                if(result.exists =='true'){\r\n                    console.log(\"already exists\");\r\n                    this.state.cond1 = false;\r\n                }\r\n                else{\r\n                    console.log(\"doesnt exists\");\r\n                    this.state.cond1=true;\r\n                }\r\n            })     \r\n        }\r\n        else{\r\n            console.log(\"no name\");\r\n        }\r\n        \r\n        //if everything is submitted\r\n        if(this.decription_legnth() < 300 && this.decription_legnth() > 0){\r\n            console.log(\"ok legnth\");\r\n            this.state.cond2=true;\r\n        }\r\n        else{\r\n            this.state.submit = false;\r\n            console.log(\"too big or too small description\");\r\n            this.state.cond2=false;\r\n        }\r\n\r\n        if(this.state.name && this.state.descr && this.state.location && this.state.selectedMaterialOption\r\n            && this.state.selectedSexOption && this.state.selectedTechniqueOption && this.state.selectedUseOption\r\n            && this.state.location_influence && this.state.designer){\r\n                if(this.state.cond1 && this.state.cond2){\r\n                    this.state.submit = true;\r\n                }\r\n            }\r\n        else{\r\n            console.log(\"something is missing\");   \r\n        }\r\n    }\r\n\r\n    /*For selection of use categories*/\r\n    handleUseSelect = (selectedUseOption) => {\r\n        this.setState({selectedUseOption});\r\n        console.log(`Option selected:`, selectedUseOption);\r\n    }\r\n\r\n    /*For selection of theatrical plays*/\r\n    handleTPSelect = (selectedTPOption) => {\r\n        this.setState({selectedTPOption});\r\n        console.log(`Option selected:`, selectedTPOption);\r\n    }\r\n\r\n    /*For mutli-selection of sex categories*/\r\n    handleSexSelect = (selectedSexOption) => {\r\n        this.setState({ selectedSexOption });\r\n        console.log(`Option selected:`, selectedSexOption);\r\n    }\r\n\r\n    handleMaterialSelect = (selectedMaterialOption) => {\r\n        this.setState({ selectedMaterialOption });\r\n        \r\n        console.log(`Option selected:`, selectedMaterialOption);\r\n    }\r\n\r\n    handleTechniqueSelect = (selectedTechniqueOption) => {\r\n        this.setState({ selectedTechniqueOption });\r\n        console.log(`Option selected:`, selectedTechniqueOption);\r\n    }\r\n\r\n    /*Change functions for text fields*/\r\n    onChange = ( evt ) => { this.setState({ [evt.target.name]: evt.target.value }); };\r\n\r\n    /*Change functions for auto-suggest field*/\r\n    onChangeValue = ( e, {newValue, method}) => {\r\n        this.setState({\r\n            value: newValue\r\n        })\r\n    };\r\n\r\n    /*Functions for use suggestions -- NOT USED*/\r\n    onSuggestionsFetchRequested = ({ value }) => {\r\n        this.setState({\r\n          suggestions: this.getSuggestions(value)\r\n        });\r\n    };\r\n    \r\n    onSuggestionsClearRequested = () => {\r\n        this.setState({\r\n          suggestions: []\r\n        });\r\n    };\r\n\r\n    getSuggestions(value) {\r\n        const escapedValue = escapeRegexCharacters(value.trim());   \r\n        if (escapedValue === '') {\r\n          return [];\r\n        }\r\n        const regex = new RegExp('^' + escapedValue, 'i');\r\n      \r\n        return this.state.u_data.filter(usesData => regex.test(usesData.name));\r\n    };\r\n\r\n    /* Get uses from database*/ \r\n    get_uses(){\r\n        PostData('get_uses', this.state).then((result) => {\r\n            let responseJson = result;\r\n            if(responseJson.usesData){\r\n                sessionStorage.setItem(\"usesData\",JSON.stringify(responseJson));\r\n                this.setState({u_data: responseJson.usesData});\r\n                console.log(this.state);\r\n            }\r\n            else{\r\n                alert(result.error);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    /*Get Theatrical Plays from database*/\r\n    get_theatrical_plays(){\r\n       /* PostData('get_theatrical_plays', this.state).then((result) => {\r\n            let responseJson = result;\r\n            if(responseJson.TPData){\r\n                sessionStorage.setItem(\"TPData\",JSON.stringify(responseJson));\r\n                this.setState({TP_data: responseJson.TPData});\r\n                console.log(\"Theatrical Plays\",this.state);\r\n            }\r\n            else{\r\n                alert(result.error);\r\n            }\r\n        });*/\r\n    }\r\n    \r\n    /*Insert of costume*/\r\n\r\n    insert() {\r\n        this.state.u_value = this.state.selectedUseOption.value;\r\n        this.state.t_value = this.state.selectedTechniqueOption.value;\r\n        this.state.m_value = this.state.selectedMaterialOption.value;\r\n        this.state.tp_value = \"\";\r\n        for(var key in this.state.selectedSexOption){\r\n                this.state.s_value = this.state.selectedSexOption[key].value;\r\n                console.log(\"insert\",this.state);\r\n                PostData('insertCostume',this.state).then((result) => {\r\n                let responseJson = result;\r\n                if(responseJson.costumeData){\r\n                    sessionStorage.setItem('costumeData',JSON.stringify(responseJson));\r\n                    this.setState({redirectToReferrer: true});\r\n                }\r\n                else\r\n                    alert(result.error);\r\n                });\r\n       }    \r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirectToReferrer) {\r\n            return (\r\n                sessionStorage.setItem('costumeData',''),\r\n                sessionStorage.clear(),\r\n                <Redirect to={'/success'}/>)\r\n        }\r\n        else if (sessionStorage.getItem('costumeData')){\r\n            sessionStorage.setItem('costumeData','');\r\n            sessionStorage.clear();\r\n        }\r\n\r\n        //For selection of Sex: \r\n        const {selectedSexOption} = this.state;\r\n        //For selection of Use:\r\n        const {selectedUseOption} = this.state;\r\n        //For selection of Material\r\n        const {selectedMaterialOption} = this.state;\r\n        //For selection of Technique\r\n        const {selectedTechniqueOption} = this.state;\r\n        //For selection of Theatrical Plays\r\n        const {selectedTPOption} = this.state;\r\n\r\n        const u_options = [];\r\n        const p_options = [];\r\n\r\n        /* Create Use Categories*/\r\n        for (var key in use_categories){\r\n            u_options.push( {label: use_categories[key].label, options: []});\r\n        }\r\n\r\n        for (var key in this.state.u_data){\r\n            u_options.forEach(element => {\r\n                if(element.label === this.state.u_data[key].use_category){\r\n                    element.options.push({label: this.state.u_data[key].name, value: this.state.u_data[key].name});\r\n                }\r\n            });\r\n        }\r\n    \r\n        /*For theatrical Plays*/\r\n        for (var key in this.state.TP_data){\r\n            p_options.push({label: this.state.TP_data[key].title, value:  this.state.TP_data[key].title}); \r\n        }\r\n\r\n        console.log(this.state);\r\n        console.log(u_options, sexs);\r\n       \r\n        this.enableSubmit();\r\n\r\n        return ( \r\n                <div className=\"main\"> \r\n                <form className=\"form\">\r\n                   <Container>\r\n                   <div style={{ width: '100%' }}>\r\n                        <label> Τίτλος\r\n                        <input className=\"small-input\" type=\"text\" name=\"name\" placeholder=\"Name\" onChange={this.onChange}/></label>\r\n                        </div>\r\n                        <div style={{ width: '100%' }}>\r\n                        <label>Περιγραφή</label> \r\n                        <TextArea className=\"textarea\" type=\"text\" name=\"descr\" onChange={this.onChange} maxLength={this.state.description_MAXlegnth}></TextArea>\r\n                        <div className=\"remaining-chars\"><span id=\"chars\">{this.state.description_MAXlegnth-this.decription_legnth()}</span> characters remaining</div>\r\n                        </div>\r\n                   </Container>\r\n                   <hr></hr>\r\n                   <Box display=\"flex\" flexDirection=\"row\">\r\n                       <Box  style={{ width: '50%' }}>\r\n                        <label> Χρήση\r\n                                <Select className = \"select-box\"\r\n                                    value = {selectedUseOption}\r\n                                    options = {u_options}\r\n                                    maxMenuHeight={200}\r\n                                    onChange = {this.handleUseSelect}\r\n                                    closeMenuOnSelect={true}  \r\n                                    isSearchable            \r\n                                />\r\n                            </label>\r\n                       </Box>\r\n                       <Box  style={{ width: '50%' }}>\r\n                            <label> Φύλο\r\n                                <Select className = \"select-box\"\r\n                                    value = {selectedSexOption} \r\n                                    isMulti                                \r\n                                    maxMenuHeight={150}\r\n                                    closeMenuOnSelect={true}\r\n                                    onChange = {this.handleSexSelect}\r\n                                    options = {sexs}\r\n                                    ignoreAccents      \r\n                                />\r\n                            </label>\r\n                        </Box>\r\n                   </Box>\r\n                   <br></br>\r\n                    <Box display=\"flex\" flexDirection=\"row\">\r\n                        <Box  style={{ width: '50%' }}>\r\n                        <label> Υλικό\r\n                            <CreatableSelect  className=\"select-box\"\r\n                                isClearable\r\n                                onChange={this.handleMaterialSelect}\r\n                                value = {selectedMaterialOption}\r\n                                options = {materials}\r\n                                maxMenuHeight={200}\r\n                                closeMenuOnSelect={true}  \r\n                                isSearchable   \r\n                                ignoreAccents                \r\n                            />\r\n                        </label>\r\n                        </Box>\r\n                        <Box  style={{ width: '50%' }}>\r\n                        <label> Τεχνική\r\n                            <CreatableSelect  className=\"select-box\"\r\n                                isClearable\r\n                                onChange={this.handleTechniqueSelect}\r\n                                value = {selectedTechniqueOption}\r\n                                options = {techniques}\r\n                                maxMenuHeight={200}\r\n                                closeMenuOnSelect={true}  \r\n                                isSearchable        \r\n                                ignoreAccents                 \r\n                            />\r\n                        </label>\r\n                        </Box>\r\n                    </Box>\r\n                    <br></br>\r\n                    <label> Σχεδιαστής\r\n                    <input className=\"small-input\" type=\"text\" name=\"designer\" onChange={this.onChange}/> </label> \r\n                    <hr></hr>\r\n                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                        <Box style={{ width: '50%' }}> \r\n                        <label> Περιοχή Αναφοράς\r\n                        <Geosuggest\r\n                            onChange={this.handleLocationChange}\r\n                            onSuggestSelect={this.handleLocationSelect}\r\n                        />\r\n                        {this.handleLocation()}\r\n                        </label>\r\n                        </Box>\r\n                       <Box style={{ width: '50%' }}>\r\n                       <label> Χώρα/Περιοχή Επιρροής \r\n                            <Geosuggest\r\n                                onChange={this.handleLocationInfluenceChange}\r\n                                onSuggestSelect={this.handleLocationInfluenceSelect}\r\n                            />\r\n                            {this.handleLocation()}\r\n                            {this.handleLocationInfluence()}\r\n                        </label>\r\n                       </Box>\r\n                   </Box>\r\n                   <hr></hr>\r\n                    <label> Θεατρικές Παραστάσεις\r\n                        <Select className = \"select-box\"\r\n                            value = {selectedTPOption}\r\n                            options = {p_options}\r\n                            maxMenuHeight={200}\r\n                            onChange = {this.handleTPSelect}\r\n                            closeMenuOnSelect={true}  \r\n                            isSearchable            \r\n                        /> </label>\r\n                        <br></br>\r\n                    <label> Ηθοποιοί\r\n                    <input className=\"small-input\" type=\"text\" name=\"actors\" onChange={this.onChange}/> </label> \r\n                    <br></br>\r\n                    <label> Ρόλος\r\n                    <input className=\"small-input\" type=\"text\" name=\"parts\" onChange={this.onChange}/> </label> \r\n                    <br></br>\r\n                    <button disabled = {!this.state.submit} type=\"submit\" className=\"button-save\" onClick={this.insert}>Save</button>\r\n                </form>\r\n                </div>\r\n                \r\n        );\r\n    }\r\n}\r\n\r\nexport default InsertCostume;\r\n\r\n"]},"metadata":{},"sourceType":"module"}