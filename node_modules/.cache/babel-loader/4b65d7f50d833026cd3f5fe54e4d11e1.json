{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react-costume-platform\\\\src\\\\components\\\\InsertTP\\\\InsertTP.js\";\nimport React, { Component } from 'react';\nimport { PostData } from '../../services/PostData';\nimport { Redirect } from 'react-router-dom';\nimport Select from 'react-select';\nimport Box from '@material-ui/core/Box';\nimport { TextArea, GridRow, Container } from 'semantic-ui-react';\nimport { use_categories } from '../../utils/options';\nimport 'react-notifications/lib/notifications.css';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport Insert from '../Insert/Insert';\n\nclass InsertTP extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n      console.log(this.state);\n    };\n\n    this.state = {\n      tpData: '',\n      name: '',\n      theater: '',\n      date: '',\n      actors: '',\n      director: '',\n      submit: false,\n      redirectToReferrer: false,\n      //Select\n      selectedCategoryOption: '',\n      /////////////////////////\n      cond1: false,\n      cond2: false\n    };\n    this.insert = this.insert.bind(this);\n  }\n\n  insert() {\n    PostData('insertTP', this.state).then(result => {\n      let responseJson = result;\n      console.log(responseJson);\n\n      if (responseJson.tpData) {\n        sessionStorage.setItem('tpData', JSON.stringify(responseJson));\n      } else {\n        alert(result.error);\n      }\n    });\n    console.log(this.state);\n  }\n\n  render() {\n    if (sessionStorage.getItem('tpData')) {\n      sessionStorage.setItem('tpData', '');\n      sessionStorage.clear();\n    }\n\n    return React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Insert, {\n      activeItem: \"tp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \" \", React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"\\u038C\\u03BD\\u03BF\\u03BC\\u03B1 \\u03A0\\u03B1\\u03C1\\u03AC\\u03C3\\u03C4\\u03B1\\u03C3\\u03B7\\u03C2\"), React.createElement(\"input\", {\n      className: \"small-input\",\n      type: \"text\",\n      name: \"name\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"\\u0398\\u03AD\\u03B1\\u03C4\\u03C1\\u03BF\"), React.createElement(\"input\", {\n      className: \"small-input\",\n      type: \"text\",\n      name: \"theater\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"\\u03A3\\u03BA\\u03B7\\u03BD\\u03BF\\u03B8\\u03AD\\u03C4\\u03B7\\u03C2\"), React.createElement(\"input\", {\n      className: \"small-input\",\n      type: \"text\",\n      name: \"director\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"button-save\",\n      onClick: this.insert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Save\"))));\n  }\n\n}\n\nexport default InsertTP;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\react-costume-platform\\src\\components\\InsertTP\\InsertTP.js"],"names":["React","Component","PostData","Redirect","Select","Box","TextArea","GridRow","Container","use_categories","NotificationContainer","NotificationManager","Insert","InsertTP","constructor","props","onChange","evt","setState","target","name","value","console","log","state","tpData","theater","date","actors","director","submit","redirectToReferrer","selectedCategoryOption","cond1","cond2","insert","bind","then","result","responseJson","sessionStorage","setItem","JSON","stringify","alert","error","render","getItem","clear"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {PostData} from '../../services/PostData';\r\nimport {Redirect} from 'react-router-dom'; \r\nimport Select from 'react-select';\r\nimport Box from '@material-ui/core/Box';\r\nimport { TextArea, GridRow, Container } from 'semantic-ui-react';\r\nimport {use_categories} from '../../utils/options';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport Insert from '../Insert/Insert';\r\n\r\nclass InsertTP extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { \r\n            tpData: '',\r\n            name: '',\r\n            theater: '',\r\n            date: '',\r\n            actors: '',\r\n            director: '',\r\n            submit: false,\r\n            redirectToReferrer: false,\r\n            //Select\r\n            selectedCategoryOption: '',\r\n            /////////////////////////\r\n            cond1: false,\r\n            cond2: false\r\n        };\r\n        this.insert = this.insert.bind(this);\r\n    }\r\n\r\n    onChange = ( evt ) => { \r\n        this.setState({ [evt.target.name]: evt.target.value }); \r\n        console.log(this.state)\r\n    };\r\n\r\n    insert(){\r\n\r\n            \r\n            PostData('insertTP',this.state).then((result) => {\r\n            let responseJson = result;\r\n            console.log(responseJson);\r\n            if(responseJson.tpData){\r\n                sessionStorage.setItem('tpData',JSON.stringify(responseJson));\r\n                \r\n            }\r\n            else{\r\n                alert(result.error);}\r\n            }\r\n            );\r\n            console.log(this.state);\r\n        \r\n            \r\n    }\r\n\r\n    render(){\r\n       if (sessionStorage.getItem('tpData')){\r\n            sessionStorage.setItem('tpData','');\r\n            sessionStorage.clear();\r\n        }\r\n        return(\r\n            <div className=\"main\"> \r\n            <Insert activeItem='tp'></Insert>\r\n                <form className=\"form\">\r\n                    <Container>\r\n                        <label> <h4>Όνομα Παράστασης</h4>\r\n                        <input className=\"small-input\" type=\"text\" name=\"name\" onChange={this.onChange}/></label>\r\n                        <label><h4>Θέατρο</h4>\r\n                        <input className=\"small-input\" type=\"text\" name=\"theater\" onChange={this.onChange}/></label>\r\n                        <label><h4>Σκηνοθέτης</h4>\r\n                        <input className=\"small-input\" type=\"text\" name=\"director\" onChange={this.onChange}/></label>\r\n                    <button  type=\"submit\" className=\"button-save\" onClick={this.insert}>Save</button>\r\n                    </Container>\r\n                </form>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default InsertTP;"]},"metadata":{},"sourceType":"module"}