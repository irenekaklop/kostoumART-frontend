{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react-costume-platform\\\\src\\\\components\\\\InsertCostume\\\\InsertCostume.js\";\nimport React, { Component } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport { PostData } from '../../services/PostData';\nimport { Redirect } from 'react-router-dom';\nimport Select from 'react-select';\nimport \"./InsertCostume.css\";\nconst sex_data = [{\n  label: 'Γυναίκα',\n  value: 'female_adult'\n}, {\n  label: 'Adras',\n  value: 'male_adult'\n}, {\n  label: 'Koritsi',\n  value: 'female_young'\n}, {\n  label: 'Agori',\n  value: 'male_young'\n}, {\n  label: 'Brefos',\n  value: 'Toodler'\n}];\n\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.name;\n}\n\nfunction renderSuggestion(suggestion) {\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, suggestion.name);\n}\n\nclass InsertCostume extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSelect = selectedSexOption => {\n      this.setState({\n        selectedSexOption\n      });\n      console.log(\"Option selected:\", selectedSexOption);\n    };\n\n    this.handleInputChange = newValue => {\n      this.setState({\n        newValue\n      });\n      console.log(\"Option selected:\", newValue);\n    };\n\n    this.handleUseSelect = selectedUseOption => {\n      this.setState({\n        selectedUseOption\n      });\n      console.log(\"Option selected:\", selectedUseOption);\n    };\n\n    this.onChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n    };\n\n    this.onChangeValue = (e, {\n      newValue,\n      method\n    }) => {\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.onSuggestionsFetchRequested = ({\n      value\n    }) => {\n      this.setState({\n        suggestions: this.getSuggestions(value)\n      });\n    };\n\n    this.onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    this.state = {\n      name: '',\n      descr: '',\n      //Sex data on insert\n      s_value: '',\n      //Uses' data\n      u_data: [],\n      usesData: '',\n      //for Use suggestion on insert\n      u_value: '',\n      newValue: '',\n      //Select\n      selectedSexOption: null,\n      selectedUseOption: null,\n      redirectToReferrer: false\n    };\n    this.insert = this.insert.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onChangeValue = this.onChangeValue.bind(this);\n  }\n  /*For mutli-selection of sex categories*/\n\n\n  getSuggestions(value) {\n    const escapedValue = escapeRegexCharacters(value.trim());\n\n    if (escapedValue === '') {\n      return [];\n    }\n\n    const regex = new RegExp('^' + escapedValue, 'i');\n    return this.state.u_data.filter(usesData => regex.test(usesData.name));\n  }\n\n  /* Get uses' data */\n  get_uses() {\n    PostData('get_uses', this.state).then(result => {\n      let responseJson = result;\n\n      if (responseJson.usesData) {\n        sessionStorage.setItem(\"usesData\", JSON.stringify(responseJson));\n        this.setState({\n          u_data: responseJson.usesData\n        });\n        console.log(this.state);\n      } else {\n        alert(result.error);\n      }\n    });\n  }\n  /*Insert of costume*/\n\n\n  insert() {\n    if (this.state.name && this.state.descr && this.state.selectedSexOption && this.state.selectedUseOption) {\n      this.state.u_value = this.state.selectedUseOption.value;\n\n      for (var key in this.state.selectedSexOption) {\n        this.state.s_value = this.state.selectedSexOption[key].value;\n        PostData('insertCostume', this.state).then(result => {\n          let responseJson = result;\n\n          if (responseJson.costumeData) {\n            sessionStorage.setItem('costumeData', JSON.stringify(responseJson));\n            this.setState({\n              redirectToReferrer: true\n            });\n          } else alert(result.error);\n        });\n      }\n    }\n  }\n\n  render() {\n    if (this.state.redirectToReferrer) {\n      return sessionStorage.setItem('costumeData', ''), sessionStorage.clear(), React.createElement(Redirect, {\n        to: '/success',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      });\n    } else if (sessionStorage.getItem('costumeData')) {\n      sessionStorage.setItem('costumeData', '');\n      sessionStorage.clear();\n    }\n\n    this.get_uses(); //For selection of Sex: \n\n    const selectedSexOption = this.state.selectedSexOption; //For selection of Use:\n\n    const selectedUseOption = this.state.selectedUseOption;\n    const u_options = [];\n\n    for (var key in this.state.u_data) {\n      u_options.push({\n        label: this.state.u_data[key].name,\n        value: this.state.u_data[key].name\n      });\n    }\n\n    console.log(this.state);\n    console.log(u_options, sex_data);\n    return React.createElement(\"div\", {\n      className: \"row \",\n      id: \"Body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Insert Costume Data\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Name:\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Name\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Description:\", React.createElement(Textarea, {\n      countLimit: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(Textarea, {\n      className: \"textarea\",\n      id: \"text_descr\",\n      name: \"descr\",\n      placeholder: \"Description\",\n      onChange: this.onChange,\n      countLimit: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Use:\", React.createElement(Select, {\n      className: \"select-box\",\n      value: selectedUseOption,\n      options: u_options,\n      maxMenuHeight: 170,\n      closeMenuOnSelect: true,\n      onChange: this.handleUseSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Sex:\", React.createElement(Select, {\n      className: \"select-box\",\n      value: selectedSexOption,\n      isMulti: true,\n      maxMenuHeight: 150,\n      closeMenuOnSelect: true,\n      onChange: this.handleSelect,\n      options: sex_data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"button\",\n      value: \"Save\",\n      onClick: this.insert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default InsertCostume;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\react-costume-platform\\src\\components\\InsertCostume\\InsertCostume.js"],"names":["React","Component","Autosuggest","PostData","Redirect","Select","sex_data","label","value","escapeRegexCharacters","str","replace","getSuggestionValue","suggestion","name","renderSuggestion","InsertCostume","constructor","props","handleSelect","selectedSexOption","setState","console","log","handleInputChange","newValue","handleUseSelect","selectedUseOption","onChange","evt","target","onChangeValue","e","method","onSuggestionsFetchRequested","suggestions","getSuggestions","onSuggestionsClearRequested","state","descr","s_value","u_data","usesData","u_value","redirectToReferrer","insert","bind","escapedValue","trim","regex","RegExp","filter","test","get_uses","then","result","responseJson","sessionStorage","setItem","JSON","stringify","alert","error","key","costumeData","render","clear","getItem","u_options","push"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport {PostData} from '../../services/PostData';\r\nimport {Redirect} from 'react-router-dom'; \r\nimport Select from 'react-select';\r\nimport \"./InsertCostume.css\";\r\n\r\nconst sex_data = [{\r\n    label: 'Γυναίκα',\r\n    value: 'female_adult'\r\n  },\r\n  {\r\n    label: 'Adras',\r\n    value: 'male_adult'\r\n    },\r\n    {\r\n      label: 'Koritsi',\r\n      value: 'female_young'\r\n    },\r\n    {\r\n      label: 'Agori',\r\n      value: 'male_young'\r\n    },\r\n    {\r\n      label: 'Brefos',\r\n      value: 'Toodler'\r\n}];\r\n\r\nfunction escapeRegexCharacters(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n    return suggestion.name;\r\n}\r\n  \r\nfunction renderSuggestion(suggestion) {\r\n    return (\r\n      <span>{suggestion.name}</span>\r\n    );\r\n}\r\n\r\nclass InsertCostume extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            descr: '',\r\n            //Sex data on insert\r\n            s_value: '',\r\n            //Uses' data\r\n            u_data:[],\r\n            usesData: '',\r\n            //for Use suggestion on insert\r\n            u_value: '', \r\n            newValue: '',\r\n            //Select\r\n            selectedSexOption: null,\r\n            selectedUseOption: null,\r\n\r\n            redirectToReferrer: false,\r\n        };\r\n        this.insert = this.insert.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onChangeValue = this.onChangeValue.bind(this);\r\n    }\r\n\r\n    /*For mutli-selection of sex categories*/\r\n    handleSelect = (selectedSexOption) => {\r\n        this.setState({ selectedSexOption });\r\n        console.log(`Option selected:`, selectedSexOption);\r\n    }\r\n\r\n    handleInputChange = (newValue) => {\r\n        this.setState({newValue});\r\n        console.log(`Option selected:`, newValue);\r\n\r\n    };\r\n\r\n    /*For selection of use categories*/\r\n    handleUseSelect = (selectedUseOption) => {\r\n        this.setState({selectedUseOption});\r\n        console.log(`Option selected:`, selectedUseOption);\r\n    }\r\n\r\n    /*Change functions for text fields*/\r\n    onChange = ( evt ) => { this.setState({ [evt.target.name]: evt.target.value }); };\r\n\r\n    /*Change functions for auto-suggest field*/\r\n    onChangeValue = ( e, {newValue, method}) => {\r\n        this.setState({\r\n            value: newValue\r\n        })\r\n    };\r\n\r\n    /*Functions for use suggestions*/\r\n\r\n    onSuggestionsFetchRequested = ({ value }) => {\r\n        this.setState({\r\n          suggestions: this.getSuggestions(value)\r\n        });\r\n    };\r\n    \r\n    onSuggestionsClearRequested = () => {\r\n        this.setState({\r\n          suggestions: []\r\n        });\r\n    };\r\n\r\n    getSuggestions(value) {\r\n        const escapedValue = escapeRegexCharacters(value.trim());   \r\n        if (escapedValue === '') {\r\n          return [];\r\n        }\r\n        const regex = new RegExp('^' + escapedValue, 'i');\r\n      \r\n        return this.state.u_data.filter(usesData => regex.test(usesData.name));\r\n    };\r\n\r\n    /* Get uses' data */ \r\n\r\n    get_uses(){\r\n        PostData('get_uses', this.state).then((result) => {\r\n            let responseJson = result;\r\n            if(responseJson.usesData){\r\n                sessionStorage.setItem(\"usesData\",JSON.stringify(responseJson));\r\n                this.setState({u_data: responseJson.usesData});\r\n                console.log(this.state);\r\n            }\r\n            else{\r\n                alert(result.error);\r\n            }\r\n        });\r\n    }\r\n\r\n    /*Insert of costume*/\r\n\r\n    insert() {\r\n        if(this.state.name && this.state.descr && this.state.selectedSexOption && this.state.selectedUseOption){\r\n            this.state.u_value = this.state.selectedUseOption.value;\r\n            for(var key in this.state.selectedSexOption){\r\n                    this.state.s_value = this.state.selectedSexOption[key].value;\r\n                    PostData('insertCostume',this.state).then((result) => {\r\n                    let responseJson = result;\r\n                    if(responseJson.costumeData){\r\n                        sessionStorage.setItem('costumeData',JSON.stringify(responseJson));\r\n                        this.setState({redirectToReferrer: true});\r\n                    }\r\n                    else\r\n                        alert(result.error);\r\n                    });\r\n           }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirectToReferrer) {\r\n            return (\r\n                sessionStorage.setItem('costumeData',''),\r\n                sessionStorage.clear(),\r\n                <Redirect to={'/success'}/>)\r\n        }\r\n        else if (sessionStorage.getItem('costumeData')){\r\n            sessionStorage.setItem('costumeData','');\r\n            sessionStorage.clear();\r\n        }\r\n\r\n        this.get_uses();\r\n        //For selection of Sex: \r\n        const {selectedSexOption} = this.state;\r\n    \r\n        //For selection of Use:\r\n        const {selectedUseOption} = this.state;\r\n        const u_options = [];\r\n        for (var key in this.state.u_data){\r\n            u_options.push( {label: this.state.u_data[key].name, value: this.state.u_data[key].name});\r\n        }\r\n        console.log(this.state);\r\n        console.log(u_options, sex_data);\r\n        \r\n        return (\r\n            <div className=\"row \" id=\"Body\">\r\n                <h4>Insert Costume Data</h4>\r\n                <form>\r\n                    <label>\r\n                        Name:\r\n                        <input type=\"text\" name=\"name\" placeholder=\"Name\" onChange={this.onChange}/>\r\n                    </label>\r\n                    <label>\r\n                        Description:\r\n                        <Textarea countLimit={10} />\r\n                        \r\n                        <Textarea className = \"textarea\" id=\"text_descr\" name=\"descr\" placeholder=\"Description\" onChange={this.onChange} countLimit={10} />\r\n                    </label>\r\n                    <label>\r\n                        Use:\r\n                        <Select className = \"select-box\"\r\n                            value = {selectedUseOption}\r\n                            options = {u_options}\r\n                            maxMenuHeight={170}\r\n                            closeMenuOnSelect={true}\r\n                            onChange = {this.handleUseSelect}\r\n                            />\r\n                    </label>\r\n                    <label>\r\n                        Sex:\r\n                        <Select className = \"select-box\"\r\n                            value = {selectedSexOption} \r\n                            isMulti\r\n                            maxMenuHeight={150}\r\n                            closeMenuOnSelect={true}\r\n                            onChange = {this.handleSelect}\r\n                            options = {sex_data}\r\n                        />\r\n                    </label>\r\n                    <input type=\"submit\" className=\"button\" value=\"Save\" onClick={this.insert}/>\r\n                </form>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\nexport default InsertCostume;\r\n\r\n"]},"metadata":{},"sourceType":"module"}