{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\costumeArt-platform\\\\src\\\\components\\\\InsertCostume\\\\InsertCostume.js\";\nimport React, { Component } from 'react';\nimport { PostData } from '../../services/PostData';\nimport { Redirect } from 'react-router-dom';\nimport Select from 'react-select';\nimport \"./InsertCostume.css\";\nimport { TextArea } from 'semantic-ui-react';\nimport { Container, Row, Col } from 'reactstrap';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport Geosuggest from 'react-geosuggest';\nconst sex_data = [{\n  label: 'Γυναίκα',\n  value: 'female_adult'\n}, {\n  label: 'Andras',\n  value: 'male_adult'\n}, {\n  label: 'Koritsi',\n  value: 'female_young'\n}, {\n  label: 'Agori',\n  value: 'male_young'\n}, {\n  label: 'Brefos',\n  value: 'Toodler'\n}];\n\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.name;\n}\n\nfunction renderSuggestion(suggestion) {\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, suggestion.name);\n}\n\nclass InsertCostume extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = address => {\n      this.setState({\n        address\n      });\n    };\n\n    this.handleSelect = address => {\n      geocodeByAddress(address).then(results => getLatLng(results[0])).then(latLng => console.log('Success', latLng)).catch(error => console.error('Error', error));\n    };\n\n    this.handleSelect = selectedSexOption => {\n      this.setState({\n        selectedSexOption\n      });\n      console.log(\"Option selected:\", selectedSexOption);\n    };\n\n    this.handleInputChange = newValue => {\n      this.setState({\n        newValue\n      });\n      console.log(\"Option selected:\", newValue);\n    };\n\n    this.handleUseSelect = selectedUseOption => {\n      this.setState({\n        selectedUseOption\n      });\n      console.log(\"Option selected:\", selectedUseOption);\n    };\n\n    this.onChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n    };\n\n    this.onChangeValue = (e, {\n      newValue,\n      method\n    }) => {\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.onSuggestionsFetchRequested = ({\n      value\n    }) => {\n      this.setState({\n        suggestions: this.getSuggestions(value)\n      });\n    };\n\n    this.onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    this.state = {\n      name: '',\n      descr: '',\n      //Sex data on insert\n      s_value: '',\n      //Uses' data\n      u_data: [],\n      usesData: '',\n      //for Use suggestion on insert\n      u_value: '',\n      newValue: '',\n      //Select\n      selectedSexOption: null,\n      selectedUseOption: null,\n      //Geosuggest\n      address: '',\n      //For validation reasons\n      description_MAXlegnth: 300,\n      description_status: false,\n      submit: false,\n      redirectToReferrer: false\n    };\n    this.insert = this.insert.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onChangeValue = this.onChangeValue.bind(this);\n    this.get_uses = this.get_uses.bind(this);\n  }\n\n  decription_legnth() {\n    return this.state.descr.length;\n  }\n\n  handleValidation() {\n    if (this.decription_legnth() < 300) {\n      this.state.description_status = true;\n    }\n\n    if (this.state.name && this.state.description_status && this.state.selectedSexOption && this.state.selectedUseOption) {\n      this.state.submit = true;\n    }\n  }\n  /*For mutli-selection of sex categories*/\n\n\n  /*Functions for use suggestions*/\n  onSuggestSelect(suggest) {\n    console.log(suggest);\n  }\n\n  getSuggestions(value) {\n    const escapedValue = escapeRegexCharacters(value.trim());\n\n    if (escapedValue === '') {\n      return [];\n    }\n\n    const regex = new RegExp('^' + escapedValue, 'i');\n    return this.state.u_data.filter(usesData => regex.test(usesData.name));\n  }\n\n  /* Get uses' data */\n  get_uses() {\n    PostData('get_uses', this.state).then(result => {\n      let responseJson = result;\n\n      if (responseJson.usesData) {\n        sessionStorage.setItem(\"usesData\", JSON.stringify(responseJson));\n        this.setState({\n          u_data: responseJson.usesData\n        });\n        console.log(this.state);\n      } else {\n        alert(result.error);\n      }\n    });\n  }\n  /*Insert of costume*/\n\n\n  insert() {\n    if (this.state.name && this.state.description_status && this.state.selectedSexOption && this.state.selectedUseOption) {\n      this.state.u_value = this.state.selectedUseOption.value;\n\n      for (var key in this.state.selectedSexOption) {\n        this.state.s_value = this.state.selectedSexOption[key].value;\n        PostData('insertCostume', this.state).then(result => {\n          let responseJson = result;\n\n          if (responseJson.costumeData) {\n            sessionStorage.setItem('costumeData', JSON.stringify(responseJson));\n            this.setState({\n              redirectToReferrer: true\n            });\n          } else alert(result.error);\n        });\n      }\n    }\n  }\n\n  render() {\n    if (this.state.redirectToReferrer) {\n      return sessionStorage.setItem('costumeData', ''), sessionStorage.clear(), React.createElement(Redirect, {\n        to: '/success',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      });\n    } else if (sessionStorage.getItem('costumeData')) {\n      sessionStorage.setItem('costumeData', '');\n      sessionStorage.clear();\n    }\n\n    this.get_uses(); //For selection of Sex: \n\n    const selectedSexOption = this.state.selectedSexOption; //For selection of Use:\n\n    const selectedUseOption = this.state.selectedUseOption;\n    const u_options = [];\n\n    for (var key in this.state.u_data) {\n      u_options.push({\n        label: this.state.u_data[key].name,\n        value: this.state.u_data[key].name\n      });\n    }\n\n    console.log(this.state);\n    console.log(u_options, sex_data);\n    this.handleValidation();\n    return React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \" Name:\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Name\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Description:\"), React.createElement(TextArea, {\n      type: \"text\",\n      name: \"descr\",\n      onChange: this.onChange,\n      maxLength: this.state.description_MAXlegnth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"remaining-chars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"chars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, this.state.description_MAXlegnth - this.decription_legnth()), \" characters remaining\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \" Use:\", React.createElement(Select, {\n      className: \"select-box\",\n      value: selectedUseOption,\n      options: u_options,\n      maxMenuHeight: 200,\n      onChange: this.handleUseSelect,\n      closeMenuOnSelect: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Sex:\", React.createElement(Select, {\n      className: \"select-box\",\n      value: selectedSexOption,\n      isMulti: true,\n      maxMenuHeight: 150,\n      closeMenuOnSelect: true,\n      onChange: this.handleSelect,\n      options: sex_data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"Location:\", React.createElement(Geosuggest, {\n      name: \"name\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      disabled: !this.state.submit,\n      type: \"submit\",\n      className: \"button-save\",\n      onClick: this.insert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"Save\")));\n  }\n\n}\n\nexport default InsertCostume;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\costumeArt-platform\\src\\components\\InsertCostume\\InsertCostume.js"],"names":["React","Component","PostData","Redirect","Select","TextArea","Container","Row","Col","PlacesAutocomplete","geocodeByAddress","getLatLng","Geosuggest","sex_data","label","value","escapeRegexCharacters","str","replace","getSuggestionValue","suggestion","name","renderSuggestion","InsertCostume","constructor","props","handleChange","address","setState","handleSelect","then","results","latLng","console","log","catch","error","selectedSexOption","handleInputChange","newValue","handleUseSelect","selectedUseOption","onChange","evt","target","onChangeValue","e","method","onSuggestionsFetchRequested","suggestions","getSuggestions","onSuggestionsClearRequested","state","descr","s_value","u_data","usesData","u_value","description_MAXlegnth","description_status","submit","redirectToReferrer","insert","bind","get_uses","decription_legnth","length","handleValidation","onSuggestSelect","suggest","escapedValue","trim","regex","RegExp","filter","test","result","responseJson","sessionStorage","setItem","JSON","stringify","alert","key","costumeData","render","clear","getItem","u_options","push"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {PostData} from '../../services/PostData';\r\nimport {Redirect} from 'react-router-dom'; \r\nimport Select from 'react-select';\r\nimport \"./InsertCostume.css\";\r\nimport { TextArea } from 'semantic-ui-react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport PlacesAutocomplete, {geocodeByAddress,getLatLng} from 'react-places-autocomplete';\r\nimport Geosuggest from 'react-geosuggest';\r\n\r\nconst sex_data = [{\r\n    label: 'Γυναίκα',\r\n    value: 'female_adult'\r\n  },\r\n  {\r\n    label: 'Andras',\r\n    value: 'male_adult'\r\n    },\r\n    {\r\n      label: 'Koritsi',\r\n      value: 'female_young'\r\n    },\r\n    {\r\n      label: 'Agori',\r\n      value: 'male_young'\r\n    },\r\n    {\r\n      label: 'Brefos',\r\n      value: 'Toodler'\r\n}];\r\n\r\nfunction escapeRegexCharacters(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n    return suggestion.name;\r\n}\r\n  \r\nfunction renderSuggestion(suggestion) {\r\n    return (\r\n      <span>{suggestion.name}</span>\r\n    );\r\n}\r\n\r\nclass InsertCostume extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            descr: '',\r\n            //Sex data on insert\r\n            s_value: '',\r\n            //Uses' data\r\n            u_data:[],\r\n            usesData: '',\r\n            //for Use suggestion on insert\r\n            u_value: '', \r\n            newValue: '',\r\n            //Select\r\n            selectedSexOption: null,\r\n            selectedUseOption: null,\r\n            //Geosuggest\r\n            address: '',\r\n\r\n            //For validation reasons\r\n            description_MAXlegnth: 300,\r\n            description_status: false,\r\n            submit: false,\r\n            redirectToReferrer: false\r\n        };\r\n        this.insert = this.insert.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onChangeValue = this.onChangeValue.bind(this);\r\n        this.get_uses = this.get_uses.bind(this);\r\n    }\r\n\r\n    handleChange = address => {\r\n        this.setState({ address });\r\n      };\r\n      \r\n    handleSelect = address => {\r\n        geocodeByAddress(address)\r\n          .then(results => getLatLng(results[0]))\r\n          .then(latLng => console.log('Success', latLng))\r\n          .catch(error => console.error('Error', error));\r\n      };\r\n\r\n    decription_legnth(){\r\n        return this.state.descr.length;\r\n    }\r\n\r\n    handleValidation(){\r\n        if(this.decription_legnth() < 300){\r\n            this.state.description_status = true;\r\n        }\r\n\r\n        if(this.state.name &&  this.state.description_status && this.state.selectedSexOption && this.state.selectedUseOption){\r\n            this.state.submit = true;\r\n        }\r\n    }\r\n\r\n    /*For mutli-selection of sex categories*/\r\n    handleSelect = (selectedSexOption) => {\r\n        this.setState({ selectedSexOption });\r\n        console.log(`Option selected:`, selectedSexOption);\r\n    }\r\n\r\n    handleInputChange = (newValue) => {\r\n        this.setState({newValue});\r\n        console.log(`Option selected:`, newValue);\r\n\r\n    };\r\n\r\n    /*For selection of use categories*/\r\n    handleUseSelect = (selectedUseOption) => {\r\n        this.setState({selectedUseOption});\r\n        console.log(`Option selected:`, selectedUseOption);\r\n    }\r\n\r\n    /*Change functions for text fields*/\r\n    onChange = ( evt ) => { this.setState({ [evt.target.name]: evt.target.value }); };\r\n\r\n    /*Change functions for auto-suggest field*/\r\n    onChangeValue = ( e, {newValue, method}) => {\r\n        this.setState({\r\n            value: newValue\r\n        })\r\n    };\r\n\r\n    /*Functions for use suggestions*/\r\n    onSuggestSelect(suggest) {\r\n        console.log(suggest);\r\n    }\r\n\r\n    onSuggestionsFetchRequested = ({ value }) => {\r\n        this.setState({\r\n          suggestions: this.getSuggestions(value)\r\n        });\r\n    };\r\n    \r\n    onSuggestionsClearRequested = () => {\r\n        this.setState({\r\n          suggestions: []\r\n        });\r\n    };\r\n\r\n    getSuggestions(value) {\r\n        const escapedValue = escapeRegexCharacters(value.trim());   \r\n        if (escapedValue === '') {\r\n          return [];\r\n        }\r\n        const regex = new RegExp('^' + escapedValue, 'i');\r\n      \r\n        return this.state.u_data.filter(usesData => regex.test(usesData.name));\r\n    };\r\n\r\n    /* Get uses' data */ \r\n\r\n    get_uses(){\r\n        PostData('get_uses', this.state).then((result) => {\r\n            let responseJson = result;\r\n            if(responseJson.usesData){\r\n                sessionStorage.setItem(\"usesData\",JSON.stringify(responseJson));\r\n                this.setState({u_data: responseJson.usesData});\r\n                console.log(this.state);\r\n            }\r\n            else{\r\n                alert(result.error);\r\n            }\r\n        });\r\n    }\r\n\r\n    /*Insert of costume*/\r\n\r\n    insert() {\r\n        if(this.state.name && this.state.description_status && this.state.selectedSexOption && this.state.selectedUseOption){\r\n            this.state.u_value = this.state.selectedUseOption.value;\r\n            for(var key in this.state.selectedSexOption){\r\n                    this.state.s_value = this.state.selectedSexOption[key].value;\r\n                    PostData('insertCostume',this.state).then((result) => {\r\n                    let responseJson = result;\r\n                    if(responseJson.costumeData){\r\n                        sessionStorage.setItem('costumeData',JSON.stringify(responseJson));\r\n                        this.setState({redirectToReferrer: true});\r\n                    }\r\n                    else\r\n                        alert(result.error);\r\n                    });\r\n           }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirectToReferrer) {\r\n            return (\r\n                sessionStorage.setItem('costumeData',''),\r\n                sessionStorage.clear(),\r\n                <Redirect to={'/success'}/>)\r\n        }\r\n        else if (sessionStorage.getItem('costumeData')){\r\n            sessionStorage.setItem('costumeData','');\r\n            sessionStorage.clear();\r\n        }\r\n        \r\n        this.get_uses();\r\n\r\n        //For selection of Sex: \r\n        const {selectedSexOption} = this.state;\r\n    \r\n        //For selection of Use:\r\n        const {selectedUseOption} = this.state;\r\n        const u_options = [];\r\n        for (var key in this.state.u_data){\r\n            u_options.push( {label: this.state.u_data[key].name, value: this.state.u_data[key].name});\r\n        }\r\n        console.log(this.state);\r\n        console.log(u_options, sex_data);\r\n       \r\n        this.handleValidation();\r\n\r\n        return ( \r\n                <div className=\"main\"> \r\n                <form className=\"form\">\r\n                    <label> Name:\r\n                    <input type=\"text\" name=\"name\" placeholder=\"Name\" onChange={this.onChange}/></label>\r\n                    <label>Description:</label> \r\n                    <TextArea type=\"text\" name=\"descr\" onChange={this.onChange} maxLength={this.state.description_MAXlegnth}></TextArea>\r\n                    <div className=\"remaining-chars\"><span id=\"chars\">{this.state.description_MAXlegnth-this.decription_legnth()}</span> characters remaining</div>\r\n                    <label> Use:\r\n                        <Select className = \"select-box\"\r\n                            value = {selectedUseOption}\r\n                            options = {u_options}\r\n                            maxMenuHeight={200}\r\n                            onChange = {this.handleUseSelect}\r\n                            closeMenuOnSelect={true}                    \r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        Sex:\r\n                        <Select className = \"select-box\"\r\n                            value = {selectedSexOption} \r\n                            isMulti                                \r\n                            maxMenuHeight={150}\r\n                            closeMenuOnSelect={true}\r\n                            onChange = {this.handleSelect}\r\n                            options = {sex_data}\r\n                        />\r\n                    </label>\r\n                   <label>\r\n                        Location: \r\n                        <Geosuggest \r\n                        name=\"name\"\r\n                        onChange={this.onChange}\r\n                        />\r\n                   </label>\r\n                    <button disabled = {!this.state.submit} type=\"submit\" className=\"button-save\" onClick={this.insert}>Save</button>\r\n                </form>\r\n                </div>\r\n                \r\n        );\r\n    }\r\n}\r\n\r\nexport default InsertCostume;\r\n\r\n"]},"metadata":{},"sourceType":"module"}