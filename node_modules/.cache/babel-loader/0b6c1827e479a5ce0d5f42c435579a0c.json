{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react-costume-platform\\\\src\\\\components\\\\InsertCostume\\\\InsertCostume.js\";\nimport React, { Component } from 'react';\nimport { PostData } from '../../services/PostData';\nimport { Redirect } from 'react-router-dom';\nimport Select from 'react-select';\nimport \"./InsertCostume.css\";\nimport \"../Geosuggest/Geosuggest.css\";\nimport { TextArea, GridRow, Container } from 'semantic-ui-react';\nimport Geosuggest from 'react-geosuggest';\nimport { sexs, materials, techniques, use_categories } from \"../../utils/options\";\nimport CreatableSelect from 'react-select/creatable';\nimport 'react-notifications/lib/notifications.css';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport Insert from '../Insert/Insert';\n\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.name;\n}\n\nfunction renderSuggestion(suggestion) {\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, suggestion.name);\n}\n\nclass InsertCostume extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLocationChange = location_select => {\n      this.setState({\n        location_select\n      });\n      console.log(\"HandleLocationChange:\", this.state);\n    };\n\n    this.handleLocationSelect = location_select => {\n      this.setState({\n        location_select\n      });\n      console.log(\"Option selected:\", location_select);\n    };\n\n    this.handleLocationInfluenceChange = location_influence_select => {\n      this.setState({\n        location_influence_select\n      });\n      console.log(\"HandleLocationChange:\", this.state);\n    };\n\n    this.handleLocationInfluenceSelect = location_influence_select => {\n      this.setState({\n        location_influence_select\n      });\n      console.log(\"Option selected:\", location_influence_select);\n    };\n\n    this.handleUseSelect = selectedUseOption => {\n      this.setState({\n        selectedUseOption\n      });\n      console.log(\"Option selected:\", selectedUseOption);\n    };\n\n    this.handleTPSelect = selectedTPOption => {\n      this.setState({\n        selectedTPOption\n      });\n      console.log(\"Option selected:\", selectedTPOption);\n    };\n\n    this.handleSexSelect = selectedSexOption => {\n      this.setState({\n        selectedSexOption\n      });\n      console.log(\"Option selected:\", selectedSexOption);\n    };\n\n    this.handleMaterialSelect = selectedMaterialOption => {\n      this.setState({\n        selectedMaterialOption\n      });\n      console.log(\"Option selected:\", selectedMaterialOption);\n    };\n\n    this.handleTechniqueSelect = selectedTechniqueOption => {\n      this.setState({\n        selectedTechniqueOption\n      });\n      console.log(\"Option selected:\", selectedTechniqueOption);\n    };\n\n    this.onChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n    };\n\n    this.onChangeValue = (e, {\n      newValue,\n      method\n    }) => {\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.onSuggestionsFetchRequested = ({\n      value\n    }) => {\n      this.setState({\n        suggestions: this.getSuggestions(value)\n      });\n    };\n\n    this.onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    this.state = {\n      costumeData: '',\n      name: '',\n      descr: '',\n      //Uses' data\n      u_data: [],\n      usesData: '',\n      //for Use suggestion on insert\n      u_value: '',\n      newValue: '',\n      //Theatrical Plays data\n      TP_data: [],\n      TPData: '',\n      tp_value: '',\n      newTPvalue: '',\n      //For backend insert\n      actors: '',\n      designer: '',\n      parts: '',\n      //Material data on insert\n      m_value: '',\n      //Technique data on insert\n      t_value: '',\n      //Sex data on insert\n      s_value: '',\n      //Select\n      selectedSexOption: null,\n      selectedUseOption: null,\n      selectedMaterialOption: null,\n      selectedTechniqueOption: null,\n      selectedTPOption: null,\n      //Geosuggest\n      location: '',\n      location_select: '',\n      location_influence: '',\n      location_influence_select: '',\n      //For validation reasons\n      description_MAXlegnth: 300,\n      description_status: false,\n      submit: false,\n      redirectToReferrer: false,\n      /////////////////////////\n      cond1: false,\n      cond2: false\n    };\n    this.insert = this.insert.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onChangeValue = this.onChangeValue.bind(this);\n    this.get_uses = this.get_uses.bind(this);\n    this.enableSubmit = this.enableSubmit.bind(this);\n  }\n  /*Secure way to getData*/\n\n\n  componentDidMount() {\n    this.get_uses();\n    this.get_theatrical_plays();\n  }\n  /*Geosuggest functions*/\n\n\n  handleLocation() {\n    if (this.state.location_select) {\n      this.state.location = this.state.location_select.description;\n      console.log(this.state);\n    }\n  }\n\n  handleLocationInfluence() {\n    if (this.state.location_influence_select) {\n      this.state.location_influence = this.state.location_influence_select.description;\n      console.log(this.state);\n    }\n  }\n  /*Functions for description legnth and validation*/\n\n\n  decription_legnth() {\n    return this.state.descr.length;\n  }\n\n  createNotification(type) {\n    switch (type) {\n      case \"error1\":\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(NotificationContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, NotificationManager.error('Η εγγραφή υπάρχει ήδη.')));\n\n      case \"error2\":\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(NotificationContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, NotificationManager.warning(\"Text should be under 300 characters\", 'Too big description!', 2000)));\n\n      case \"insert-success\":\n        return React.createElement(NotificationContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, NotificationManager.success('Entry is successfully inserted to DB', 'Success!', 2000));\n    }\n\n    ;\n  }\n\n  enableSubmit() {\n    if (this.state.name) {\n      //If name is given, check if it already exist\n      PostData('costumeExists', this.state).then(result => {\n        let responseJson = result;\n        console.log(\"result\", responseJson);\n\n        if (result.exists === 'true') {\n          var result = null;\n\n          if (this.state.costumeData === \"\") {\n            //To prevent notification after insert()\n            console.log(\"already exists\");\n            result = this.createNotification(\"error1\");\n            console.log(result);\n            this.state.cond1 = false;\n            return result;\n          }\n        } else {\n          console.log(\"doesnt exists\");\n          this.state.cond1 = true;\n        }\n      });\n    } else {\n      console.log(\"no name\");\n    } //if everything is submitted\n\n\n    if (this.decription_legnth() < 300 && this.decription_legnth() > 0) {\n      console.log(\"ok legnth\");\n      this.state.cond2 = true;\n    } else if (this.decription_legnth() >= 300) {\n      this.state.submit = false;\n      console.log(\"too big or too small description\");\n      this.state.cond2 = false;\n      var result = this.createNotification(\"error2\");\n      console.log(result);\n      return result;\n    } else {\n      this.state.submit = false;\n      this.state.cond2 = false;\n      return result;\n    }\n\n    if (this.state.name && this.state.descr && this.state.location && this.state.selectedMaterialOption && this.state.selectedSexOption && this.state.selectedTechniqueOption && this.state.selectedUseOption && this.state.location_influence && this.state.designer) {\n      if (this.state.cond1 && this.state.cond2) {\n        this.state.submit = true;\n      }\n    } else {\n      console.log(\"something is missing\");\n    }\n\n    return null;\n  }\n  /*For selection of use categories*/\n\n\n  getSuggestions(value) {\n    const escapedValue = escapeRegexCharacters(value.trim());\n\n    if (escapedValue === '') {\n      return [];\n    }\n\n    const regex = new RegExp('^' + escapedValue, 'i');\n    return this.state.u_data.filter(usesData => regex.test(usesData.name));\n  }\n\n  /* Get uses from database*/\n  get_uses() {\n    PostData('get_uses', this.state).then(result => {\n      let responseJson = result;\n\n      if (responseJson.usesData) {\n        sessionStorage.setItem(\"usesData\", JSON.stringify(responseJson));\n        this.setState({\n          u_data: responseJson.usesData\n        });\n        console.log(this.state);\n      } else {\n        alert(result.error);\n      }\n    });\n  }\n  /*Get Theatrical Plays from database*/\n\n\n  get_theatrical_plays() {}\n  /* PostData('get_theatrical_plays', this.state).then((result) => {\r\n       let responseJson = result;\r\n       if(responseJson.TPData){\r\n           sessionStorage.setItem(\"TPData\",JSON.stringify(responseJson));\r\n           this.setState({TP_data: responseJson.TPData});\r\n           console.log(\"Theatrical Plays\",this.state);\r\n       }\r\n       else{\r\n           alert(result.error);\r\n       }\r\n   });*/\n\n  /*Insert of costume*/\n\n\n  insert() {\n    var result;\n    this.state.u_value = this.state.selectedUseOption.value;\n    this.state.t_value = this.state.selectedTechniqueOption.value;\n    this.state.m_value = this.state.selectedMaterialOption.value;\n    this.state.tp_value = \"\";\n\n    for (var key in this.state.selectedSexOption) {\n      this.state.s_value = this.state.selectedSexOption[key].value;\n      console.log(\"insert\", this.state);\n      PostData('insertCostume', this.state).then(result => {\n        let responseJson = result;\n\n        if (responseJson.costumeData) {\n          sessionStorage.setItem('costumeData', JSON.stringify(responseJson)); //this.setState({redirectToReferrer: true});\n\n          result = this.createNotification(\"insert-success\");\n          console.log(result);\n          return result;\n        } else alert(result.error);\n      });\n    }\n  }\n\n  render() {\n    if (sessionStorage.getItem('costumeData')) {\n      sessionStorage.setItem('costumeData', '');\n      sessionStorage.clear();\n    } //For selection of Sex: \n\n\n    const selectedSexOption = this.state.selectedSexOption; //For selection of Use:\n\n    const selectedUseOption = this.state.selectedUseOption; //For selection of Material\n\n    const selectedMaterialOption = this.state.selectedMaterialOption; //For selection of Technique\n\n    const selectedTechniqueOption = this.state.selectedTechniqueOption; //For selection of Theatrical Plays\n\n    const selectedTPOption = this.state.selectedTPOption;\n    const u_options = [];\n    const p_options = [];\n    /* Create Use Categories*/\n\n    for (var key in use_categories) {\n      u_options.push({\n        label: use_categories[key].label,\n        options: []\n      });\n    }\n\n    for (var key in this.state.u_data) {\n      u_options.forEach(element => {\n        if (element.label === this.state.u_data[key].use_category) {\n          element.options.push({\n            label: this.state.u_data[key].name,\n            value: this.state.u_data[key].name\n          });\n        }\n      });\n    }\n    /*For theatrical Plays*/\n\n\n    for (var key in this.state.TP_data) {\n      p_options.push({\n        label: this.state.TP_data[key].title,\n        value: this.state.TP_data[key].title\n      });\n    }\n\n    console.log(this.state);\n    console.log(u_options, sexs);\n    return React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(Insert, {\n      activeItem: \"costume\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, React.createElement(NotificationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, this.enableSubmit()), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, \" \", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, \"\\u03A4\\u03AF\\u03C4\\u03BB\\u03BF\\u03C2\"), React.createElement(\"input\", {\n      className: \"small-input\",\n      type: \"text\",\n      name: \"name\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, \"\\u03A0\\u03B5\\u03C1\\u03B9\\u03B3\\u03C1\\u03B1\\u03C6\\u03AE\"), React.createElement(TextArea, {\n      className: \"textarea\",\n      type: \"text\",\n      name: \"descr\",\n      onChange: this.onChange\n      /*maxLength={this.state.description_MAXlegnth}*/\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"remaining-chars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"chars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, this.state.description_MAXlegnth - this.decription_legnth()), \" characters remaining\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }), React.createElement(Container, {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, \" \\u03A7\\u03C1\\u03AE\\u03C3\\u03B7\", React.createElement(Select, {\n      className: \"select-Container\",\n      value: selectedUseOption,\n      options: u_options,\n      maxMenuHeight: 200,\n      onChange: this.handleUseSelect,\n      closeMenuOnSelect: true,\n      isSearchable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"/insertUse\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, \" \\u03A0\\u03C1\\u03BF\\u03C3\\u03B8\\u03AE\\u03BA\\u03B7 \\u03BD\\u03AD\\u03B1\\u03C2 \\u03C7\\u03C1\\u03AE\\u03C3\\u03B7\\u03C2\")), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, \" \\u03A6\\u03CD\\u03BB\\u03BF\", React.createElement(Select, {\n      className: \"select-Container\",\n      value: selectedSexOption,\n      isMulti: true,\n      maxMenuHeight: 150,\n      closeMenuOnSelect: true,\n      onChange: this.handleSexSelect,\n      options: sexs,\n      ignoreAccents: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, \" \\u03A5\\u03BB\\u03B9\\u03BA\\u03CC\", React.createElement(CreatableSelect, {\n      className: \"select-Container\",\n      isClearable: true,\n      onChange: this.handleMaterialSelect,\n      value: selectedMaterialOption,\n      options: materials,\n      maxMenuHeight: 200,\n      closeMenuOnSelect: true,\n      isSearchable: true,\n      ignoreAccents: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, \" \\u03A4\\u03B5\\u03C7\\u03BD\\u03B9\\u03BA\\u03AE\", React.createElement(CreatableSelect, {\n      className: \"select-Container\",\n      isClearable: true,\n      onChange: this.handleTechniqueSelect,\n      value: selectedTechniqueOption,\n      options: techniques,\n      maxMenuHeight: 200,\n      closeMenuOnSelect: true,\n      isSearchable: true,\n      ignoreAccents: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, \" \\u03A3\\u03C7\\u03B5\\u03B4\\u03B9\\u03B1\\u03C3\\u03C4\\u03AE\\u03C2\", React.createElement(\"input\", {\n      className: \"small-input\",\n      type: \"text\",\n      name: \"designer\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }), \" \")), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }), React.createElement(Container, {\n      display: \"flex\",\n      flexDirection: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, \" \\u03A0\\u03B5\\u03C1\\u03B9\\u03BF\\u03C7\\u03AE \\u0391\\u03BD\\u03B1\\u03C6\\u03BF\\u03C1\\u03AC\\u03C2\", React.createElement(Geosuggest, {\n      onChange: this.handleLocationChange,\n      onSuggestSelect: this.handleLocationSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }), this.handleLocation()), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, \" \\u03A7\\u03CE\\u03C1\\u03B1/\\u03A0\\u03B5\\u03C1\\u03B9\\u03BF\\u03C7\\u03AE \\u0395\\u03C0\\u03B9\\u03C1\\u03C1\\u03BF\\u03AE\\u03C2\", React.createElement(Geosuggest, {\n      onChange: this.handleLocationInfluenceChange,\n      onSuggestSelect: this.handleLocationInfluenceSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }), this.handleLocation(), this.handleLocationInfluence())), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, \" \\u0398\\u03B5\\u03B1\\u03C4\\u03C1\\u03B9\\u03BA\\u03AD\\u03C2 \\u03A0\\u03B1\\u03C1\\u03B1\\u03C3\\u03C4\\u03AC\\u03C3\\u03B5\\u03B9\\u03C2\", React.createElement(Select, {\n      className: \"select-Container\",\n      value: selectedTPOption,\n      options: p_options,\n      maxMenuHeight: 200,\n      onChange: this.handleTPSelect,\n      closeMenuOnSelect: true,\n      isSearchable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }), \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, \" \\u0397\\u03B8\\u03BF\\u03C0\\u03BF\\u03B9\\u03BF\\u03AF\", React.createElement(\"input\", {\n      className: \"small-input\",\n      type: \"text\",\n      name: \"actors\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }), \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, \" \\u03A1\\u03CC\\u03BB\\u03BF\\u03C2\", React.createElement(\"input\", {\n      className: \"small-input\",\n      type: \"text\",\n      name: \"parts\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }), \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      disabled: !this.state.submit,\n      type: \"submit\",\n      className: \"button-save\",\n      onClick: this.insert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }, \"Save\"))));\n  }\n\n}\n\nexport default InsertCostume;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\react-costume-platform\\src\\components\\InsertCostume\\InsertCostume.js"],"names":["React","Component","PostData","Redirect","Select","TextArea","GridRow","Container","Geosuggest","sexs","materials","techniques","use_categories","CreatableSelect","NotificationContainer","NotificationManager","Insert","escapeRegexCharacters","str","replace","getSuggestionValue","suggestion","name","renderSuggestion","InsertCostume","constructor","props","handleLocationChange","location_select","setState","console","log","state","handleLocationSelect","handleLocationInfluenceChange","location_influence_select","handleLocationInfluenceSelect","handleUseSelect","selectedUseOption","handleTPSelect","selectedTPOption","handleSexSelect","selectedSexOption","handleMaterialSelect","selectedMaterialOption","handleTechniqueSelect","selectedTechniqueOption","onChange","evt","target","value","onChangeValue","e","newValue","method","onSuggestionsFetchRequested","suggestions","getSuggestions","onSuggestionsClearRequested","costumeData","descr","u_data","usesData","u_value","TP_data","TPData","tp_value","newTPvalue","actors","designer","parts","m_value","t_value","s_value","location","location_influence","description_MAXlegnth","description_status","submit","redirectToReferrer","cond1","cond2","insert","bind","get_uses","enableSubmit","componentDidMount","get_theatrical_plays","handleLocation","description","handleLocationInfluence","decription_legnth","length","createNotification","type","error","warning","success","then","result","responseJson","exists","escapedValue","trim","regex","RegExp","filter","test","sessionStorage","setItem","JSON","stringify","alert","key","render","getItem","clear","u_options","p_options","push","label","options","forEach","element","use_category","title","width"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {PostData} from '../../services/PostData';\r\nimport {Redirect} from 'react-router-dom'; \r\nimport Select from 'react-select';\r\nimport \"./InsertCostume.css\";\r\nimport \"../Geosuggest/Geosuggest.css\";\r\nimport { TextArea, GridRow, Container } from 'semantic-ui-react';\r\nimport Geosuggest from 'react-geosuggest';\r\nimport {sexs, materials, techniques, use_categories} from \"../../utils/options\";\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport Insert from '../Insert/Insert';\r\n\r\nfunction escapeRegexCharacters(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n    return suggestion.name;\r\n}\r\n  \r\nfunction renderSuggestion(suggestion) {\r\n    return (\r\n      <span>{suggestion.name}</span>\r\n    );\r\n}\r\n\r\nclass InsertCostume extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            costumeData: '',\r\n            name: '',\r\n            descr: '',\r\n            //Uses' data\r\n            u_data:[],\r\n            usesData: '',\r\n            //for Use suggestion on insert\r\n            u_value: '', \r\n            newValue: '',\r\n            //Theatrical Plays data\r\n            TP_data:[],\r\n            TPData: '',\r\n            tp_value:'',\r\n            newTPvalue: '',\r\n            //For backend insert\r\n            actors: '',\r\n            designer: '',\r\n            parts: '',\r\n            //Material data on insert\r\n            m_value: '',\r\n            //Technique data on insert\r\n            t_value: '',\r\n            //Sex data on insert\r\n            s_value: '',\r\n            //Select\r\n            selectedSexOption: null,\r\n            selectedUseOption: null,\r\n            selectedMaterialOption: null,\r\n            selectedTechniqueOption: null,\r\n            selectedTPOption: null,\r\n            //Geosuggest\r\n            location:'',\r\n            location_select:'',\r\n            location_influence:'',\r\n            location_influence_select:'',\r\n\r\n            //For validation reasons\r\n            description_MAXlegnth: 300,\r\n            description_status: false,\r\n            submit: false,\r\n            redirectToReferrer: false,\r\n\r\n            /////////////////////////\r\n            cond1: false,\r\n            cond2: false\r\n        };\r\n        this.insert = this.insert.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onChangeValue = this.onChangeValue.bind(this);\r\n        this.get_uses = this.get_uses.bind(this);\r\n        this.enableSubmit = this.enableSubmit.bind(this);\r\n    }\r\n\r\n    /*Secure way to getData*/\r\n    componentDidMount(){\r\n        this.get_uses();\r\n        this.get_theatrical_plays();\r\n    }\r\n\r\n    /*Geosuggest functions*/\r\n    handleLocationChange = location_select => {\r\n        this.setState({ location_select });\r\n        console.log(\"HandleLocationChange:\", this.state);\r\n    };\r\n\r\n    handleLocationSelect = (location_select) => {\r\n        this.setState({ location_select });\r\n        console.log(`Option selected:`, location_select);\r\n    }\r\n\r\n    handleLocationInfluenceChange = location_influence_select => {\r\n        this.setState({ location_influence_select });\r\n        console.log(\"HandleLocationChange:\", this.state);\r\n    };\r\n\r\n    handleLocationInfluenceSelect = (location_influence_select) => {\r\n        this.setState({location_influence_select });\r\n        console.log(`Option selected:`, location_influence_select);\r\n    }\r\n    \r\n    handleLocation(){\r\n        if(this.state.location_select){\r\n            this.state.location = this.state.location_select.description;\r\n            console.log(this.state);\r\n        }\r\n    }\r\n\r\n    handleLocationInfluence(){\r\n        if(this.state.location_influence_select){\r\n            this.state.location_influence = this.state.location_influence_select.description;\r\n            console.log(this.state);\r\n        }\r\n\r\n    }\r\n\r\n    /*Functions for description legnth and validation*/\r\n    decription_legnth(){\r\n        return this.state.descr.length;\r\n    }\r\n\r\n    createNotification(type){\r\n        switch (type) {\r\n            case \"error1\":\r\n                return(\r\n                    <div>\r\n                        <NotificationContainer>{ NotificationManager.error('Η εγγραφή υπάρχει ήδη.') }</NotificationContainer>\r\n                    </div>\r\n                )\r\n            case \"error2\":\r\n                return(\r\n                    <div>\r\n                        <NotificationContainer>{ NotificationManager.warning(\"Text should be under 300 characters\",'Too big description!', 2000) }</NotificationContainer>\r\n                    </div>\r\n                )\r\n            case \"insert-success\":\r\n                return(\r\n                    <NotificationContainer>{ NotificationManager.success('Entry is successfully inserted to DB','Success!',2000) }</NotificationContainer>\r\n                )\r\n            \r\n        };\r\n    }\r\n\r\n    enableSubmit(){\r\n        if(this.state.name){ //If name is given, check if it already exist\r\n            PostData('costumeExists', this.state).then((result) => {\r\n                let responseJson = result;\r\n                console.log(\"result\", responseJson);\r\n                if(result.exists==='true'){\r\n                    var result = null;\r\n                    if(this.state.costumeData===\"\"){ //To prevent notification after insert()\r\n                        console.log(\"already exists\");\r\n                        result=this.createNotification(\"error1\");\r\n                        console.log(result);\r\n                        this.state.cond1 = false;\r\n                        return result;\r\n                    }\r\n                }\r\n                else{\r\n                    console.log(\"doesnt exists\");\r\n                    this.state.cond1=true;\r\n                }\r\n            })     \r\n        }\r\n        else{\r\n            console.log(\"no name\");\r\n        }\r\n        \r\n        //if everything is submitted\r\n        if(this.decription_legnth() < 300 && this.decription_legnth() > 0){\r\n            console.log(\"ok legnth\");\r\n            this.state.cond2=true;\r\n        }\r\n        else if(this.decription_legnth() >= 300){\r\n            this.state.submit = false;\r\n            console.log(\"too big or too small description\");\r\n            this.state.cond2=false;\r\n            var result=this.createNotification(\"error2\");\r\n            console.log(result);\r\n            return result;\r\n        }\r\n        else{\r\n            this.state.submit = false;\r\n            this.state.cond2=false;\r\n            return result;\r\n        }\r\n\r\n        if(this.state.name && this.state.descr && this.state.location && this.state.selectedMaterialOption\r\n            && this.state.selectedSexOption && this.state.selectedTechniqueOption && this.state.selectedUseOption\r\n            && this.state.location_influence && this.state.designer){\r\n                if(this.state.cond1 && this.state.cond2){\r\n                    this.state.submit = true;\r\n                }\r\n            }\r\n        else{\r\n            console.log(\"something is missing\");   \r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*For selection of use categories*/\r\n    handleUseSelect = (selectedUseOption) => {\r\n        this.setState({selectedUseOption});\r\n        console.log(`Option selected:`, selectedUseOption);\r\n    }\r\n\r\n    /*For selection of theatrical plays*/\r\n    handleTPSelect = (selectedTPOption) => {\r\n        this.setState({selectedTPOption});\r\n        console.log(`Option selected:`, selectedTPOption);\r\n    }\r\n\r\n    /*For mutli-selection of sex categories*/\r\n    handleSexSelect = (selectedSexOption) => {\r\n        this.setState({ selectedSexOption });\r\n        console.log(`Option selected:`, selectedSexOption);\r\n    }\r\n\r\n    handleMaterialSelect = (selectedMaterialOption) => {\r\n        this.setState({ selectedMaterialOption });\r\n        \r\n        console.log(`Option selected:`, selectedMaterialOption);\r\n    }\r\n\r\n    handleTechniqueSelect = (selectedTechniqueOption) => {\r\n        this.setState({ selectedTechniqueOption });\r\n        console.log(`Option selected:`, selectedTechniqueOption);\r\n    }\r\n\r\n    /*Change functions for text fields*/\r\n    onChange = ( evt ) => { this.setState({ [evt.target.name]: evt.target.value }); };\r\n\r\n    /*Change functions for auto-suggest field*/\r\n    onChangeValue = ( e, {newValue, method}) => {\r\n        this.setState({\r\n            value: newValue\r\n        })\r\n    };\r\n\r\n    /*Functions for use suggestions -- NOT USED*/\r\n    onSuggestionsFetchRequested = ({ value }) => {\r\n        this.setState({\r\n          suggestions: this.getSuggestions(value)\r\n        });\r\n    };\r\n    \r\n    onSuggestionsClearRequested = () => {\r\n        this.setState({\r\n          suggestions: []\r\n        });\r\n    };\r\n\r\n    getSuggestions(value) {\r\n        const escapedValue = escapeRegexCharacters(value.trim());   \r\n        if (escapedValue === '') {\r\n          return [];\r\n        }\r\n        const regex = new RegExp('^' + escapedValue, 'i');\r\n      \r\n        return this.state.u_data.filter(usesData => regex.test(usesData.name));\r\n    };\r\n\r\n    /* Get uses from database*/ \r\n    get_uses(){\r\n        PostData('get_uses', this.state).then((result) => {\r\n            let responseJson = result;\r\n            if(responseJson.usesData){\r\n                sessionStorage.setItem(\"usesData\",JSON.stringify(responseJson));\r\n                this.setState({u_data: responseJson.usesData});\r\n                console.log(this.state);\r\n            }\r\n            else{\r\n                alert(result.error);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    /*Get Theatrical Plays from database*/\r\n    get_theatrical_plays(){\r\n       /* PostData('get_theatrical_plays', this.state).then((result) => {\r\n            let responseJson = result;\r\n            if(responseJson.TPData){\r\n                sessionStorage.setItem(\"TPData\",JSON.stringify(responseJson));\r\n                this.setState({TP_data: responseJson.TPData});\r\n                console.log(\"Theatrical Plays\",this.state);\r\n            }\r\n            else{\r\n                alert(result.error);\r\n            }\r\n        });*/\r\n    }\r\n    \r\n    /*Insert of costume*/\r\n\r\n    insert() {\r\n        var result;\r\n        this.state.u_value = this.state.selectedUseOption.value;\r\n        this.state.t_value = this.state.selectedTechniqueOption.value;\r\n        this.state.m_value = this.state.selectedMaterialOption.value;\r\n        this.state.tp_value = \"\";\r\n        for(var key in this.state.selectedSexOption){\r\n                this.state.s_value = this.state.selectedSexOption[key].value;\r\n                console.log(\"insert\",this.state);\r\n                PostData('insertCostume',this.state).then((result) => {\r\n                let responseJson = result;\r\n                if(responseJson.costumeData){\r\n                    sessionStorage.setItem('costumeData',JSON.stringify(responseJson));\r\n                    //this.setState({redirectToReferrer: true});\r\n                    result=this.createNotification(\"insert-success\");\r\n                    console.log(result);\r\n                    return result;\r\n                }\r\n                else\r\n                    alert(result.error);\r\n                });\r\n       }    \r\n    }\r\n\r\n    render() {\r\n       if (sessionStorage.getItem('costumeData')){\r\n            sessionStorage.setItem('costumeData','');\r\n            sessionStorage.clear();\r\n       }\r\n        //For selection of Sex: \r\n        const {selectedSexOption} = this.state;\r\n        //For selection of Use:\r\n        const {selectedUseOption} = this.state;\r\n        //For selection of Material\r\n        const {selectedMaterialOption} = this.state;\r\n        //For selection of Technique\r\n        const {selectedTechniqueOption} = this.state;\r\n        //For selection of Theatrical Plays\r\n        const {selectedTPOption} = this.state;\r\n\r\n        const u_options = [];\r\n        const p_options = [];\r\n\r\n        /* Create Use Categories*/\r\n        for (var key in use_categories){\r\n            u_options.push( {label: use_categories[key].label, options: []});\r\n        }\r\n\r\n        for (var key in this.state.u_data){\r\n            u_options.forEach(element => {\r\n                if(element.label === this.state.u_data[key].use_category){\r\n                    element.options.push({label: this.state.u_data[key].name, value: this.state.u_data[key].name});\r\n                }\r\n            });\r\n        }\r\n    \r\n        /*For theatrical Plays*/\r\n        for (var key in this.state.TP_data){\r\n            p_options.push({label: this.state.TP_data[key].title, value:  this.state.TP_data[key].title}); \r\n        }\r\n\r\n        console.log(this.state);\r\n        console.log(u_options, sexs);\r\n       \r\n        return ( \r\n            \r\n                <div className=\"main\"> \r\n                <Insert activeItem ='costume'></Insert>\r\n                <form className=\"form\">\r\n                \r\n                <NotificationContainer>{this.enableSubmit()}</NotificationContainer>\r\n\r\n                   <Container>\r\n                   <div>\r\n                        <label> <h3>Τίτλος</h3>\r\n                        <input className=\"small-input\" type=\"text\" name=\"name\" onChange={this.onChange}/></label>\r\n                        </div>\r\n                        <div style={{ width: '100%' }}>\r\n                        <label>Περιγραφή</label> \r\n                        <TextArea className=\"textarea\" type=\"text\" name=\"descr\" onChange={this.onChange} /*maxLength={this.state.description_MAXlegnth}*/></TextArea>\r\n                        <div className=\"remaining-chars\"><span id=\"chars\">{this.state.description_MAXlegnth-this.decription_legnth()}</span> characters remaining</div>\r\n                        </div>\r\n                    </Container>\r\n                    <hr></hr>\r\n                    <Container className='container'>\r\n                        <label> Χρήση \r\n                            <Select className = \"select-Container\"\r\n                                value = {selectedUseOption}\r\n                                options = {u_options}\r\n                                maxMenuHeight={200}\r\n                                onChange = {this.handleUseSelect}\r\n                                closeMenuOnSelect={true}  \r\n                                isSearchable            \r\n                            />\r\n                            <a href='/insertUse'> Προσθήκη νέας χρήσης</a>\r\n                        </label>\r\n                        <label> Φύλο\r\n                            <Select className = \"select-Container\"\r\n                                value = {selectedSexOption} \r\n                                isMulti                                \r\n                                maxMenuHeight={150}\r\n                                closeMenuOnSelect={true}\r\n                                onChange = {this.handleSexSelect}\r\n                                options = {sexs}\r\n                                ignoreAccents      \r\n                            />\r\n                        </label>\r\n                        <label> Υλικό\r\n                        <CreatableSelect  className=\"select-Container\"\r\n                            isClearable\r\n                            onChange={this.handleMaterialSelect}\r\n                            value = {selectedMaterialOption}\r\n                            options = {materials}\r\n                            maxMenuHeight={200}\r\n                            closeMenuOnSelect={true}  \r\n                            isSearchable                                   \r\n                            ignoreAccents                \r\n                        />\r\n                        </label>\r\n                        <label> Τεχνική\r\n                            <CreatableSelect  className=\"select-Container\"\r\n                                isClearable\r\n                                onChange={this.handleTechniqueSelect}\r\n                                value = {selectedTechniqueOption}\r\n                                options = {techniques}\r\n                                maxMenuHeight={200}\r\n                                closeMenuOnSelect={true}  \r\n                                isSearchable        \r\n                                ignoreAccents                 \r\n                            />\r\n                        </label>\r\n                        <label> Σχεδιαστής\r\n                        <input className=\"small-input\" type=\"text\" name=\"designer\" onChange={this.onChange}/> </label> \r\n                       </Container>\r\n                    \r\n                    <hr></hr>\r\n\r\n                    <Container display=\"flex\" flexDirection=\"row\" >\r\n                        \r\n                        <label> Περιοχή Αναφοράς\r\n                        <Geosuggest\r\n                            onChange={this.handleLocationChange}\r\n                            onSuggestSelect={this.handleLocationSelect}\r\n                        />\r\n                        {this.handleLocation()}\r\n                        </label>\r\n                       \r\n                     \r\n                       <label> Χώρα/Περιοχή Επιρροής \r\n                            <Geosuggest\r\n                                onChange={this.handleLocationInfluenceChange}\r\n                                onSuggestSelect={this.handleLocationInfluenceSelect}\r\n                            />\r\n                            {this.handleLocation()}\r\n                            {this.handleLocationInfluence()}\r\n                        </label>\r\n                       \r\n                   </Container>\r\n                   <hr></hr>\r\n                   <Container>\r\n                   <label> Θεατρικές Παραστάσεις\r\n                        <Select className = \"select-Container\"\r\n                            value = {selectedTPOption}\r\n                            options = {p_options}\r\n                            maxMenuHeight={200}\r\n                            onChange = {this.handleTPSelect}\r\n                            closeMenuOnSelect={true}  \r\n                            isSearchable            \r\n                        /> </label>\r\n                        <br></br>\r\n                    <label> Ηθοποιοί\r\n                    <input className=\"small-input\" type=\"text\" name=\"actors\" onChange={this.onChange}/> </label> \r\n                    <br></br>\r\n                    <label> Ρόλος\r\n                    <input className=\"small-input\" type=\"text\" name=\"parts\" onChange={this.onChange}/> </label> \r\n                    <br></br>\r\n                    <button disabled = {!this.state.submit} type=\"submit\" className=\"button-save\" onClick={this.insert}>Save</button>\r\n                   </Container>\r\n                   \r\n                </form>\r\n                </div>\r\n                \r\n        );\r\n    }\r\n}\r\n\r\nexport default InsertCostume;\r\n\r\n"]},"metadata":{},"sourceType":"module"}