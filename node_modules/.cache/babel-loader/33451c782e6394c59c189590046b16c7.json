{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react-costume-platform\\\\src\\\\components\\\\Autocomplete\\\\Autocomplete.js\";\nimport React, { Component } from 'react';\nimport { InsertData } from '../../services/InsertData';\nimport Suggestions from '../Suggestions/Suggestions';\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      results: [],\n      query: ''\n    };\n\n    this.getInfo = () => {\n      InsertData('costumes', this.state).then(result => {\n        let responseJson = result;\n\n        if (responseJson.query) {\n          sessionStorage.setItem(\"query\", JSON.stringify(responseJson));\n          this.setState({\n            results: responseJson.query\n          });\n          console.log(this.state);\n        } else {\n          alert(result.error);\n        }\n      });\n    };\n\n    this.handleInputChange = () => {\n      this.setState({\n        query: this.search.value\n      }, () => {\n        if (this.state.query && this.state.query.length > 1) {\n          if (this.state.query.length % 2 === 0) {\n            this.getInfo();\n          }\n        }\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Search for...\",\n      ref: input => this.search = input,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Suggestions, {\n      results: this.state.results,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\react-costume-platform\\src\\components\\Autocomplete\\Autocomplete.js"],"names":["React","Component","InsertData","Suggestions","Search","state","results","query","getInfo","then","result","responseJson","sessionStorage","setItem","JSON","stringify","setState","console","log","alert","error","handleInputChange","search","value","length","render","input"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BI,KAD6B,GACrB;AACNC,MAAAA,OAAO,EAAC,EADF;AAENC,MAAAA,KAAK,EAAE;AAFD,KADqB;;AAAA,SAM7BC,OAN6B,GAMnB,MAAM;AACdN,MAAAA,UAAU,CAAC,UAAD,EAAa,KAAKG,KAAlB,CAAV,CAAmCI,IAAnC,CAAyCC,MAAD,IAAY;AAChD,YAAIC,YAAY,GAAGD,MAAnB;;AACA,YAAGC,YAAY,CAACJ,KAAhB,EAAsB;AAClBK,UAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAA+BC,IAAI,CAACC,SAAL,CAAeJ,YAAf,CAA/B;AACA,eAAKK,QAAL,CAAc;AAACV,YAAAA,OAAO,EAAEK,YAAY,CAACJ;AAAvB,WAAd;AACAU,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAjB;AACH,SAJD,MAKI;AACAc,UAAAA,KAAK,CAACT,MAAM,CAACU,KAAR,CAAL;AACH;AACJ,OAVD;AAWD,KAlB4B;;AAAA,SAoB7BC,iBApB6B,GAoBT,MAAM;AACxB,WAAKL,QAAL,CAAc;AACZT,QAAAA,KAAK,EAAE,KAAKe,MAAL,CAAYC;AADP,OAAd,EAEG,MAAM;AACP,YAAI,KAAKlB,KAAL,CAAWE,KAAX,IAAoB,KAAKF,KAAL,CAAWE,KAAX,CAAiBiB,MAAjB,GAA0B,CAAlD,EAAqD;AACnD,cAAI,KAAKnB,KAAL,CAAWE,KAAX,CAAiBiB,MAAjB,GAA0B,CAA1B,KAAgC,CAApC,EAAuC;AACrC,iBAAKhB,OAAL;AACD;AACF;AACF,OARD;AASD,KA9B4B;AAAA;;AAgC7BiB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,WAAW,EAAC,eADd;AAEE,MAAA,GAAG,EAAEC,KAAK,IAAI,KAAKJ,MAAL,GAAcI,KAF9B;AAGE,MAAA,QAAQ,EAAE,KAAKL,iBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAE,KAAKhB,KAAL,CAAWC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAUD;;AA3C4B;;AA8C/B,eAAeF,MAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { InsertData } from '../../services/InsertData';\r\nimport Suggestions from '../Suggestions/Suggestions';\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    results:[],\r\n    query: '',\r\n  }\r\n\r\n  getInfo = () => {\r\n    InsertData('costumes', this.state).then((result) => {\r\n        let responseJson = result;\r\n        if(responseJson.query){\r\n            sessionStorage.setItem(\"query\",JSON.stringify(responseJson));\r\n            this.setState({results: responseJson.query});\r\n            console.log(this.state);\r\n        }\r\n        else{\r\n            alert(result.error);\r\n        }\r\n    });\r\n  }\r\n\r\n  handleInputChange = () => {\r\n    this.setState({\r\n      query: this.search.value\r\n    }, () => {\r\n      if (this.state.query && this.state.query.length > 1) {\r\n        if (this.state.query.length % 2 === 0) {\r\n          this.getInfo()\r\n        }\r\n      } \r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form>\r\n        <input\r\n          placeholder=\"Search for...\"\r\n          ref={input => this.search = input}\r\n          onChange={this.handleInputChange}\r\n        />\r\n        <Suggestions results={this.state.results} />\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search\r\n"]},"metadata":{},"sourceType":"module"}