{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react-costume-platform\\\\src\\\\components\\\\InsertCostume\\\\InsertCostume.js\";\nimport React, { Component } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport { PostData } from '../../services/PostData';\nimport { Redirect } from 'react-router-dom';\nimport Multiselect from 'multiselect-dropdown-react';\nimport Select from 'react-select';\nimport \"./InsertCostume.css\";\nimport { ListItem } from 'semantic-ui-react';\nconst sex_data = [{\n  label: 'Γυναίκα',\n  value: 'female_adult'\n}, {\n  label: 'Adras',\n  value: 'male_adult'\n}, {\n  label: 'Koritsi',\n  value: 'female_young'\n}, {\n  label: 'Agori',\n  value: 'male_young'\n}, {\n  label: 'Brefos',\n  value: 'Toodler'\n}];\n\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.name;\n}\n\nfunction renderSuggestion(suggestion) {\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, suggestion.name);\n}\n\nclass InsertCostume extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSelect = selectedOption => {\n      this.setState({\n        selectedOption\n      });\n      console.log(\"Option selected:\", selectedOption);\n    };\n\n    this.handleUseSelect = selectedUseOption => {\n      this.setState({\n        selectedUseOption\n      });\n      console.log(\"Option selected:\", selectedUseOption);\n    };\n\n    this.onChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n    };\n\n    this.onChangeValue = (e, {\n      newValue,\n      method\n    }) => {\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.onSuggestionsFetchRequested = ({\n      value\n    }) => {\n      this.setState({\n        suggestions: this.getSuggestions(value)\n      });\n    };\n\n    this.onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    this.state = {\n      costumeData: '',\n      name: '',\n      descr: '',\n      sex: [],\n      //Uses' data\n      u_data: [],\n      usesData: '',\n      //for Use suggestion\n      value: '',\n      //== use\n      suggestions: [],\n      redirectToReferrer: false,\n      //Select\n      selectedOption: null\n    };\n    this.insert = this.insert.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onChangeValue = this.onChangeValue.bind(this);\n  }\n  /*For mutli-selection of sex categories*/\n\n\n  getSuggestions(value) {\n    const escapedValue = escapeRegexCharacters(value.trim());\n\n    if (escapedValue === '') {\n      return [];\n    }\n\n    const regex = new RegExp('^' + escapedValue, 'i');\n    return this.state.u_data.filter(usesData => regex.test(usesData.name));\n  }\n\n  /* Get uses' data */\n  get_uses() {\n    PostData('get_uses', this.state).then(result => {\n      let responseJson = result;\n\n      if (responseJson.usesData) {\n        sessionStorage.setItem(\"usesData\", JSON.stringify(responseJson));\n        this.setState({\n          u_data: responseJson.usesData\n        });\n        console.log(this.state);\n      } else {\n        alert(result.error);\n      }\n    });\n  }\n  /*Insert of costume*/\n\n\n  insert() {\n    if (this.state.name && this.state.descr && this.state.value) {\n      PostData('insertCostume', this.state).then(result => {\n        let responseJson = result;\n\n        if (responseJson.costumeData) {\n          sessionStorage.setItem('costumeData', JSON.stringify(responseJson));\n          this.setState({\n            redirectToReferrer: true\n          });\n        } else alert(result.error);\n      });\n    }\n  }\n\n  render() {\n    if (this.state.redirectToReferrer) {\n      return sessionStorage.setItem('costumeData', ''), sessionStorage.clear(), React.createElement(Redirect, {\n        to: '/success',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      });\n    } else if (sessionStorage.getItem('costumeData')) {\n      sessionStorage.setItem('costumeData', '');\n      sessionStorage.clear();\n    }\n\n    this.get_uses();\n    const _this$state = this.state,\n          value = _this$state.value,\n          suggestions = _this$state.suggestions;\n    const inputProps = {\n      placeholder: \"Type something\",\n      value,\n      onChange: this.onChangeValue\n    }; //For selection of Sex: \n\n    const selectedOption = this.state.selectedOption; //For selection of Use\n\n    const selectedUseOption = this.state.selectedUseOption;\n    var u_options = [];\n\n    for (var key in this.state.u_data) {\n      u_options.push({\n        name: this.state.u_data[key],\n        label: this.state.u_data[key].name\n      });\n    }\n\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      className: \"row \",\n      id: \"sBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"medium-5 columns left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Insert Costume Data\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Name\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"descr\",\n      placeholder: \"Description\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(Autosuggest, {\n      suggestions: suggestions,\n      onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n      getSuggestionValue: getSuggestionValue,\n      renderSuggestion: renderSuggestion,\n      inputProps: inputProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(Select, {\n      options: u_options,\n      maxMenuHeight: 150,\n      closeMenuOnSelect: true,\n      value: selectedUseOption,\n      onChange: this.handleUseSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(Select, {\n      className: \"select-box\",\n      value: selectedOption,\n      isMulti: true,\n      maxMenuHeight: 150,\n      closeMenuOnSelect: true,\n      onChange: this.handleSelect,\n      options: sex_data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"button\",\n      value: \"Save\",\n      onClick: this.insert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default InsertCostume;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\react-costume-platform\\src\\components\\InsertCostume\\InsertCostume.js"],"names":["React","Component","Autosuggest","PostData","Redirect","Multiselect","Select","ListItem","sex_data","label","value","escapeRegexCharacters","str","replace","getSuggestionValue","suggestion","name","renderSuggestion","InsertCostume","constructor","props","handleSelect","selectedOption","setState","console","log","handleUseSelect","selectedUseOption","onChange","evt","target","onChangeValue","e","newValue","method","onSuggestionsFetchRequested","suggestions","getSuggestions","onSuggestionsClearRequested","state","costumeData","descr","sex","u_data","usesData","redirectToReferrer","insert","bind","escapedValue","trim","regex","RegExp","filter","test","get_uses","then","result","responseJson","sessionStorage","setItem","JSON","stringify","alert","error","render","clear","getItem","inputProps","placeholder","u_options","key","push"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport {PostData} from '../../services/PostData';\r\nimport {Redirect} from 'react-router-dom'; \r\nimport Multiselect from 'multiselect-dropdown-react';\r\nimport Select from 'react-select';\r\nimport \"./InsertCostume.css\";\r\nimport { ListItem } from 'semantic-ui-react';\r\n\r\nconst sex_data = [{\r\n    label: 'Γυναίκα',\r\n    value: 'female_adult'\r\n  },\r\n  {\r\n    label: 'Adras',\r\n    value: 'male_adult'\r\n    },\r\n    {\r\n      label: 'Koritsi',\r\n      value: 'female_young'\r\n    },\r\n    {\r\n      label: 'Agori',\r\n      value: 'male_young'\r\n    },\r\n    {\r\n      label: 'Brefos',\r\n      value: 'Toodler'\r\n}];\r\n\r\nfunction escapeRegexCharacters(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n    return suggestion.name;\r\n}\r\n  \r\nfunction renderSuggestion(suggestion) {\r\n    return (\r\n      <span>{suggestion.name}</span>\r\n    );\r\n}\r\n\r\nclass InsertCostume extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            costumeData: '',\r\n            name: '',\r\n            descr: '',\r\n            sex: [],\r\n            //Uses' data\r\n            u_data:[],\r\n            usesData: '',\r\n            //for Use suggestion\r\n            value: '', //== use\r\n            suggestions: [],\r\n            redirectToReferrer: false,\r\n            //Select\r\n            selectedOption: null\r\n        };\r\n        this.insert = this.insert.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onChangeValue = this.onChangeValue.bind(this);\r\n    }\r\n\r\n    /*For mutli-selection of sex categories*/\r\n    handleSelect = (selectedOption) => {\r\n        this.setState({ selectedOption });\r\n        console.log(`Option selected:`, selectedOption);\r\n    }\r\n\r\n    /*For selection of use categories*/\r\n    handleUseSelect = (selectedUseOption) => {\r\n        this.setState({ selectedUseOption });\r\n        console.log(`Option selected:`, selectedUseOption);\r\n    }\r\n\r\n    /*Change functions for text fields*/\r\n    onChange = ( evt ) => { this.setState({ [evt.target.name]: evt.target.value }); };\r\n\r\n    /*Change functions for auto-suggest field*/\r\n    onChangeValue = ( e, {newValue, method}) => {\r\n        this.setState({\r\n            value: newValue\r\n        })\r\n    };\r\n\r\n    /*Functions for use suggestions*/\r\n\r\n    onSuggestionsFetchRequested = ({ value }) => {\r\n        this.setState({\r\n          suggestions: this.getSuggestions(value)\r\n        });\r\n    };\r\n    \r\n    onSuggestionsClearRequested = () => {\r\n        this.setState({\r\n          suggestions: []\r\n        });\r\n    };\r\n\r\n    getSuggestions(value) {\r\n        const escapedValue = escapeRegexCharacters(value.trim());   \r\n        if (escapedValue === '') {\r\n          return [];\r\n        }\r\n        const regex = new RegExp('^' + escapedValue, 'i');\r\n      \r\n        return this.state.u_data.filter(usesData => regex.test(usesData.name));\r\n    };\r\n\r\n    /* Get uses' data */ \r\n\r\n    get_uses(){\r\n        PostData('get_uses', this.state).then((result) => {\r\n            let responseJson = result;\r\n            if(responseJson.usesData){\r\n                sessionStorage.setItem(\"usesData\",JSON.stringify(responseJson));\r\n                this.setState({u_data: responseJson.usesData});\r\n                console.log(this.state);\r\n            }\r\n            else{\r\n                alert(result.error);\r\n            }\r\n        });\r\n    }\r\n\r\n    /*Insert of costume*/\r\n\r\n    insert() {\r\n        if(this.state.name && this.state.descr && this.state.value){\r\n            PostData('insertCostume',this.state).then((result) => {\r\n            let responseJson = result;\r\n            if(responseJson.costumeData){\r\n                sessionStorage.setItem('costumeData',JSON.stringify(responseJson));\r\n                this.setState({redirectToReferrer: true});\r\n            }\r\n            else\r\n                alert(result.error);\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirectToReferrer) {\r\n            return (\r\n                sessionStorage.setItem('costumeData',''),\r\n                sessionStorage.clear(),\r\n                <Redirect to={'/success'}/>)\r\n        }\r\n        else if (sessionStorage.getItem('costumeData')){\r\n            sessionStorage.setItem('costumeData','');\r\n            sessionStorage.clear();\r\n        }\r\n\r\n        this.get_uses();\r\n        const { value, suggestions } = this.state;\r\n        const inputProps = {\r\n            placeholder: \"Type something\",\r\n            value,\r\n            onChange: this.onChangeValue\r\n        };\r\n\r\n        //For selection of Sex: \r\n        const {selectedOption} = this.state;\r\n        //For selection of Use\r\n        const {selectedUseOption} = this.state;\r\n        var u_options = [];\r\n        for (var key in this.state.u_data){\r\n            u_options.push({name: this.state.u_data[key], label: this.state.u_data[key].name});\r\n        }\r\n        console.log(this.state);\r\n        \r\n        return (\r\n            <div className=\"row \" id=\"sBody\">\r\n                <div className=\"medium-5 columns left\">\r\n                <h4>Insert Costume Data</h4>\r\n                <input type=\"text\" name=\"name\" placeholder=\"Name\" onChange={this.onChange}/>\r\n                <input type=\"text\" name=\"descr\" placeholder=\"Description\" onChange={this.onChange}/>\r\n                <Autosuggest \r\n                suggestions={suggestions}\r\n                onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n                onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n                getSuggestionValue={getSuggestionValue}\r\n                renderSuggestion={renderSuggestion}\r\n                inputProps={inputProps} />\r\n                <Select \r\n                    options = {u_options}\r\n                    maxMenuHeight={150}\r\n                    closeMenuOnSelect={true}\r\n                    value = {selectedUseOption} \r\n                    onChange = {this.handleUseSelect}\r\n                />\r\n                <Select className = \"select-box\"\r\n                    value = {selectedOption} \r\n                    isMulti\r\n                    maxMenuHeight={150}\r\n                    closeMenuOnSelect={true}\r\n                    onChange = {this.handleSelect}\r\n                    options = {sex_data}\r\n                />\r\n                <input type=\"submit\" className=\"button\" value=\"Save\" onClick={this.insert}/>\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\nexport default InsertCostume;\r\n\r\n"]},"metadata":{},"sourceType":"module"}