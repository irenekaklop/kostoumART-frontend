{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react-costume-platform\\\\src\\\\components\\\\InsertCostume\\\\InsertCostume.js\";\nimport React, { Component } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport { InsertData } from '../../services/InsertData';\nimport { Redirect } from 'react-router-dom';\n\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.name;\n}\n\nfunction renderSuggestion(suggestion) {\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, suggestion.name);\n}\n\nclass InsertCostume extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSuggestionsFetchRequested = ({\n      value\n    }) => {\n      this.setState({\n        suggestions: this.getSuggestions(value)\n      });\n    };\n\n    this.onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    this.state = {\n      name: '',\n      descr: '',\n      //date: '',\n      //sex: '',\n      //Uses' data\n      u_arrdata: [],\n      u_data: '',\n      //for Use suggestion\n      u_value: '',\n      suggestion: [],\n      redirectToReferrer: false\n    };\n    this.insert = this.insert.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n  /*Functions for use suggestions*/\n\n\n  getSuggestions(value) {\n    const escapedValue = escapeRegexCharacters(value.trim());\n\n    if (escapedValue === '') {\n      return [];\n    }\n\n    const regex = new RegExp('^' + escapedValue, 'i');\n    return this.state.data.filter(costumeData => regex.test(costumeData.name));\n  }\n\n  /*Insert of costume*/\n  insert() {\n    if (this.state.name && this.state.descr) {\n      InsertData('insertCostume', this.state).then(result => {\n        let responseJson = result;\n\n        if (responseJson.costumeData) {\n          sessionStorage.setItem('costumeData', JSON.stringify(responseJson));\n          this.setState({\n            redirectToReferrer: true\n          });\n        } else alert(result.error);\n      });\n    }\n  }\n\n  render() {\n    if (this.state.redirectToReferrer) {\n      return sessionStorage.setItem('costumeData', ''), sessionStorage.clear(), React.createElement(Redirect, {\n        to: '/success',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      });\n    } else if (sessionStorage.getItem('costumeData')) {\n      sessionStorage.setItem('costumeData', '');\n      sessionStorage.clear();\n    }\n\n    return React.createElement(\"div\", {\n      className: \"row \",\n      id: \"sBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"medium-5 columns left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Insert Costume Data\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Name\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"descr\",\n      placeholder: \"Description\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"button\",\n      value: \"Save\",\n      onClick: this.insert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default InsertCostume;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\react-costume-platform\\src\\components\\InsertCostume\\InsertCostume.js"],"names":["React","Component","Autosuggest","InsertData","Redirect","escapeRegexCharacters","str","replace","getSuggestionValue","suggestion","name","renderSuggestion","InsertCostume","constructor","props","onSuggestionsFetchRequested","value","setState","suggestions","getSuggestions","onSuggestionsClearRequested","state","descr","u_arrdata","u_data","u_value","redirectToReferrer","insert","bind","onChange","e","target","escapedValue","trim","regex","RegExp","data","filter","costumeData","test","then","result","responseJson","sessionStorage","setItem","JSON","stringify","alert","error","render","clear","getItem"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport {InsertData} from '../../services/InsertData';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nfunction escapeRegexCharacters(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n    return suggestion.name;\r\n}\r\n  \r\nfunction renderSuggestion(suggestion) {\r\n    return (\r\n      <span>{suggestion.name}</span>\r\n    );\r\n}\r\n\r\nclass InsertCostume extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n        name: '',\r\n        descr: '',\r\n        //date: '',\r\n        //sex: '',\r\n        //Uses' data\r\n        u_arrdata:[],\r\n        u_data: '',\r\n        //for Use suggestion\r\n        u_value: '',\r\n        suggestion: [],\r\n        redirectToReferrer: false\r\n        };\r\n        this.insert = this.insert.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value});\r\n    }\r\n\r\n    /*Functions for use suggestions*/\r\n\r\n    onSuggestionsFetchRequested = ({ value }) => {\r\n        this.setState({\r\n          suggestions: this.getSuggestions(value)\r\n        });\r\n    };\r\n    \r\n    onSuggestionsClearRequested = () => {\r\n        this.setState({\r\n          suggestions: []\r\n        });\r\n    };\r\n\r\n    getSuggestions(value) {\r\n        const escapedValue = escapeRegexCharacters(value.trim());\r\n        \r\n        if (escapedValue === '') {\r\n          return [];\r\n        }\r\n      \r\n        const regex = new RegExp('^' + escapedValue, 'i');\r\n      \r\n        return this.state.data.filter(costumeData => regex.test(costumeData.name));\r\n    };\r\n\r\n\r\n    /*Insert of costume*/\r\n\r\n    insert() {\r\n        if(this.state.name && this.state.descr){\r\n            InsertData('insertCostume',this.state).then((result) => {\r\n            let responseJson = result;\r\n            if(responseJson.costumeData){\r\n                sessionStorage.setItem('costumeData',JSON.stringify(responseJson));\r\n                this.setState({redirectToReferrer: true});\r\n            }\r\n            else\r\n                alert(result.error);\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirectToReferrer) {\r\n            return (\r\n                sessionStorage.setItem('costumeData',''),\r\n                sessionStorage.clear(),\r\n                <Redirect to={'/success'}/>)\r\n        }\r\n        else if (sessionStorage.getItem('costumeData')){\r\n            sessionStorage.setItem('costumeData','');\r\n            sessionStorage.clear();\r\n        }\r\n        return (\r\n            <div className=\"row \" id=\"sBody\">\r\n            <div className=\"medium-5 columns left\">\r\n            <h4>Insert Costume Data</h4>\r\n            <input type=\"text\" name=\"name\" placeholder=\"Name\" onChange={this.onChange}/>\r\n            <input type=\"text\" name=\"descr\" placeholder=\"Description\" onChange={this.onChange}/>\r\n            <input type=\"submit\" className=\"button\" value=\"Save\" onClick={this.insert}/>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default InsertCostume;"]},"metadata":{},"sourceType":"module"}