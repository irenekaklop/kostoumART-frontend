{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react-costume-platform\\\\src\\\\components\\\\Autocomplete\\\\Autocomplete.js\";\nimport React from 'react'; // https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expressions#Using_Special_Characters\n\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSuggestions(value) {\n  const escapedValue = escapeRegexCharacters(value.trim());\n\n  if (escapedValue === '') {\n    return [];\n  }\n\n  const regex = new RegExp('^' + escapedValue, 'i');\n  return languages.filter(language => regex.test(language.name));\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.name;\n}\n\nfunction renderSuggestion(suggestion) {\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, suggestion.name);\n}\n\nclass Autocomplete extends React.Component {\n  constructor() {\n    super();\n\n    this.onChange = (event, {\n      newValue,\n      method\n    }) => {\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.onSuggestionsFetchRequested = ({\n      value\n    }) => {\n      this.setState({\n        suggestions: getSuggestions(value)\n      });\n    };\n\n    this.onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    this.state = {\n      value: '',\n      suggestions: []\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          value = _this$state.value,\n          suggestions = _this$state.suggestions;\n    const inputProps = {\n      placeholder: \"Type 'c'\",\n      value,\n      onChange: this.onChange\n    };\n    return React.createElement(Autosuggest, {\n      suggestions: suggestions,\n      onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n      getSuggestionValue: getSuggestionValue,\n      renderSuggestion: renderSuggestion,\n      inputProps: inputProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Autocomplete;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\react-costume-platform\\src\\components\\Autocomplete\\Autocomplete.js"],"names":["React","escapeRegexCharacters","str","replace","getSuggestions","value","escapedValue","trim","regex","RegExp","languages","filter","language","test","name","getSuggestionValue","suggestion","renderSuggestion","Autocomplete","Component","constructor","onChange","event","newValue","method","setState","onSuggestionsFetchRequested","suggestions","onSuggestionsClearRequested","state","render","inputProps","placeholder"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,SAASC,qBAAT,CAA+BC,GAA/B,EAAoC;AAChC,SAAOA,GAAG,CAACC,OAAJ,CAAY,qBAAZ,EAAmC,MAAnC,CAAP;AACH;;AAEC,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,QAAMC,YAAY,GAAGL,qBAAqB,CAACI,KAAK,CAACE,IAAN,EAAD,CAA1C;;AAEA,MAAID,YAAY,KAAK,EAArB,EAAyB;AACvB,WAAO,EAAP;AACD;;AAED,QAAME,KAAK,GAAG,IAAIC,MAAJ,CAAW,MAAMH,YAAjB,EAA+B,GAA/B,CAAd;AAEA,SAAOI,SAAS,CAACC,MAAV,CAAiBC,QAAQ,IAAIJ,KAAK,CAACK,IAAN,CAAWD,QAAQ,CAACE,IAApB,CAA7B,CAAP;AACD;;AAED,SAASC,kBAAT,CAA4BC,UAA5B,EAAwC;AACtC,SAAOA,UAAU,CAACF,IAAlB;AACD;;AAED,SAASG,gBAAT,CAA0BD,UAA1B,EAAsC;AACpC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,UAAU,CAACF,IAAlB,CADF;AAGD;;AAEH,MAAMI,YAAN,SAA2BlB,KAAK,CAACmB,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SASdC,QATc,GASH,CAACC,KAAD,EAAQ;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAR,KAAiC;AAC1C,WAAKC,QAAL,CAAc;AACZpB,QAAAA,KAAK,EAAEkB;AADK,OAAd;AAGD,KAba;;AAAA,SAedG,2BAfc,GAegB,CAAC;AAAErB,MAAAA;AAAF,KAAD,KAAe;AAC3C,WAAKoB,QAAL,CAAc;AACZE,QAAAA,WAAW,EAAEvB,cAAc,CAACC,KAAD;AADf,OAAd;AAGD,KAnBa;;AAAA,SAqBduB,2BArBc,GAqBgB,MAAM;AAClC,WAAKH,QAAL,CAAc;AACZE,QAAAA,WAAW,EAAE;AADD,OAAd;AAGD,KAzBa;;AAGZ,SAAKE,KAAL,GAAa;AACXxB,MAAAA,KAAK,EAAE,EADI;AAEXsB,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID;;AAoBDG,EAAAA,MAAM,GAAG;AAAA,wBACwB,KAAKD,KAD7B;AAAA,UACCxB,KADD,eACCA,KADD;AAAA,UACQsB,WADR,eACQA,WADR;AAEP,UAAMI,UAAU,GAAG;AACjBC,MAAAA,WAAW,EAAE,UADI;AAEjB3B,MAAAA,KAFiB;AAGjBgB,MAAAA,QAAQ,EAAE,KAAKA;AAHE,KAAnB;AAMA,WACE,oBAAC,WAAD;AACE,MAAA,WAAW,EAAEM,WADf;AAEE,MAAA,2BAA2B,EAAE,KAAKD,2BAFpC;AAGE,MAAA,2BAA2B,EAAE,KAAKE,2BAHpC;AAIE,MAAA,kBAAkB,EAAEb,kBAJtB;AAKE,MAAA,gBAAgB,EAAEE,gBALpB;AAME,MAAA,UAAU,EAAEc,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD;;AA7CsC;;AAgD3C,eAAeb,YAAf","sourcesContent":["import React from 'react';\r\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expressions#Using_Special_Characters\r\n  \r\nfunction escapeRegexCharacters(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n  \r\n  function getSuggestions(value) {\r\n    const escapedValue = escapeRegexCharacters(value.trim());\r\n    \r\n    if (escapedValue === '') {\r\n      return [];\r\n    }\r\n  \r\n    const regex = new RegExp('^' + escapedValue, 'i');\r\n  \r\n    return languages.filter(language => regex.test(language.name));\r\n  }\r\n  \r\n  function getSuggestionValue(suggestion) {\r\n    return suggestion.name;\r\n  }\r\n  \r\n  function renderSuggestion(suggestion) {\r\n    return (\r\n      <span>{suggestion.name}</span>\r\n    );\r\n  }\r\n  \r\nclass Autocomplete extends React.Component {\r\n    constructor() {\r\n      super();\r\n  \r\n      this.state = {\r\n        value: '',\r\n        suggestions: []\r\n      };    \r\n    }\r\n  \r\n    onChange = (event, { newValue, method }) => {\r\n      this.setState({\r\n        value: newValue\r\n      });\r\n    };\r\n    \r\n    onSuggestionsFetchRequested = ({ value }) => {\r\n      this.setState({\r\n        suggestions: getSuggestions(value)\r\n      });\r\n    };\r\n  \r\n    onSuggestionsClearRequested = () => {\r\n      this.setState({\r\n        suggestions: []\r\n      });\r\n    };\r\n  \r\n    render() {\r\n      const { value, suggestions } = this.state;\r\n      const inputProps = {\r\n        placeholder: \"Type 'c'\",\r\n        value,\r\n        onChange: this.onChange\r\n      };\r\n  \r\n      return (\r\n        <Autosuggest \r\n          suggestions={suggestions}\r\n          onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n          onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n          getSuggestionValue={getSuggestionValue}\r\n          renderSuggestion={renderSuggestion}\r\n          inputProps={inputProps} />\r\n      );\r\n    }\r\n  }\r\n  \r\nexport default Autocomplete;\r\n  "]},"metadata":{},"sourceType":"module"}