{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react-costume-platform\\\\src\\\\components\\\\Autocomplete\\\\Autocomplete.js\";\nimport React from 'react'; // https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expressions#Using_Special_Characters\n\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSuggestions(value) {\n  return suggestion.filter(suggestions => regex.test(suggestions.name));\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.name;\n}\n\nfunction renderSuggestion(suggestion) {\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, suggestion.name);\n}\n\nclass Autocomplete extends React.Component {\n  constructor() {\n    super();\n\n    this.getInfo = () => {\n      InsertData('costumes', this.state).then(result => {\n        let responseJson = result;\n\n        if (responseJson.costumeData) {\n          sessionStorage.setItem(\"value\", JSON.stringify(responseJson));\n          this.setState({\n            suggestions: responseJson.costumeData\n          });\n          console.log(this.state);\n        } else {\n          alert(result.error);\n        }\n      });\n    };\n\n    this.onChange = (event, {\n      newValue,\n      method\n    }) => {\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.onSuggestionsFetchRequested = ({\n      value\n    }) => {\n      this.setState({\n        suggestions: getSuggestions(value)\n      });\n    };\n\n    this.onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    this.state = {\n      value: '',\n      suggestions: []\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          value = _this$state.value,\n          suggestions = _this$state.suggestions;\n    const inputProps = {\n      placeholder: \"Type 'c'\",\n      value,\n      onChange: this.onChange\n    };\n    return React.createElement(Autosuggest, {\n      suggestions: suggestions,\n      onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n      getSuggestionValue: getSuggestionValue,\n      renderSuggestion: renderSuggestion,\n      inputProps: inputProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Autocomplete;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\react-costume-platform\\src\\components\\Autocomplete\\Autocomplete.js"],"names":["React","escapeRegexCharacters","str","replace","getSuggestions","value","suggestion","filter","suggestions","regex","test","name","getSuggestionValue","renderSuggestion","Autocomplete","Component","constructor","getInfo","InsertData","state","then","result","responseJson","costumeData","sessionStorage","setItem","JSON","stringify","setState","console","log","alert","error","onChange","event","newValue","method","onSuggestionsFetchRequested","onSuggestionsClearRequested","render","inputProps","placeholder"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,SAASC,qBAAT,CAA+BC,GAA/B,EAAoC;AAChC,SAAOA,GAAG,CAACC,OAAJ,CAAY,qBAAZ,EAAmC,MAAnC,CAAP;AACH;;AAEC,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,SAAOC,UAAU,CAACC,MAAX,CAAkBC,WAAW,IAAIC,KAAK,CAACC,IAAN,CAAWF,WAAW,CAACG,IAAvB,CAAjC,CAAP;AACD;;AAED,SAASC,kBAAT,CAA4BN,UAA5B,EAAwC;AACtC,SAAOA,UAAU,CAACK,IAAlB;AACD;;AAED,SAASE,gBAAT,CAA0BP,UAA1B,EAAsC;AACpC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,UAAU,CAACK,IAAlB,CADF;AAGD;;AAEH,MAAMG,YAAN,SAA2Bd,KAAK,CAACe,SAAjC,CAA2C;AAEvCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SASdC,OATc,GASJ,MAAM;AACZC,MAAAA,UAAU,CAAC,UAAD,EAAa,KAAKC,KAAlB,CAAV,CAAmCC,IAAnC,CAAyCC,MAAD,IAAY;AAChD,YAAIC,YAAY,GAAGD,MAAnB;;AACA,YAAGC,YAAY,CAACC,WAAhB,EAA4B;AACxBC,UAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAA+BC,IAAI,CAACC,SAAL,CAAeL,YAAf,CAA/B;AACA,eAAKM,QAAL,CAAc;AAACpB,YAAAA,WAAW,EAAEc,YAAY,CAACC;AAA3B,WAAd;AACAM,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAjB;AACH,SAJD,MAKI;AACAY,UAAAA,KAAK,CAACV,MAAM,CAACW,KAAR,CAAL;AACH;AACJ,OAVD;AAWH,KArBa;;AAAA,SAuBdC,QAvBc,GAuBH,CAACC,KAAD,EAAQ;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAR,KAAiC;AAC1C,WAAKR,QAAL,CAAc;AACZvB,QAAAA,KAAK,EAAE8B;AADK,OAAd;AAGD,KA3Ba;;AAAA,SA6BdE,2BA7Bc,GA6BgB,CAAC;AAAEhC,MAAAA;AAAF,KAAD,KAAe;AAC3C,WAAKuB,QAAL,CAAc;AACZpB,QAAAA,WAAW,EAAEJ,cAAc,CAACC,KAAD;AADf,OAAd;AAGD,KAjCa;;AAAA,SAmCdiC,2BAnCc,GAmCgB,MAAM;AAClC,WAAKV,QAAL,CAAc;AACZpB,QAAAA,WAAW,EAAE;AADD,OAAd;AAGD,KAvCa;;AAGZ,SAAKW,KAAL,GAAa;AACXd,MAAAA,KAAK,EAAE,EADI;AAEXG,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID;;AAkCD+B,EAAAA,MAAM,GAAG;AAAA,wBACwB,KAAKpB,KAD7B;AAAA,UACCd,KADD,eACCA,KADD;AAAA,UACQG,WADR,eACQA,WADR;AAEP,UAAMgC,UAAU,GAAG;AACjBC,MAAAA,WAAW,EAAE,UADI;AAEjBpC,MAAAA,KAFiB;AAGjB4B,MAAAA,QAAQ,EAAE,KAAKA;AAHE,KAAnB;AAMA,WACE,oBAAC,WAAD;AACE,MAAA,WAAW,EAAEzB,WADf;AAEE,MAAA,2BAA2B,EAAE,KAAK6B,2BAFpC;AAGE,MAAA,2BAA2B,EAAE,KAAKC,2BAHpC;AAIE,MAAA,kBAAkB,EAAE1B,kBAJtB;AAKE,MAAA,gBAAgB,EAAEC,gBALpB;AAME,MAAA,UAAU,EAAE2B,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD;;AA5DsC;;AA+D3C,eAAe1B,YAAf","sourcesContent":["import React from 'react';\r\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expressions#Using_Special_Characters\r\n  \r\nfunction escapeRegexCharacters(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n  \r\n  function getSuggestions(value) {\r\n    return suggestion.filter(suggestions => regex.test(suggestions.name));\r\n  }\r\n  \r\n  function getSuggestionValue(suggestion) {\r\n    return suggestion.name;\r\n  }\r\n  \r\n  function renderSuggestion(suggestion) {\r\n    return (\r\n      <span>{suggestion.name}</span>\r\n    );\r\n  }\r\n  \r\nclass Autocomplete extends React.Component {\r\n    \r\n    constructor() {\r\n      super();\r\n  \r\n      this.state = {\r\n        value: '',\r\n        suggestions: []\r\n      };    \r\n    }\r\n\r\n    getInfo = () => {\r\n        InsertData('costumes', this.state).then((result) => {\r\n            let responseJson = result;\r\n            if(responseJson.costumeData){\r\n                sessionStorage.setItem(\"value\",JSON.stringify(responseJson));\r\n                this.setState({suggestions: responseJson.costumeData});\r\n                console.log(this.state);\r\n            }\r\n            else{\r\n                alert(result.error);\r\n            }\r\n        });\r\n    }\r\n  \r\n    onChange = (event, { newValue, method }) => {\r\n      this.setState({\r\n        value: newValue\r\n      });\r\n    };\r\n    \r\n    onSuggestionsFetchRequested = ({ value }) => {\r\n      this.setState({\r\n        suggestions: getSuggestions(value)\r\n      });\r\n    };\r\n  \r\n    onSuggestionsClearRequested = () => {\r\n      this.setState({\r\n        suggestions: []\r\n      });\r\n    };\r\n  \r\n    render() {\r\n      const { value, suggestions } = this.state;\r\n      const inputProps = {\r\n        placeholder: \"Type 'c'\",\r\n        value,\r\n        onChange: this.onChange\r\n      };\r\n  \r\n      return (\r\n        <Autosuggest \r\n          suggestions={suggestions}\r\n          onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n          onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n          getSuggestionValue={getSuggestionValue}\r\n          renderSuggestion={renderSuggestion}\r\n          inputProps={inputProps} />\r\n      );\r\n    }\r\n  }\r\n  \r\nexport default Autocomplete;\r\n  "]},"metadata":{},"sourceType":"module"}